html {
  font-family: 'Rajdhani', sans-serif;
  background-color: #191719;
  color: #e6dbdc;
  font-size: 21px;
  line-height: 140%;
  font-weight: 400;
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/Rajdhani-Light.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/Rajdhani-Regular.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 500;
  src: url("/fonts/Rajdhani-Medium.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/Rajdhani-SemiBold.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/Rajdhani-Bold.ttf");
}

body {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.layout {
  max-width: 100%;
  margin: auto;
  overflow-x: hidden;
  background-image: url("/images/textures/background-texture-small.jpg");
  background-repeat: repeat;
}

@media all and (min-width:1024px) {
  .layout {
    background-image: url("/images/textures/background-texture-medium.jpg");
  }
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Modular Scale - 1.618 (Golden Ratio)
	 */
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.card__css-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  -ms-grid-columns: repeat(2, 1fr);
  grid-gap: 0.146rem;
  margin: 0 0 1.618rem;
  padding: 0 0.382rem;
}

.card {
  position: relative;
  background-color: #191719;
  border: 1px outset #3f3f3f;
  cursor: pointer;
  overflow: hidden;
  line-height: 0;
}

.card:hover>.card__bg {
  -webkit-transform: scale(1.4);
  -ms-transform: scale(1.4);
  -o-transform: scale(1.4);
  transform: scale(1.4);
}

.card__name {
  position: absolute;
  font-weight: 600;
  font-size: 0.618rem;
  text-transform: uppercase;
  bottom: 1.7rem;
  z-index: 4;
  line-height: 0;
  background-color: rgba(210, 39, 48, 0.8);
  padding: .45rem;
}

.card__bg {
  max-width: 100%;
  -webkit-transition: all .4s;
  -o-transition: all .4s;
  transition: all .4s;
}

.card__tag-line {
  position: relative;
  text-align: center;
  padding: 0.618rem 0;
  font-size: 0.618rem;
  text-transform: uppercase;
}

.card__accent {
  position: absolute;
  width: 100%;
  background-color: #d22730;
  height: 1px;
  bottom: 0;
}

@media all and (min-width:681px) {
  .card__css-grid {
    grid-template-columns: repeat(3, 1fr);
    -ms-grid-columns: repeat(3, 1fr);
    grid-gap: 0.382rem;
    margin: 0 0 2.618rem;
    padding: 0 0.618rem;
  }

  .card__name {
    font-size: 21px;
    bottom: 2.9rem;
    padding: .7rem;
  }

  .card__tag-line {
    font-size: 21px;
    padding: 21px 0;
  }

  .card__accent {
    height: 2px;
  }
}

@media all and (min-width:1024px) {
  .card__css-grid {
    grid-template-columns: repeat(4, 1fr);
    -ms-grid-columns: repeat(4, 1fr);
    padding: 0 1.618rem;
  }

  .card__name {
    bottom: 2.9rem;
    padding: .7rem;
  }
}

@media all and (min-width:1100px) {
  .card__css-grid {
    padding: 0 4.236rem;
    grid-gap: 0.618rem;
  }
}

@media all and (min-width:1200px) {
  .card__css-grid {
    grid-gap: 21px;
  }
}

@media all and (min-width:1440px) {
  .card__css-grid {
    padding: 0 6.854rem;
    margin: 0 0 2.618rem;
  }
}

@media all and (min-width:1720px) {
  .card__css-grid {
    margin: 0 0 4.236rem;
    padding: 0 11.089rem;
    grid-gap: 21px;
  }
}

.footer {
  padding: 0.618rem;
  text-align: center;
  font-size: 0.618rem;
  line-height: 140%;
  box-shadow: 0 0 12px 0 #d22730;
  background: #191719;
}

@media all and (min-width:681px) {
  .footer {
    padding: 21px 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .footer {
    padding: 21px 6.854rem;
  }
}

@media all and (min-width:1100px) {
  .footer {
    padding: 21px 11.089rem;
  }
}

.header {
  display: table;
  text-align: center;
  width: 100%;
  padding: 2.618rem 0 1.618rem 0;
}

.header__logo-text {
  font-size: 1.618rem;
  vertical-align: middle;
  display: table-cell;
  font-weight: 500;
  line-height: 0;
}

.header__logo-emphasis {
  color: #d22730;
  font-weight: 700;
}

@media all and (min-width:681px) {
  .header {
    margin: 1.618rem 0 21px 0;
  }

  .header__logo-text {
    font-size: 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .header {
    margin: 2.618rem 0 1.618rem 0;
  }

  .header__logo-text {
    font-size: 4.236rem;
  }
}

@media all and (min-width:1200px) {
  .header {
    margin: 4.236rem 0 2.618rem 0;
  }

  .header__logo-text {
    font-size: 4.236rem;
  }
}

.login {
  position: absolute;
  z-index: 100;
  left: 50%;
  background-color: red;
}

.list {
  border: 1px solid #ffffff;
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

.list {
  border: 1px solid #ffffff;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9QZWRybyBHYXJjZXovRGVza3RvcC9wcm9qZWN0cy9yZWFjdC1ib2lsZXIvZnJvbnQvc3JjL2NvbXBvbmVudHMvYnVuZGxlLmNzcyIsInNvdXJjZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7OztBQUdEO0VBQ0M7RUFDQTs7O0FBR0Q7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRDtBQUNDO0lBQ0M7Ozs7QUFHRjs7Ozs7QUFLQTtBQUNDOzs7QUFZQTs7O0FBU0E7OztBQVdBOzs7QUFNQTs7O0FBTUE7Ozs7O0FBU0Q7Ozs7O0FBYUE7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRDtFQUNDO0VBQUE7RUFBQTtFQUFBOzs7QUFHRDtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Q7RUFDQztFQUNBO0VBQUE7RUFBQTs7O0FBR0Q7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRDtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0FBQ0M7SUFDQztJQUNBO0lBQ0E7SUFDQTtJQUNBOzs7QUFFRDtJQUNDO0lBQ0E7SUFDQTs7O0FBRUQ7SUFDQztJQUNBOzs7QUFFRDtJQUNDOzs7O0FBSUY7QUFDQztJQUNDO0lBQ0E7SUFDQTs7O0FBR0Q7SUFDQztJQUNBOzs7O0FBSUY7QUFDQztJQUNDO0lBQ0E7Ozs7QUFJRjtBQUNDO0lBQ0M7Ozs7QUFJRjtBQUNDO0lBQ0M7SUFDQTs7OztBQUlGO0FBQ0M7SUFDQztJQUNBO0lBQ0E7Ozs7QUFJRjtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Q7QUFDQztJQUNDOzs7O0FBSUY7QUFDQztJQUNDOzs7O0FBSUY7QUFDQztJQUNDOzs7O0FBSUY7RUFDQztFQUNBO0VBQ0E7RUFDQTs7O0FBR0Q7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRDtFQUNDO0VBQ0E7OztBQUdEO0FBQ0M7SUFDQzs7O0FBRUQ7SUFDQzs7OztBQUlGO0FBQ0M7SUFDQzs7O0FBRUQ7SUFDQzs7OztBQUlGO0FBQ0M7SUFDQzs7O0FBRUQ7SUFDQzs7OztBQUlGO0VBQ0M7RUFDQTtFQUVBO0VBQ0E7OztBQUdEO0VBQ0E7OztBQUdBOzs7OztBQUtDO0VBQ0M7RUFDQTtFQUNEOzs7QUFHQTtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNEOzs7QUFHRDtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0E7OztBQzVCQSIsInNvdXJjZXNDb250ZW50IjpbImh0bWwge1xyXG5cdGZvbnQtZmFtaWx5OiAnUmFqZGhhbmknLCBzYW5zLXNlcmlmO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2tncm91bmQtY29sb3IpO1xyXG5cdGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktY29sb3IpO1xyXG5cdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci1iYXNlKTtcclxuXHRsaW5lLWhlaWdodDogMTQwJTtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTpcIlJhamRoYW5pXCI7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiAzMDA7XHJcblx0c3JjOnVybChcIi9mb250cy9SYWpkaGFuaS1MaWdodC50dGZcIik7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OlwiUmFqZGhhbmlcIjtcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRzcmM6dXJsKFwiL2ZvbnRzL1JhamRoYW5pLVJlZ3VsYXIudHRmXCIpO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTpcIlJhamRoYW5pXCI7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0c3JjOnVybChcIi9mb250cy9SYWpkaGFuaS1NZWRpdW0udHRmXCIpO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTpcIlJhamRoYW5pXCI7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA2MDA7XHJcblx0c3JjOnVybChcIi9mb250cy9SYWpkaGFuaS1TZW1pQm9sZC50dGZcIik7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OlwiUmFqZGhhbmlcIjtcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRzcmM6dXJsKFwiL2ZvbnRzL1JhamRoYW5pLUJvbGQudHRmXCIpO1xyXG59XHJcblxyXG5ib2R5IHtcclxuXHRtYXJnaW46IDA7XHJcbn1cclxuXHJcbmEge1xyXG5cdGNvbG9yOiBpbmhlcml0O1xyXG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLmxheW91dCB7XHJcblx0bWF4LXdpZHRoOiAxMDAlO1xyXG5cdG1hcmdpbjogYXV0bztcclxuXHRvdmVyZmxvdy14OiBoaWRkZW47XHJcblx0YmFja2dyb3VuZC1pbWFnZTogdmFyKC0tYmFja2dyb3VuZC10ZXh0dXJlLXNtYWxsKTtcclxuXHRiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xyXG59XHJcblxyXG5AbWVkaWEgKC0tdGFibGV0LWxhcmdlKSB7XHJcblx0LmxheW91dCB7XHJcblx0XHRiYWNrZ3JvdW5kLWltYWdlOiB2YXIoLS1iYWNrZ3JvdW5kLXRleHR1cmUtbWVkaXVtKTtcclxuXHR9XHJcbn1cbi8qKipcclxuICogVmFyaWFibGVzXHJcbiAqIC1cclxuICovXHJcblxyXG46cm9vdCB7XHJcblx0LypcclxuXHQgKiBNb2R1bGFyIFNjYWxlIC0gMS42MTggKEdvbGRlbiBSYXRpbylcclxuXHQgKi9cclxuXHQtLW1vZHVsYXIteHh4czogMC4wOXJlbTtcclxuXHQtLW1vZHVsYXIteHhzOiAwLjE0NnJlbTtcclxuXHQtLW1vZHVsYXIteHM6IDAuMzgycmVtO1xyXG5cdC0tbW9kdWxhci1zOiAwLjYxOHJlbTtcclxuXHQtLW1vZHVsYXItYmFzZTogMjFweDtcclxuXHQtLW1vZHVsYXItbDogMS42MThyZW07XHJcblx0LS1tb2R1bGFyLXhsOiAyLjYxOHJlbTtcclxuXHQtLW1vZHVsYXIteHhsOiA0LjIzNnJlbTtcclxuXHQtLW1vZHVsYXIteHh4bDogNi44NTRyZW07XHJcblx0LypcclxuXHQgKiBUaGVtZVxyXG5cdCAqL1xyXG5cdC0tYmFja2dyb3VuZC10ZXh0dXJlLXNtYWxsOiB1cmwoL2ltYWdlcy90ZXh0dXJlcy9iYWNrZ3JvdW5kLXRleHR1cmUtc21hbGwuanBnKTtcclxuXHQtLWJhY2tncm91bmQtdGV4dHVyZS1tZWRpdW06IHVybCgvaW1hZ2VzL3RleHR1cmVzL2JhY2tncm91bmQtdGV4dHVyZS1tZWRpdW0uanBnKTtcdFxyXG5cdC0tYmFja2dyb3VuZC10ZXh0dXJlLWxhcmdlOiB1cmwoL2ltYWdlcy90ZXh0dXJlcy9iYWNrZ3JvdW5kLXRleHR1cmUtbGFyZ2UuanBnKTtcdFxyXG5cdC0tYmFja2dyb3VuZC1jb2xvcjogIzE5MTcxOTtcclxuXHQtLW1haW4tY29sb3I6ICNkMjI3MzA7XHJcblx0LS1zZWNvbmRhcnktY29sb3I6ICNlNmRiZGM7XHJcblx0LypcclxuXHQgKiBDb2xvcnNcclxuXHQgKi9cclxuXHQtLWNvbG9yLXdoaXRlOiAjZmZmZmZmO1xyXG5cdC0tY29sb3ItZ3JheS1saWdodGVzdDogI2ZjZmNmYztcclxuXHQtLWNvbG9yLWdyYXktbGlnaHRlcjogI2YzZjNmMztcclxuXHQtLWNvbG9yLWdyYXktbGlnaHQ6ICNFMkUyRTI7XHJcblx0LS1jb2xvci1ncmF5LW1lZGl1bS1saWdodDogI2RkZGRkZDtcclxuXHQtLWNvbG9yLWdyYXktbWVkaXVtOiAjZWFlYWVhO1xyXG5cdC0tY29sb3ItZ3JheS1kYXJrOiAjNTU1NTU1O1xyXG5cdC0tY29sb3ItZ3JheS1kYXJrZXI6ICMzZjNmM2Y7XHJcblx0LypcclxuXHQgKiBUZXh0c1xyXG5cdCAqL1xyXG5cdC0tY29sb3ItdGV4dC1ncmFwaDogIzNlM2UzZTtcclxuXHQtLWNvbG9yLXRleHQtbGlnaHQ6ICM4Njg2ODY7XHJcblx0LS1jb2xvci10ZXh0LWRhcms6ICM0MTQxNDE7XHJcblx0LypcclxuXHQgKiBBbGVydC9TdGF0dXMgY29sb3JzXHJcblx0ICovXHJcblx0LS1jb2xvci1lcnJvcjogI0RCNDczNjtcclxuXHQtLWNvbG9yLXN1Y2Nlc3M6ICM1RkEwNTI7XHJcblx0LS1jb2xvci13YXJuaW5nOiAjREQ3RjMzO1xyXG5cdC8qXHJcblx0ICogRWFzaW5nc1xyXG5cdCAqL1xyXG5cdC0tZWFzaW5nLWlvczogY3ViaWMtYmV6aWVyKDAuMjMsIDEsIDAuMzIsIDEpO1xyXG5cdC0tZWFzaW5nLWV4cGFuZDogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMjAsIDEuMjc1KTtcclxuXHQtLWVhc2luZy1xdWFkOiBjdWJpYy1iZXppZXIoMC43NzAsIDAuMDAwLCAwLjE3NSwgMS4wMDApO1xyXG59XHJcblxyXG5cclxuLyoqKlxyXG4gKiBNZWRpYSBxdWVyaWVzXHJcbiAqIC1cclxuICovXHJcblxyXG5AY3VzdG9tLW1lZGlhIC0tdGFibGV0IGFsbCBhbmQgKG1pbi13aWR0aDo2ODFweCk7XHJcbkBjdXN0b20tbWVkaWEgLS10YWJsZXQtbGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjEwMjRweCk7XHJcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLXNtYWxsIGFsbCBhbmQgKG1pbi13aWR0aDoxMTAwcHgpO1xyXG5AY3VzdG9tLW1lZGlhIC0tZGVza3RvcC1tZWRpdW0gYWxsIGFuZCAobWluLXdpZHRoOjEyMDBweCk7XHJcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLWxhcmdlIGFsbCBhbmQgKG1pbi13aWR0aDoxNDQwcHgpO1xyXG5AY3VzdG9tLW1lZGlhIC0tZGVza3RvcC14bGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjE3MjBweCk7XHJcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLXh4bGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjE5MjBweCk7XHJcblxuLmNhcmRfX2Nzcy1ncmlkIHtcclxuXHRkaXNwbGF5OiBncmlkO1xyXG5cdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XHJcblx0LW1zLWdyaWQtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XHJcblx0Z3JpZC1nYXA6IHZhcigtLW1vZHVsYXIteHhzKTtcclxuXHRtYXJnaW46IDAgMCB2YXIoLS1tb2R1bGFyLWwpO1xyXG5cdHBhZGRpbmc6IDAgdmFyKC0tbW9kdWxhci14cyk7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XHJcblx0Ym9yZGVyOiAxcHggb3V0c2V0IHZhcigtLWNvbG9yLWdyYXktZGFya2VyKTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRsaW5lLWhlaWdodDogMDtcclxufVxyXG5cclxuLmNhcmQ6aG92ZXI+LmNhcmRfX2JnIHtcclxuXHR0cmFuc2Zvcm06IHNjYWxlKDEuNCk7XHJcbn1cclxuXHJcbi5jYXJkX19uYW1lIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0Zm9udC13ZWlnaHQ6IDYwMDtcclxuXHRmb250LXNpemU6IHZhcigtLW1vZHVsYXItcyk7XHJcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHRib3R0b206IDEuN3JlbTtcclxuXHR6LWluZGV4OiA0O1xyXG5cdGxpbmUtaGVpZ2h0OiAwO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjEwLCAzOSwgNDgsIDAuOCk7XHJcblx0cGFkZGluZzogLjQ1cmVtO1xyXG59XHJcblxyXG4uY2FyZF9fYmcge1xyXG5cdG1heC13aWR0aDogMTAwJTtcclxuXHR0cmFuc2l0aW9uOiBhbGwgLjRzO1xyXG59XHJcblxyXG4uY2FyZF9fdGFnLWxpbmUge1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0cGFkZGluZzogdmFyKC0tbW9kdWxhci1zKSAwO1xyXG5cdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci1zKTtcclxuXHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG4uY2FyZF9fYWNjZW50IHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbi1jb2xvcik7XHJcblx0aGVpZ2h0OiAxcHg7XHJcblx0Ym90dG9tOiAwO1xyXG59XHJcblxyXG5AbWVkaWEgKC0tdGFibGV0KSB7XHJcblx0LmNhcmRfX2Nzcy1ncmlkIHtcclxuXHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XHJcblx0XHQtbXMtZ3JpZC1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcclxuXHRcdGdyaWQtZ2FwOiB2YXIoLS1tb2R1bGFyLXhzKTtcclxuXHRcdG1hcmdpbjogMCAwIHZhcigtLW1vZHVsYXIteGwpO1xyXG5cdFx0cGFkZGluZzogMCB2YXIoLS1tb2R1bGFyLXMpO1xyXG5cdH1cclxuXHQuY2FyZF9fbmFtZSB7XHJcblx0XHRmb250LXNpemU6IHZhcigtLW1vZHVsYXItYmFzZSk7XHJcblx0XHRib3R0b206IDIuOXJlbTtcclxuXHRcdHBhZGRpbmc6IC43cmVtO1xyXG5cdH1cclxuXHQuY2FyZF9fdGFnLWxpbmUge1xyXG5cdFx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLWJhc2UpO1x0XHJcblx0XHRwYWRkaW5nOiB2YXIoLS1tb2R1bGFyLWJhc2UpIDA7XHRcclxuXHR9XHJcblx0LmNhcmRfX2FjY2VudCB7XHJcblx0XHRoZWlnaHQ6IDJweDtcclxuXHR9XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQtbGFyZ2UpIHtcclxuXHQuY2FyZF9fY3NzLWdyaWQge1xyXG5cdFx0Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMWZyKTtcclxuXHRcdC1tcy1ncmlkLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xyXG5cdFx0cGFkZGluZzogMCB2YXIoLS1tb2R1bGFyLWwpO1xyXG5cdFxyXG5cdH1cclxuXHQuY2FyZF9fbmFtZSB7XHJcblx0XHRib3R0b206IDIuOXJlbTtcclxuXHRcdHBhZGRpbmc6IC43cmVtO1xyXG5cdH1cclxufVxyXG5cclxuQG1lZGlhICgtLWRlc2t0b3Atc21hbGwpIHtcclxuXHQuY2FyZF9fY3NzLWdyaWQge1xyXG5cdFx0cGFkZGluZzogMCB2YXIoLS1tb2R1bGFyLXh4bCk7XHJcblx0XHRncmlkLWdhcDogdmFyKC0tbW9kdWxhci1zKTtcdFxyXG5cdH1cclxufVxyXG5cclxuQG1lZGlhICgtLWRlc2t0b3AtbWVkaXVtKSB7XHJcblx0LmNhcmRfX2Nzcy1ncmlkIHtcclxuXHRcdGdyaWQtZ2FwOiB2YXIoLS1tb2R1bGFyLWJhc2UpO1xyXG5cdH1cclxufVxyXG5cclxuQG1lZGlhICgtLWRlc2t0b3AtbGFyZ2UpIHtcclxuXHQuY2FyZF9fY3NzLWdyaWQge1xyXG5cdFx0cGFkZGluZzogMCB2YXIoLS1tb2R1bGFyLXh4eGwpO1xyXG5cdFx0bWFyZ2luOiAwIDAgdmFyKC0tbW9kdWxhci14bCk7XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgKC0tZGVza3RvcC14bGFyZ2UpIHtcclxuXHQuY2FyZF9fY3NzLWdyaWQge1xyXG5cdFx0bWFyZ2luOiAwIDAgdmFyKC0tbW9kdWxhci14eGwpO1xyXG5cdFx0cGFkZGluZzogMCAxMS4wODlyZW07XHJcblx0XHRncmlkLWdhcDogdmFyKC0tbW9kdWxhci1iYXNlKTtcdFx0XHJcblx0fVxyXG59XHJcblxuLmZvb3RlciB7XHJcblx0cGFkZGluZzogdmFyKC0tbW9kdWxhci1zKTtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLXMpO1xyXG5cdGxpbmUtaGVpZ2h0OiAxNDAlO1xyXG5cdGJveC1zaGFkb3c6IDAgMCAxMnB4IDAgdmFyKC0tbWFpbi1jb2xvcik7XHJcblx0YmFja2dyb3VuZDogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQpIHtcclxuXHQuZm9vdGVyIHtcclxuXHRcdHBhZGRpbmc6IHZhcigtLW1vZHVsYXItYmFzZSkgdmFyKC0tbW9kdWxhci14bCk7XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgKC0tdGFibGV0LWxhcmdlKSB7XHJcblx0LmZvb3RlciB7XHJcblx0XHRwYWRkaW5nOiB2YXIoLS1tb2R1bGFyLWJhc2UpIHZhcigtLW1vZHVsYXIteHh4bCk7XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgKC0tZGVza3RvcC1zbWFsbCkge1xyXG5cdC5mb290ZXIge1xyXG5cdFx0cGFkZGluZzogdmFyKC0tbW9kdWxhci1iYXNlKSAxMS4wODlyZW07XHJcblx0fVxyXG59XHJcblxuLmhlYWRlciB7XHJcblx0ZGlzcGxheTogdGFibGU7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdHBhZGRpbmc6IHZhcigtLW1vZHVsYXIteGwpIDAgdmFyKC0tbW9kdWxhci1sKSAwO1xyXG59XHJcblxyXG4uaGVhZGVyX19sb2dvLXRleHQge1xyXG5cdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci1sKTtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG5cdGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcblx0Zm9udC13ZWlnaHQ6IDUwMDtcclxuXHRsaW5lLWhlaWdodDogMDtcclxufVxyXG5cclxuLmhlYWRlcl9fbG9nby1lbXBoYXNpcyB7XHJcblx0Y29sb3I6IHZhcigtLW1haW4tY29sb3IpO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQpIHtcclxuXHQuaGVhZGVyIHtcclxuXHRcdG1hcmdpbjogdmFyKC0tbW9kdWxhci1sKSAwIHZhcigtLW1vZHVsYXItYmFzZSkgMDtcclxuXHR9XHJcblx0LmhlYWRlcl9fbG9nby10ZXh0IHtcclxuXHRcdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci14bCk7XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgKC0tdGFibGV0LWxhcmdlKSB7XHJcblx0LmhlYWRlciB7XHJcblx0XHRtYXJnaW46IHZhcigtLW1vZHVsYXIteGwpIDAgdmFyKC0tbW9kdWxhci1sKSAwO1xyXG5cdH1cclxuXHQuaGVhZGVyX19sb2dvLXRleHQge1xyXG5cdFx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLXh4bCk7XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgKC0tZGVza3RvcC1tZWRpdW0pIHtcclxuXHQuaGVhZGVyIHtcclxuXHRcdG1hcmdpbjogdmFyKC0tbW9kdWxhci14eGwpIDAgdmFyKC0tbW9kdWxhci14bCkgMDtcclxuXHR9XHJcblx0LmhlYWRlcl9fbG9nby10ZXh0IHtcclxuXHRcdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci14eGwpO1xyXG5cdH1cclxufVxyXG5cbi5sb2dpbiB7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHotaW5kZXg6IDEwMDtcclxuXHJcblx0bGVmdDogNTAlO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG5cbi5saXN0IHtcclxuYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3Itd2hpdGUpO1xyXG59XHJcblxuLypcclxuICogU2VhcmNoYmFyXHJcbiAqID09PT09PT09PVxyXG4gKi9cclxuXHJcbiAuc2VhcmNoYmFyIHtcclxuIFx0aGVpZ2h0OjFyZW07XHJcbiBcdHRleHQtYWxpZ246Y2VudGVyO1xyXG5cdHBhZGRpbmctYm90dG9tOjVyZW07XHJcbiB9XHJcblxyXG4gaW5wdXQge1xyXG4gXHRvdXRsaW5lOiBub25lO1xyXG4gXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuIFx0Ym9yZGVyOiBub25lO1xyXG4gXHRjb2xvcjojRjhGOEZGO1xyXG4gXHR0ZXh0LXNoYWRvdzogMHB4IDBweCAwcHggI0Y4RjhGRjtcclxuIFx0LXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6IHRyYW5zcGFyZW50O1xyXG5cdG9wYWNpdHk6Ljc7XHJcbiB9XHJcblxyXG4uc2VhcmNoYmFyX19iYXIge1xyXG5cdG1hcmdpbjphdXRvO1xyXG5cdHdpZHRoOjIwcmVtO1xyXG5cdGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNGOEY4RkY7XHJcblx0cGFkZGluZzouNXJlbTtcclxuXHRmb250LXNpemU6MS4zcmVtO1xyXG59XHJcblxuLmxpc3Qge1xyXG5ib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1jb2xvci13aGl0ZSk7XHJcbn1cclxuIiwiaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiAnUmFqZGhhbmknLCBzYW5zLXNlcmlmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTkxNzE5O1xuICBjb2xvcjogI2U2ZGJkYztcbiAgZm9udC1zaXplOiAyMXB4O1xuICBsaW5lLWhlaWdodDogMTQwJTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJhamRoYW5pXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgc3JjOiB1cmwoXCIvZm9udHMvUmFqZGhhbmktTGlnaHQudHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUmFqZGhhbmlcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBzcmM6IHVybChcIi9mb250cy9SYWpkaGFuaS1SZWd1bGFyLnR0ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJhamRoYW5pXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgc3JjOiB1cmwoXCIvZm9udHMvUmFqZGhhbmktTWVkaXVtLnR0ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJhamRoYW5pXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgc3JjOiB1cmwoXCIvZm9udHMvUmFqZGhhbmktU2VtaUJvbGQudHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUmFqZGhhbmlcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBzcmM6IHVybChcIi9mb250cy9SYWpkaGFuaS1Cb2xkLnR0ZlwiKTtcbn1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5sYXlvdXQge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogYXV0bztcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy90ZXh0dXJlcy9iYWNrZ3JvdW5kLXRleHR1cmUtc21hbGwuanBnKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDoxMDI0cHgpIHtcbiAgLmxheW91dCB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvdGV4dHVyZXMvYmFja2dyb3VuZC10ZXh0dXJlLW1lZGl1bS5qcGcpO1xuICB9XG59XG5cbi8qKipcclxuICogVmFyaWFibGVzXHJcbiAqIC1cclxuICovXG5cbjpyb290IHtcbiAgLypcclxuXHQgKiBNb2R1bGFyIFNjYWxlIC0gMS42MTggKEdvbGRlbiBSYXRpbylcclxuXHQgKi9cbiAgLypcclxuXHQgKiBUaGVtZVxyXG5cdCAqL1xuICAvKlxyXG5cdCAqIENvbG9yc1xyXG5cdCAqL1xuICAvKlxyXG5cdCAqIFRleHRzXHJcblx0ICovXG4gIC8qXHJcblx0ICogQWxlcnQvU3RhdHVzIGNvbG9yc1xyXG5cdCAqL1xuICAvKlxyXG5cdCAqIEVhc2luZ3NcclxuXHQgKi9cbn1cblxuLyoqKlxyXG4gKiBNZWRpYSBxdWVyaWVzXHJcbiAqIC1cclxuICovXG5cbi5jYXJkX19jc3MtZ3JpZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIC1tcy1ncmlkLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICBncmlkLWdhcDogMC4xNDZyZW07XG4gIG1hcmdpbjogMCAwIDEuNjE4cmVtO1xuICBwYWRkaW5nOiAwIDAuMzgycmVtO1xufVxuXG4uY2FyZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE5MTcxOTtcbiAgYm9yZGVyOiAxcHggb3V0c2V0ICMzZjNmM2Y7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG5cbi5jYXJkOmhvdmVyPi5jYXJkX19iZyB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMS40KTtcbiAgICAgICAtby10cmFuc2Zvcm06IHNjYWxlKDEuNCk7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xufVxuXG4uY2FyZF9fbmFtZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAwLjYxOHJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYm90dG9tOiAxLjdyZW07XG4gIHotaW5kZXg6IDQ7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMCwgMzksIDQ4LCAwLjgpO1xuICBwYWRkaW5nOiAuNDVyZW07XG59XG5cbi5jYXJkX19iZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjRzO1xuICAgICAgIC1vLXRyYW5zaXRpb246IGFsbCAuNHM7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC40cztcbn1cblxuLmNhcmRfX3RhZy1saW5lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuNjE4cmVtIDA7XG4gIGZvbnQtc2l6ZTogMC42MThyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5jYXJkX19hY2NlbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDIyNzMwO1xuICBoZWlnaHQ6IDFweDtcbiAgYm90dG9tOiAwO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOjY4MXB4KSB7XG4gIC5jYXJkX19jc3MtZ3JpZCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbiAgICBncmlkLWdhcDogMC4zODJyZW07XG4gICAgbWFyZ2luOiAwIDAgMi42MThyZW07XG4gICAgcGFkZGluZzogMCAwLjYxOHJlbTtcbiAgfVxuXG4gIC5jYXJkX19uYW1lIHtcbiAgICBmb250LXNpemU6IDIxcHg7XG4gICAgYm90dG9tOiAyLjlyZW07XG4gICAgcGFkZGluZzogLjdyZW07XG4gIH1cblxuICAuY2FyZF9fdGFnLWxpbmUge1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgICBwYWRkaW5nOiAyMXB4IDA7XG4gIH1cblxuICAuY2FyZF9fYWNjZW50IHtcbiAgICBoZWlnaHQ6IDJweDtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOjEwMjRweCkge1xuICAuY2FyZF9fY3NzLWdyaWQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgLW1zLWdyaWQtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgcGFkZGluZzogMCAxLjYxOHJlbTtcbiAgfVxuXG4gIC5jYXJkX19uYW1lIHtcbiAgICBib3R0b206IDIuOXJlbTtcbiAgICBwYWRkaW5nOiAuN3JlbTtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOjExMDBweCkge1xuICAuY2FyZF9fY3NzLWdyaWQge1xuICAgIHBhZGRpbmc6IDAgNC4yMzZyZW07XG4gICAgZ3JpZC1nYXA6IDAuNjE4cmVtO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6MTIwMHB4KSB7XG4gIC5jYXJkX19jc3MtZ3JpZCB7XG4gICAgZ3JpZC1nYXA6IDIxcHg7XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDoxNDQwcHgpIHtcbiAgLmNhcmRfX2Nzcy1ncmlkIHtcbiAgICBwYWRkaW5nOiAwIDYuODU0cmVtO1xuICAgIG1hcmdpbjogMCAwIDIuNjE4cmVtO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6MTcyMHB4KSB7XG4gIC5jYXJkX19jc3MtZ3JpZCB7XG4gICAgbWFyZ2luOiAwIDAgNC4yMzZyZW07XG4gICAgcGFkZGluZzogMCAxMS4wODlyZW07XG4gICAgZ3JpZC1nYXA6IDIxcHg7XG4gIH1cbn1cblxuLmZvb3RlciB7XG4gIHBhZGRpbmc6IDAuNjE4cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMC42MThyZW07XG4gIGxpbmUtaGVpZ2h0OiAxNDAlO1xuICBib3gtc2hhZG93OiAwIDAgMTJweCAwICNkMjI3MzA7XG4gIGJhY2tncm91bmQ6ICMxOTE3MTk7XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6NjgxcHgpIHtcbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZzogMjFweCAyLjYxOHJlbTtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOjEwMjRweCkge1xuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAyMXB4IDYuODU0cmVtO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6MTEwMHB4KSB7XG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmc6IDIxcHggMTEuMDg5cmVtO1xuICB9XG59XG5cbi5oZWFkZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMi42MThyZW0gMCAxLjYxOHJlbSAwO1xufVxuXG4uaGVhZGVyX19sb2dvLXRleHQge1xuICBmb250LXNpemU6IDEuNjE4cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMDtcbn1cblxuLmhlYWRlcl9fbG9nby1lbXBoYXNpcyB7XG4gIGNvbG9yOiAjZDIyNzMwO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOjY4MXB4KSB7XG4gIC5oZWFkZXIge1xuICAgIG1hcmdpbjogMS42MThyZW0gMCAyMXB4IDA7XG4gIH1cblxuICAuaGVhZGVyX19sb2dvLXRleHQge1xuICAgIGZvbnQtc2l6ZTogMi42MThyZW07XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDoxMDI0cHgpIHtcbiAgLmhlYWRlciB7XG4gICAgbWFyZ2luOiAyLjYxOHJlbSAwIDEuNjE4cmVtIDA7XG4gIH1cblxuICAuaGVhZGVyX19sb2dvLXRleHQge1xuICAgIGZvbnQtc2l6ZTogNC4yMzZyZW07XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDoxMjAwcHgpIHtcbiAgLmhlYWRlciB7XG4gICAgbWFyZ2luOiA0LjIzNnJlbSAwIDIuNjE4cmVtIDA7XG4gIH1cblxuICAuaGVhZGVyX19sb2dvLXRleHQge1xuICAgIGZvbnQtc2l6ZTogNC4yMzZyZW07XG4gIH1cbn1cblxuLmxvZ2luIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxMDA7XG4gIGxlZnQ6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4ubGlzdCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmZmZmY7XG59XG5cbi8qXHJcbiAqIFNlYXJjaGJhclxyXG4gKiA9PT09PT09PT1cclxuICovXG5cbi5zZWFyY2hiYXIge1xuICBoZWlnaHQ6IDFyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy1ib3R0b206IDVyZW07XG59XG5cbmlucHV0IHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICNGOEY4RkY7XG4gIHRleHQtc2hhZG93OiAwcHggMHB4IDBweCAjRjhGOEZGO1xuICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG9wYWNpdHk6IC43O1xufVxuXG4uc2VhcmNoYmFyX19iYXIge1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiAyMHJlbTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNGOEY4RkY7XG4gIHBhZGRpbmc6IC41cmVtO1xuICBmb250LXNpemU6IDEuM3JlbTtcbn1cblxuLmxpc3Qge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpOVZjMlZ5Y3k5UVpXUnlieUJIWVhKalpYb3ZSR1Z6YTNSdmNDOXdjbTlxWldOMGN5OXlaV0ZqZEMxaWIybHNaWEl2Wm5KdmJuUXZjM0pqTDJOdmJYQnZibVZ1ZEhNdlluVnVaR3hsTG1OemN5SXNJbUoxYm1Sc1pTNWpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1JVRkRReXh2UTBGQlFUdEZRVU5CTERCQ1FVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hwUWtGQlFUdERRME5CT3p0QlJFVkVPMFZCUTBNc2QwSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzYzBOQlFVRTdRME5EUVRzN1FVUkZSRHRGUVVORExIZENRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEhkRFFVRkJPME5EUTBFN08wRkVSVVE3UlVGRFF5eDNRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4MVEwRkJRVHREUTBOQk96dEJSRVZFTzBWQlEwTXNkMEpCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2VVTkJRVUU3UTBORFFUczdRVVJGUkR0RlFVTkRMSGRDUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxIRkRRVUZCTzBORFEwRTdPMEZFUlVRN1JVRkRReXhWUVVGQk8wTkRRMEU3TzBGRVJVUTdSVUZEUXl4bFFVRkJPMFZCUTBFc2MwSkJRVUU3UTBORFFUczdRVVJGUkR0RlFVTkRMR2RDUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2NVVkJRVUU3UlVGRFFTd3dRa0ZCUVR0RFEwTkJPenRCUkVWRU8wVkJRME03U1VGRFF5eHpSVUZCUVR0SFEwTkRPME5CUTBZN08wRkVRMFE3T3p0SFEwbEhPenRCUkVOSU8wVkJRME03TzBsRFIwYzdSVVJUU0RzN1NVTk9SenRGUkdWSU96dEpRMXBITzBWRWRVSklPenRKUTNCQ1J6dEZSREJDU0RzN1NVTjJRa2M3UlVRMlFrZzdPMGxETVVKSE8wTkJRMGc3TzBGRWEwTkVPenM3UjBNM1FrYzdPMEZFTUVOSU8wVkJRME1zWTBGQlFUdEZRVU5CTEhORFFVRkJPMFZCUTBFc2FVTkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMSEZDUVVGQk8wVkJRMEVzYjBKQlFVRTdRME4yUTBFN08wRkVNRU5FTzBWQlEwTXNiVUpCUVVFN1JVRkRRU3d3UWtGQlFUdEZRVU5CTERKQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMR1ZCUVVFN1EwTjJRMEU3TzBGRU1FTkVPMFZCUTBNc09FSkJRVUU3VFVGQlFTd3dRa0ZCUVR0UFFVRkJMSGxDUVVGQk8xVkJRVUVzYzBKQlFVRTdRME4yUTBFN08wRkVNRU5FTzBWQlEwTXNiVUpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc01FSkJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3g1UTBGQlFUdEZRVU5CTEdkQ1FVRkJPME5EZGtOQk96dEJSREJEUkR0RlFVTkRMR2RDUVVGQk8wVkJRMEVzTkVKQlFVRTdUMEZCUVN4MVFrRkJRVHRWUVVGQkxHOUNRVUZCTzBORGRrTkJPenRCUkRCRFJEdEZRVU5ETEcxQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzTUVKQlFVRTdRME4yUTBFN08wRkVNRU5FTzBWQlEwTXNiVUpCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzTUVKQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc1ZVRkJRVHREUTNaRFFUczdRVVF3UTBRN1JVRkRRenRKUVVORExITkRRVUZCTzBsQlEwRXNhVU5CUVVFN1NVRkRRU3h0UWtGQlFUdEpRVU5CTEhGQ1FVRkJPMGxCUTBFc2IwSkJRVUU3UjBOMlEwTTdPMFZFZVVOR08wbEJRME1zWjBKQlFVRTdTVUZEUVN4bFFVRkJPMGxCUTBFc1pVRkJRVHRIUTNSRFF6czdSVVIzUTBZN1NVRkRReXhuUWtGQlFUdEpRVU5CTEdkQ1FVRkJPMGREY2tORE96dEZSSFZEUmp0SlFVTkRMRmxCUVVFN1IwTndRME03UTBGRFJqczdRVVIxUTBRN1JVRkRRenRKUVVORExITkRRVUZCTzBsQlEwRXNhVU5CUVVFN1NVRkRRU3h2UWtGQlFUdEhRM0JEUXpzN1JVUjFRMFk3U1VGRFF5eGxRVUZCTzBsQlEwRXNaVUZCUVR0SFEzQkRRenREUVVOR096dEJSSFZEUkR0RlFVTkRPMGxCUTBNc2IwSkJRVUU3U1VGRFFTeHRRa0ZCUVR0SFEzQkRRenREUVVOR096dEJSSFZEUkR0RlFVTkRPMGxCUTBNc1pVRkJRVHRIUTNCRFF6dERRVU5HT3p0QlJIVkRSRHRGUVVORE8wbEJRME1zYjBKQlFVRTdTVUZEUVN4eFFrRkJRVHRIUTNCRFF6dERRVU5HT3p0QlJIVkRSRHRGUVVORE8wbEJRME1zY1VKQlFVRTdTVUZEUVN4eFFrRkJRVHRKUVVOQkxHVkJRVUU3UjBOd1EwTTdRMEZEUmpzN1FVUjFRMFE3UlVGRFF5eHJRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxDdENRVUZCTzBWQlEwRXNiMEpCUVVFN1EwTndRMEU3TzBGRWRVTkVPMFZCUTBNN1NVRkRReXgxUWtGQlFUdEhRM0JEUXp0RFFVTkdPenRCUkhWRFJEdEZRVU5ETzBsQlEwTXNkVUpCUVVFN1IwTndRME03UTBGRFJqczdRVVIxUTBRN1JVRkRRenRKUVVORExIZENRVUZCTzBkRGNFTkRPME5CUTBZN08wRkVkVU5FTzBWQlEwTXNaVUZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEN0Q1FVRkJPME5EY0VOQk96dEJSSFZEUkR0RlFVTkRMRzlDUVVGQk8wVkJRMEVzZFVKQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNaVUZCUVR0RFEzQkRRVHM3UVVSMVEwUTdSVUZEUXl4bFFVRkJPMFZCUTBFc2FVSkJRVUU3UTBOd1EwRTdPMEZFZFVORU8wVkJRME03U1VGRFF5d3dRa0ZCUVR0SFEzQkRRenM3UlVSelEwWTdTVUZEUXl4dlFrRkJRVHRIUTI1RFF6dERRVU5HT3p0QlJITkRSRHRGUVVORE8wbEJRME1zT0VKQlFVRTdSME51UTBNN08wVkVjVU5HTzBsQlEwTXNiMEpCUVVFN1IwTnNRME03UTBGRFJqczdRVVJ4UTBRN1JVRkRRenRKUVVORExEaENRVUZCTzBkRGJFTkRPenRGUkc5RFJqdEpRVU5ETEc5Q1FVRkJPMGREYWtORE8wTkJRMFk3TzBGRWIwTkVPMFZCUTBNc2JVSkJRVUU3UlVGRFFTeGhRVUZCTzBWQlJVRXNWVUZCUVR0RlFVTkJMSE5DUVVGQk8wTkRiRU5CT3p0QlJIRkRSRHRGUVVOQkxEQkNRVUZCTzBORGJFTkRPenRCUkhGRFJEczdPMGREYUVOSE96dEJSSEZEUmp0RlFVTkRMR0ZCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5FTEhGQ1FVRkJPME5EYkVOQk96dEJSSEZEUVR0RlFVTkRMR05CUVVFN1JVRkRRU3c0UWtGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2FVTkJRVUU3UlVGRFFTeHhRMEZCUVR0RlFVTkVMRmxCUVVFN1EwTnNRMEU3TzBGRWNVTkVPMFZCUTBNc1lVRkJRVHRGUVVOQkxHRkJRVUU3UlVGRFFTeHBRMEZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hyUWtGQlFUdERRMnhEUVRzN1FVUnhRMFE3UlVGRFFTd3dRa0ZCUVR0RFEyeERReUlzSW1acGJHVWlPaUppZFc1a2JHVXVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFIUnRiQ0I3WEhKY2JseDBabTl1ZEMxbVlXMXBiSGs2SUNkU1lXcGthR0Z1YVNjc0lITmhibk10YzJWeWFXWTdYSEpjYmx4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RtRnlLQzB0WW1GamEyZHliM1Z1WkMxamIyeHZjaWs3WEhKY2JseDBZMjlzYjNJNklIWmhjaWd0TFhObFkyOXVaR0Z5ZVMxamIyeHZjaWs3WEhKY2JseDBabTl1ZEMxemFYcGxPaUIyWVhJb0xTMXRiMlIxYkdGeUxXSmhjMlVwTzF4eVhHNWNkR3hwYm1VdGFHVnBaMmgwT2lBeE5EQWxPMXh5WEc1Y2RHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hISmNibjFjY2x4dVhISmNia0JtYjI1MExXWmhZMlVnZTF4eVhHNWNkR1p2Ym5RdFptRnRhV3g1T2x3aVVtRnFaR2hoYm1sY0lqdGNjbHh1WEhSbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hISmNibHgwWm05dWRDMTNaV2xuYUhRNklETXdNRHRjY2x4dVhIUnpjbU02ZFhKc0tGd2lMMlp2Ym5SekwxSmhhbVJvWVc1cExVeHBaMmgwTG5SMFpsd2lLVHRjY2x4dWZWeHlYRzVjY2x4dVFHWnZiblF0Wm1GalpTQjdYSEpjYmx4MFptOXVkQzFtWVcxcGJIazZYQ0pTWVdwa2FHRnVhVndpTzF4eVhHNWNkR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjY2x4dVhIUm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHlYRzVjZEhOeVl6cDFjbXdvWENJdlptOXVkSE12VW1GcVpHaGhibWt0VW1WbmRXeGhjaTUwZEdaY0lpazdYSEpjYm4xY2NseHVYSEpjYmtCbWIyNTBMV1poWTJVZ2UxeHlYRzVjZEdadmJuUXRabUZ0YVd4NU9sd2lVbUZxWkdoaGJtbGNJanRjY2x4dVhIUm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYSEpjYmx4MFptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2NseHVYSFJ6Y21NNmRYSnNLRndpTDJadmJuUnpMMUpoYW1Sb1lXNXBMVTFsWkdsMWJTNTBkR1pjSWlrN1hISmNibjFjY2x4dVhISmNia0JtYjI1MExXWmhZMlVnZTF4eVhHNWNkR1p2Ym5RdFptRnRhV3g1T2x3aVVtRnFaR2hoYm1sY0lqdGNjbHh1WEhSbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hISmNibHgwWm05dWRDMTNaV2xuYUhRNklEWXdNRHRjY2x4dVhIUnpjbU02ZFhKc0tGd2lMMlp2Ym5SekwxSmhhbVJvWVc1cExWTmxiV2xDYjJ4a0xuUjBabHdpS1R0Y2NseHVmVnh5WEc1Y2NseHVRR1p2Ym5RdFptRmpaU0I3WEhKY2JseDBabTl1ZEMxbVlXMXBiSGs2WENKU1lXcGthR0Z1YVZ3aU8xeHlYRzVjZEdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2NseHVYSFJtYjI1MExYZGxhV2RvZERvZ056QXdPMXh5WEc1Y2RITnlZenAxY213b1hDSXZabTl1ZEhNdlVtRnFaR2hoYm1rdFFtOXNaQzUwZEdaY0lpazdYSEpjYm4xY2NseHVYSEpjYm1KdlpIa2dlMXh5WEc1Y2RHMWhjbWRwYmpvZ01EdGNjbHh1ZlZ4eVhHNWNjbHh1WVNCN1hISmNibHgwWTI5c2IzSTZJR2x1YUdWeWFYUTdYSEpjYmx4MGRHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh5WEc1OVhISmNibHh5WEc0dWJHRjViM1YwSUh0Y2NseHVYSFJ0WVhndGQybGtkR2c2SURFd01DVTdYSEpjYmx4MGJXRnlaMmx1T2lCaGRYUnZPMXh5WEc1Y2RHOTJaWEptYkc5M0xYZzZJR2hwWkdSbGJqdGNjbHh1WEhSaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMllYSW9MUzFpWVdOclozSnZkVzVrTFhSbGVIUjFjbVV0YzIxaGJHd3BPMXh5WEc1Y2RHSmhZMnRuY205MWJtUXRjbVZ3WldGME9pQnlaWEJsWVhRN1hISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9MUzEwWVdKc1pYUXRiR0Z5WjJVcElIdGNjbHh1WEhRdWJHRjViM1YwSUh0Y2NseHVYSFJjZEdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhaaGNpZ3RMV0poWTJ0bmNtOTFibVF0ZEdWNGRIVnlaUzF0WldScGRXMHBPMXh5WEc1Y2RIMWNjbHh1ZlZ4dUx5b3FLbHh5WEc0Z0tpQldZWEpwWVdKc1pYTmNjbHh1SUNvZ0xWeHlYRzRnS2k5Y2NseHVYSEpjYmpweWIyOTBJSHRjY2x4dVhIUXZLbHh5WEc1Y2RDQXFJRTF2WkhWc1lYSWdVMk5oYkdVZ0xTQXhMall4T0NBb1IyOXNaR1Z1SUZKaGRHbHZLVnh5WEc1Y2RDQXFMMXh5WEc1Y2RDMHRiVzlrZFd4aGNpMTRlSGh6T2lBd0xqQTVjbVZ0TzF4eVhHNWNkQzB0Ylc5a2RXeGhjaTE0ZUhNNklEQXVNVFEyY21WdE8xeHlYRzVjZEMwdGJXOWtkV3hoY2kxNGN6b2dNQzR6T0RKeVpXMDdYSEpjYmx4MExTMXRiMlIxYkdGeUxYTTZJREF1TmpFNGNtVnRPMXh5WEc1Y2RDMHRiVzlrZFd4aGNpMWlZWE5sT2lBeU1YQjRPMXh5WEc1Y2RDMHRiVzlrZFd4aGNpMXNPaUF4TGpZeE9ISmxiVHRjY2x4dVhIUXRMVzF2WkhWc1lYSXRlR3c2SURJdU5qRTRjbVZ0TzF4eVhHNWNkQzB0Ylc5a2RXeGhjaTE0ZUd3NklEUXVNak0yY21WdE8xeHlYRzVjZEMwdGJXOWtkV3hoY2kxNGVIaHNPaUEyTGpnMU5ISmxiVHRjY2x4dVhIUXZLbHh5WEc1Y2RDQXFJRlJvWlcxbFhISmNibHgwSUNvdlhISmNibHgwTFMxaVlXTnJaM0p2ZFc1a0xYUmxlSFIxY21VdGMyMWhiR3c2SUhWeWJDZ3ZhVzFoWjJWekwzUmxlSFIxY21WekwySmhZMnRuY205MWJtUXRkR1Y0ZEhWeVpTMXpiV0ZzYkM1cWNHY3BPMXh5WEc1Y2RDMHRZbUZqYTJkeWIzVnVaQzEwWlhoMGRYSmxMVzFsWkdsMWJUb2dkWEpzS0M5cGJXRm5aWE12ZEdWNGRIVnlaWE12WW1GamEyZHliM1Z1WkMxMFpYaDBkWEpsTFcxbFpHbDFiUzVxY0djcE8xeDBYSEpjYmx4MExTMWlZV05yWjNKdmRXNWtMWFJsZUhSMWNtVXRiR0Z5WjJVNklIVnliQ2d2YVcxaFoyVnpMM1JsZUhSMWNtVnpMMkpoWTJ0bmNtOTFibVF0ZEdWNGRIVnlaUzFzWVhKblpTNXFjR2NwTzF4MFhISmNibHgwTFMxaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak1Ua3hOekU1TzF4eVhHNWNkQzB0YldGcGJpMWpiMnh2Y2pvZ0kyUXlNamN6TUR0Y2NseHVYSFF0TFhObFkyOXVaR0Z5ZVMxamIyeHZjam9nSTJVMlpHSmtZenRjY2x4dVhIUXZLbHh5WEc1Y2RDQXFJRU52Ykc5eWMxeHlYRzVjZENBcUwxeHlYRzVjZEMwdFkyOXNiM0l0ZDJocGRHVTZJQ05tWm1abVptWTdYSEpjYmx4MExTMWpiMnh2Y2kxbmNtRjVMV3hwWjJoMFpYTjBPaUFqWm1ObVkyWmpPMXh5WEc1Y2RDMHRZMjlzYjNJdFozSmhlUzFzYVdkb2RHVnlPaUFqWmpObU0yWXpPMXh5WEc1Y2RDMHRZMjlzYjNJdFozSmhlUzFzYVdkb2REb2dJMFV5UlRKRk1qdGNjbHh1WEhRdExXTnZiRzl5TFdkeVlYa3RiV1ZrYVhWdExXeHBaMmgwT2lBalpHUmtaR1JrTzF4eVhHNWNkQzB0WTI5c2IzSXRaM0poZVMxdFpXUnBkVzA2SUNObFlXVmhaV0U3WEhKY2JseDBMUzFqYjJ4dmNpMW5jbUY1TFdSaGNtczZJQ00xTlRVMU5UVTdYSEpjYmx4MExTMWpiMnh2Y2kxbmNtRjVMV1JoY210bGNqb2dJek5tTTJZelpqdGNjbHh1WEhRdktseHlYRzVjZENBcUlGUmxlSFJ6WEhKY2JseDBJQ292WEhKY2JseDBMUzFqYjJ4dmNpMTBaWGgwTFdkeVlYQm9PaUFqTTJVelpUTmxPMXh5WEc1Y2RDMHRZMjlzYjNJdGRHVjRkQzFzYVdkb2REb2dJemcyT0RZNE5qdGNjbHh1WEhRdExXTnZiRzl5TFhSbGVIUXRaR0Z5YXpvZ0l6UXhOREUwTVR0Y2NseHVYSFF2S2x4eVhHNWNkQ0FxSUVGc1pYSjBMMU4wWVhSMWN5QmpiMnh2Y25OY2NseHVYSFFnS2k5Y2NseHVYSFF0TFdOdmJHOXlMV1Z5Y205eU9pQWpSRUkwTnpNMk8xeHlYRzVjZEMwdFkyOXNiM0l0YzNWalkyVnpjem9nSXpWR1FUQTFNanRjY2x4dVhIUXRMV052Ykc5eUxYZGhjbTVwYm1jNklDTkVSRGRHTXpNN1hISmNibHgwTHlwY2NseHVYSFFnS2lCRllYTnBibWR6WEhKY2JseDBJQ292WEhKY2JseDBMUzFsWVhOcGJtY3RhVzl6T2lCamRXSnBZeTFpWlhwcFpYSW9NQzR5TXl3Z01Td2dNQzR6TWl3Z01TazdYSEpjYmx4MExTMWxZWE5wYm1jdFpYaHdZVzVrT2lCamRXSnBZeTFpWlhwcFpYSW9NQzR4TnpVc0lEQXVPRGcxTENBd0xqTXlNQ3dnTVM0eU56VXBPMXh5WEc1Y2RDMHRaV0Z6YVc1bkxYRjFZV1E2SUdOMVltbGpMV0psZW1sbGNpZ3dMamMzTUN3Z01DNHdNREFzSURBdU1UYzFMQ0F4TGpBd01DazdYSEpjYm4xY2NseHVYSEpjYmx4eVhHNHZLaW9xWEhKY2JpQXFJRTFsWkdsaElIRjFaWEpwWlhOY2NseHVJQ29nTFZ4eVhHNGdLaTljY2x4dVhISmNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMTBZV0pzWlhRZ1lXeHNJR0Z1WkNBb2JXbHVMWGRwWkhSb09qWTRNWEI0S1R0Y2NseHVRR04xYzNSdmJTMXRaV1JwWVNBdExYUmhZbXhsZEMxc1lYSm5aU0JoYkd3Z1lXNWtJQ2h0YVc0dGQybGtkR2c2TVRBeU5IQjRLVHRjY2x4dVFHTjFjM1J2YlMxdFpXUnBZU0F0TFdSbGMydDBiM0F0YzIxaGJHd2dZV3hzSUdGdVpDQW9iV2x1TFhkcFpIUm9PakV4TURCd2VDazdYSEpjYmtCamRYTjBiMjB0YldWa2FXRWdMUzFrWlhOcmRHOXdMVzFsWkdsMWJTQmhiR3dnWVc1a0lDaHRhVzR0ZDJsa2RHZzZNVEl3TUhCNEtUdGNjbHh1UUdOMWMzUnZiUzF0WldScFlTQXRMV1JsYzJ0MGIzQXRiR0Z5WjJVZ1lXeHNJR0Z1WkNBb2JXbHVMWGRwWkhSb09qRTBOREJ3ZUNrN1hISmNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMWtaWE5yZEc5d0xYaHNZWEpuWlNCaGJHd2dZVzVrSUNodGFXNHRkMmxrZEdnNk1UY3lNSEI0S1R0Y2NseHVRR04xYzNSdmJTMXRaV1JwWVNBdExXUmxjMnQwYjNBdGVIaHNZWEpuWlNCaGJHd2dZVzVrSUNodGFXNHRkMmxrZEdnNk1Ua3lNSEI0S1R0Y2NseHVYRzR1WTJGeVpGOWZZM056TFdkeWFXUWdlMXh5WEc1Y2RHUnBjM0JzWVhrNklHZHlhV1E3WEhKY2JseDBaM0pwWkMxMFpXMXdiR0YwWlMxamIyeDFiVzV6T2lCeVpYQmxZWFFvTWl3Z01XWnlLVHRjY2x4dVhIUXRiWE10WjNKcFpDMWpiMngxYlc1ek9pQnlaWEJsWVhRb01pd2dNV1p5S1R0Y2NseHVYSFJuY21sa0xXZGhjRG9nZG1GeUtDMHRiVzlrZFd4aGNpMTRlSE1wTzF4eVhHNWNkRzFoY21kcGJqb2dNQ0F3SUhaaGNpZ3RMVzF2WkhWc1lYSXRiQ2s3WEhKY2JseDBjR0ZrWkdsdVp6b2dNQ0IyWVhJb0xTMXRiMlIxYkdGeUxYaHpLVHRjY2x4dWZWeHlYRzVjY2x4dUxtTmhjbVFnZTF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjY2x4dVhIUmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxaVlXTnJaM0p2ZFc1a0xXTnZiRzl5S1R0Y2NseHVYSFJpYjNKa1pYSTZJREZ3ZUNCdmRYUnpaWFFnZG1GeUtDMHRZMjlzYjNJdFozSmhlUzFrWVhKclpYSXBPMXh5WEc1Y2RHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2NseHVYSFJ2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh5WEc1Y2RHeHBibVV0YUdWcFoyaDBPaUF3TzF4eVhHNTlYSEpjYmx4eVhHNHVZMkZ5WkRwb2IzWmxjajR1WTJGeVpGOWZZbWNnZTF4eVhHNWNkSFJ5WVc1elptOXliVG9nYzJOaGJHVW9NUzQwS1R0Y2NseHVmVnh5WEc1Y2NseHVMbU5oY21SZlgyNWhiV1VnZTF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dVhIUm1iMjUwTFhkbGFXZG9kRG9nTmpBd08xeHlYRzVjZEdadmJuUXRjMmw2WlRvZ2RtRnlLQzB0Ylc5a2RXeGhjaTF6S1R0Y2NseHVYSFIwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh5WEc1Y2RHSnZkSFJ2YlRvZ01TNDNjbVZ0TzF4eVhHNWNkSG90YVc1a1pYZzZJRFE3WEhKY2JseDBiR2x1WlMxb1pXbG5hSFE2SURBN1hISmNibHgwWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ3lNVEFzSURNNUxDQTBPQ3dnTUM0NEtUdGNjbHh1WEhSd1lXUmthVzVuT2lBdU5EVnlaVzA3WEhKY2JuMWNjbHh1WEhKY2JpNWpZWEprWDE5aVp5QjdYSEpjYmx4MGJXRjRMWGRwWkhSb09pQXhNREFsTzF4eVhHNWNkSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXVOSE03WEhKY2JuMWNjbHh1WEhKY2JpNWpZWEprWDE5MFlXY3RiR2x1WlNCN1hISmNibHgwY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4eVhHNWNkSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dVhIUndZV1JrYVc1bk9pQjJZWElvTFMxdGIyUjFiR0Z5TFhNcElEQTdYSEpjYmx4MFptOXVkQzF6YVhwbE9pQjJZWElvTFMxdGIyUjFiR0Z5TFhNcE8xeHlYRzVjZEhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEhKY2JuMWNjbHh1WEhKY2JpNWpZWEprWDE5aFkyTmxiblFnZTF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dVhIUjNhV1IwYURvZ01UQXdKVHRjY2x4dVhIUmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjJZWElvTFMxdFlXbHVMV052Ykc5eUtUdGNjbHh1WEhSb1pXbG5hSFE2SURGd2VEdGNjbHh1WEhSaWIzUjBiMjA2SURBN1hISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9MUzEwWVdKc1pYUXBJSHRjY2x4dVhIUXVZMkZ5WkY5ZlkzTnpMV2R5YVdRZ2UxeHlYRzVjZEZ4MFozSnBaQzEwWlcxd2JHRjBaUzFqYjJ4MWJXNXpPaUJ5WlhCbFlYUW9NeXdnTVdaeUtUdGNjbHh1WEhSY2RDMXRjeTFuY21sa0xXTnZiSFZ0Ym5NNklISmxjR1ZoZENnekxDQXhabklwTzF4eVhHNWNkRngwWjNKcFpDMW5ZWEE2SUhaaGNpZ3RMVzF2WkhWc1lYSXRlSE1wTzF4eVhHNWNkRngwYldGeVoybHVPaUF3SURBZ2RtRnlLQzB0Ylc5a2RXeGhjaTE0YkNrN1hISmNibHgwWEhSd1lXUmthVzVuT2lBd0lIWmhjaWd0TFcxdlpIVnNZWEl0Y3lrN1hISmNibHgwZlZ4eVhHNWNkQzVqWVhKa1gxOXVZVzFsSUh0Y2NseHVYSFJjZEdadmJuUXRjMmw2WlRvZ2RtRnlLQzB0Ylc5a2RXeGhjaTFpWVhObEtUdGNjbHh1WEhSY2RHSnZkSFJ2YlRvZ01pNDVjbVZ0TzF4eVhHNWNkRngwY0dGa1pHbHVaem9nTGpkeVpXMDdYSEpjYmx4MGZWeHlYRzVjZEM1allYSmtYMTkwWVdjdGJHbHVaU0I3WEhKY2JseDBYSFJtYjI1MExYTnBlbVU2SUhaaGNpZ3RMVzF2WkhWc1lYSXRZbUZ6WlNrN1hIUmNjbHh1WEhSY2RIQmhaR1JwYm1jNklIWmhjaWd0TFcxdlpIVnNZWEl0WW1GelpTa2dNRHRjZEZ4eVhHNWNkSDFjY2x4dVhIUXVZMkZ5WkY5ZllXTmpaVzUwSUh0Y2NseHVYSFJjZEdobGFXZG9kRG9nTW5CNE8xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElDZ3RMWFJoWW14bGRDMXNZWEpuWlNrZ2UxeHlYRzVjZEM1allYSmtYMTlqYzNNdFozSnBaQ0I3WEhKY2JseDBYSFJuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklISmxjR1ZoZENnMExDQXhabklwTzF4eVhHNWNkRngwTFcxekxXZHlhV1F0WTI5c2RXMXVjem9nY21Wd1pXRjBLRFFzSURGbWNpazdYSEpjYmx4MFhIUndZV1JrYVc1bk9pQXdJSFpoY2lndExXMXZaSFZzWVhJdGJDazdYSEpjYmx4MFhISmNibHgwZlZ4eVhHNWNkQzVqWVhKa1gxOXVZVzFsSUh0Y2NseHVYSFJjZEdKdmRIUnZiVG9nTWk0NWNtVnRPMXh5WEc1Y2RGeDBjR0ZrWkdsdVp6b2dMamR5WlcwN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV1ZrYVdFZ0tDMHRaR1Z6YTNSdmNDMXpiV0ZzYkNrZ2UxeHlYRzVjZEM1allYSmtYMTlqYzNNdFozSnBaQ0I3WEhKY2JseDBYSFJ3WVdSa2FXNW5PaUF3SUhaaGNpZ3RMVzF2WkhWc1lYSXRlSGhzS1R0Y2NseHVYSFJjZEdkeWFXUXRaMkZ3T2lCMllYSW9MUzF0YjJSMWJHRnlMWE1wTzF4MFhISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV1ZrYVdFZ0tDMHRaR1Z6YTNSdmNDMXRaV1JwZFcwcElIdGNjbHh1WEhRdVkyRnlaRjlmWTNOekxXZHlhV1FnZTF4eVhHNWNkRngwWjNKcFpDMW5ZWEE2SUhaaGNpZ3RMVzF2WkhWc1lYSXRZbUZ6WlNrN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV1ZrYVdFZ0tDMHRaR1Z6YTNSdmNDMXNZWEpuWlNrZ2UxeHlYRzVjZEM1allYSmtYMTlqYzNNdFozSnBaQ0I3WEhKY2JseDBYSFJ3WVdSa2FXNW5PaUF3SUhaaGNpZ3RMVzF2WkhWc1lYSXRlSGg0YkNrN1hISmNibHgwWEhSdFlYSm5hVzQ2SURBZ01DQjJZWElvTFMxdGIyUjFiR0Z5TFhoc0tUdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9MUzFrWlhOcmRHOXdMWGhzWVhKblpTa2dlMXh5WEc1Y2RDNWpZWEprWDE5amMzTXRaM0pwWkNCN1hISmNibHgwWEhSdFlYSm5hVzQ2SURBZ01DQjJZWElvTFMxdGIyUjFiR0Z5TFhoNGJDazdYSEpjYmx4MFhIUndZV1JrYVc1bk9pQXdJREV4TGpBNE9YSmxiVHRjY2x4dVhIUmNkR2R5YVdRdFoyRndPaUIyWVhJb0xTMXRiMlIxYkdGeUxXSmhjMlVwTzF4MFhIUmNjbHh1WEhSOVhISmNibjFjY2x4dVhHNHVabTl2ZEdWeUlIdGNjbHh1WEhSd1lXUmthVzVuT2lCMllYSW9MUzF0YjJSMWJHRnlMWE1wTzF4eVhHNWNkSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dVhIUm1iMjUwTFhOcGVtVTZJSFpoY2lndExXMXZaSFZzWVhJdGN5azdYSEpjYmx4MGJHbHVaUzFvWldsbmFIUTZJREUwTUNVN1hISmNibHgwWW05NExYTm9ZV1J2ZHpvZ01DQXdJREV5Y0hnZ01DQjJZWElvTFMxdFlXbHVMV052Ykc5eUtUdGNjbHh1WEhSaVlXTnJaM0p2ZFc1a09pQjJZWElvTFMxaVlXTnJaM0p2ZFc1a0xXTnZiRzl5S1R0Y2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElDZ3RMWFJoWW14bGRDa2dlMXh5WEc1Y2RDNW1iMjkwWlhJZ2UxeHlYRzVjZEZ4MGNHRmtaR2x1WnpvZ2RtRnlLQzB0Ylc5a2RXeGhjaTFpWVhObEtTQjJZWElvTFMxdGIyUjFiR0Z5TFhoc0tUdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9MUzEwWVdKc1pYUXRiR0Z5WjJVcElIdGNjbHh1WEhRdVptOXZkR1Z5SUh0Y2NseHVYSFJjZEhCaFpHUnBibWM2SUhaaGNpZ3RMVzF2WkhWc1lYSXRZbUZ6WlNrZ2RtRnlLQzB0Ylc5a2RXeGhjaTE0ZUhoc0tUdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9MUzFrWlhOcmRHOXdMWE50WVd4c0tTQjdYSEpjYmx4MExtWnZiM1JsY2lCN1hISmNibHgwWEhSd1lXUmthVzVuT2lCMllYSW9MUzF0YjJSMWJHRnlMV0poYzJVcElERXhMakE0T1hKbGJUdGNjbHh1WEhSOVhISmNibjFjY2x4dVhHNHVhR1ZoWkdWeUlIdGNjbHh1WEhSa2FYTndiR0Y1T2lCMFlXSnNaVHRjY2x4dVhIUjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmx4MGQybGtkR2c2SURFd01DVTdYSEpjYmx4MGNHRmtaR2x1WnpvZ2RtRnlLQzB0Ylc5a2RXeGhjaTE0YkNrZ01DQjJZWElvTFMxdGIyUjFiR0Z5TFd3cElEQTdYSEpjYm4xY2NseHVYSEpjYmk1b1pXRmtaWEpmWDJ4dloyOHRkR1Y0ZENCN1hISmNibHgwWm05dWRDMXphWHBsT2lCMllYSW9MUzF0YjJSMWJHRnlMV3dwTzF4eVhHNWNkSFpsY25ScFkyRnNMV0ZzYVdkdU9pQnRhV1JrYkdVN1hISmNibHgwWkdsemNHeGhlVG9nZEdGaWJHVXRZMlZzYkR0Y2NseHVYSFJtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh5WEc1Y2RHeHBibVV0YUdWcFoyaDBPaUF3TzF4eVhHNTlYSEpjYmx4eVhHNHVhR1ZoWkdWeVgxOXNiMmR2TFdWdGNHaGhjMmx6SUh0Y2NseHVYSFJqYjJ4dmNqb2dkbUZ5S0MwdGJXRnBiaTFqYjJ4dmNpazdYSEpjYmx4MFptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElDZ3RMWFJoWW14bGRDa2dlMXh5WEc1Y2RDNW9aV0ZrWlhJZ2UxeHlYRzVjZEZ4MGJXRnlaMmx1T2lCMllYSW9MUzF0YjJSMWJHRnlMV3dwSURBZ2RtRnlLQzB0Ylc5a2RXeGhjaTFpWVhObEtTQXdPMXh5WEc1Y2RIMWNjbHh1WEhRdWFHVmhaR1Z5WDE5c2IyZHZMWFJsZUhRZ2UxeHlYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQjJZWElvTFMxdGIyUjFiR0Z5TFhoc0tUdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9MUzEwWVdKc1pYUXRiR0Z5WjJVcElIdGNjbHh1WEhRdWFHVmhaR1Z5SUh0Y2NseHVYSFJjZEcxaGNtZHBiam9nZG1GeUtDMHRiVzlrZFd4aGNpMTRiQ2tnTUNCMllYSW9MUzF0YjJSMWJHRnlMV3dwSURBN1hISmNibHgwZlZ4eVhHNWNkQzVvWldGa1pYSmZYMnh2WjI4dGRHVjRkQ0I3WEhKY2JseDBYSFJtYjI1MExYTnBlbVU2SUhaaGNpZ3RMVzF2WkhWc1lYSXRlSGhzS1R0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JrQnRaV1JwWVNBb0xTMWtaWE5yZEc5d0xXMWxaR2wxYlNrZ2UxeHlYRzVjZEM1b1pXRmtaWElnZTF4eVhHNWNkRngwYldGeVoybHVPaUIyWVhJb0xTMXRiMlIxYkdGeUxYaDRiQ2tnTUNCMllYSW9MUzF0YjJSMWJHRnlMWGhzS1NBd08xeHlYRzVjZEgxY2NseHVYSFF1YUdWaFpHVnlYMTlzYjJkdkxYUmxlSFFnZTF4eVhHNWNkRngwWm05dWRDMXphWHBsT2lCMllYSW9MUzF0YjJSMWJHRnlMWGg0YkNrN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4dUxteHZaMmx1SUh0Y2NseHVYSFJ3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JseDBlaTFwYm1SbGVEb2dNVEF3TzF4eVhHNWNjbHh1WEhSc1pXWjBPaUExTUNVN1hISmNibHgwWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21Wa08xeHlYRzU5WEhKY2JseHVMbXhwYzNRZ2UxeHlYRzVpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0IyWVhJb0xTMWpiMnh2Y2kxM2FHbDBaU2s3WEhKY2JuMWNjbHh1WEc0dktseHlYRzRnS2lCVFpXRnlZMmhpWVhKY2NseHVJQ29nUFQwOVBUMDlQVDA5WEhKY2JpQXFMMXh5WEc1Y2NseHVJQzV6WldGeVkyaGlZWElnZTF4eVhHNGdYSFJvWldsbmFIUTZNWEpsYlR0Y2NseHVJRngwZEdWNGRDMWhiR2xuYmpwalpXNTBaWEk3WEhKY2JseDBjR0ZrWkdsdVp5MWliM1IwYjIwNk5YSmxiVHRjY2x4dUlIMWNjbHh1WEhKY2JpQnBibkIxZENCN1hISmNiaUJjZEc5MWRHeHBibVU2SUc1dmJtVTdYSEpjYmlCY2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh5WEc0Z1hIUmliM0prWlhJNklHNXZibVU3WEhKY2JpQmNkR052Ykc5eU9pTkdPRVk0UmtZN1hISmNiaUJjZEhSbGVIUXRjMmhoWkc5M09pQXdjSGdnTUhCNElEQndlQ0FqUmpoR09FWkdPMXh5WEc0Z1hIUXRkMlZpYTJsMExYUmxlSFF0Wm1sc2JDMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUTdYSEpjYmx4MGIzQmhZMmwwZVRvdU56dGNjbHh1SUgxY2NseHVYSEpjYmk1elpXRnlZMmhpWVhKZlgySmhjaUI3WEhKY2JseDBiV0Z5WjJsdU9tRjFkRzg3WEhKY2JseDBkMmxrZEdnNk1qQnlaVzA3WEhKY2JseDBZbTl5WkdWeUxXSnZkSFJ2YlRveGNIZ2djMjlzYVdRZ0kwWTRSamhHUmp0Y2NseHVYSFJ3WVdSa2FXNW5PaTQxY21WdE8xeHlYRzVjZEdadmJuUXRjMmw2WlRveExqTnlaVzA3WEhKY2JuMWNjbHh1WEc0dWJHbHpkQ0I3WEhKY2JtSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lIWmhjaWd0TFdOdmJHOXlMWGRvYVhSbEtUdGNjbHh1ZlZ4eVhHNGlMQ0pvZEcxc0lIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDZFNZV3BrYUdGdWFTY3NJSE5oYm5NdGMyVnlhV1k3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXhPVEUzTVRrN1hHNGdJR052Ykc5eU9pQWpaVFprWW1Sak8xeHVJQ0JtYjI1MExYTnBlbVU2SURJeGNIZzdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhOREFsTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVmVnh1WEc1QVptOXVkQzFtWVdObElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lVbUZxWkdoaGJtbGNJanRjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ016QXdPMXh1SUNCemNtTTZJSFZ5YkNoY0lpOW1iMjUwY3k5U1lXcGthR0Z1YVMxTWFXZG9kQzUwZEdaY0lpazdYRzU5WEc1Y2JrQm1iMjUwTFdaaFkyVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0pTWVdwa2FHRnVhVndpTzF4dUlDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc0Z0lITnlZem9nZFhKc0tGd2lMMlp2Ym5SekwxSmhhbVJvWVc1cExWSmxaM1ZzWVhJdWRIUm1YQ0lwTzF4dWZWeHVYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVVtRnFaR2hoYm1sY0lqdGNiaUFnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHVJQ0J6Y21NNklIVnliQ2hjSWk5bWIyNTBjeTlTWVdwa2FHRnVhUzFOWldScGRXMHVkSFJtWENJcE8xeHVmVnh1WEc1QVptOXVkQzFtWVdObElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lVbUZxWkdoaGJtbGNJanRjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05qQXdPMXh1SUNCemNtTTZJSFZ5YkNoY0lpOW1iMjUwY3k5U1lXcGthR0Z1YVMxVFpXMXBRbTlzWkM1MGRHWmNJaWs3WEc1OVhHNWNia0JtYjI1MExXWmhZMlVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKU1lXcGthR0Z1YVZ3aU8xeHVJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hHNGdJSE55WXpvZ2RYSnNLRndpTDJadmJuUnpMMUpoYW1Sb1lXNXBMVUp2YkdRdWRIUm1YQ0lwTzF4dWZWeHVYRzVpYjJSNUlIdGNiaUFnYldGeVoybHVPaUF3TzF4dWZWeHVYRzVoSUh0Y2JpQWdZMjlzYjNJNklHbHVhR1Z5YVhRN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JuMWNibHh1TG14aGVXOTFkQ0I3WEc0Z0lHMWhlQzEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdiV0Z5WjJsdU9pQmhkWFJ2TzF4dUlDQnZkbVZ5Wm14dmR5MTRPaUJvYVdSa1pXNDdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDZ3ZhVzFoWjJWekwzUmxlSFIxY21WekwySmhZMnRuY205MWJtUXRkR1Y0ZEhWeVpTMXpiV0ZzYkM1cWNHY3BPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2NtVndaV0YwTzF4dWZWeHVYRzVBYldWa2FXRWdZV3hzSUdGdVpDQW9iV2x1TFhkcFpIUm9PakV3TWpSd2VDa2dlMXh1SUNBdWJHRjViM1YwSUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b0wybHRZV2RsY3k5MFpYaDBkWEpsY3k5aVlXTnJaM0p2ZFc1a0xYUmxlSFIxY21VdGJXVmthWFZ0TG1wd1p5azdYRzRnSUgxY2JuMWNibHh1THlvcUtseHlYRzRnS2lCV1lYSnBZV0pzWlhOY2NseHVJQ29nTFZ4eVhHNGdLaTljYmx4dU9uSnZiM1FnZTF4dUlDQXZLbHh5WEc1Y2RDQXFJRTF2WkhWc1lYSWdVMk5oYkdVZ0xTQXhMall4T0NBb1IyOXNaR1Z1SUZKaGRHbHZLVnh5WEc1Y2RDQXFMMXh1SUNBdktseHlYRzVjZENBcUlGUm9aVzFsWEhKY2JseDBJQ292WEc0Z0lDOHFYSEpjYmx4MElDb2dRMjlzYjNKelhISmNibHgwSUNvdlhHNGdJQzhxWEhKY2JseDBJQ29nVkdWNGRITmNjbHh1WEhRZ0tpOWNiaUFnTHlwY2NseHVYSFFnS2lCQmJHVnlkQzlUZEdGMGRYTWdZMjlzYjNKelhISmNibHgwSUNvdlhHNGdJQzhxWEhKY2JseDBJQ29nUldGemFXNW5jMXh5WEc1Y2RDQXFMMXh1ZlZ4dVhHNHZLaW9xWEhKY2JpQXFJRTFsWkdsaElIRjFaWEpwWlhOY2NseHVJQ29nTFZ4eVhHNGdLaTljYmx4dUxtTmhjbVJmWDJOemN5MW5jbWxrSUh0Y2JpQWdaR2x6Y0d4aGVUb2daM0pwWkR0Y2JpQWdaM0pwWkMxMFpXMXdiR0YwWlMxamIyeDFiVzV6T2lCeVpYQmxZWFFvTWl3Z01XWnlLVHRjYmlBZ0xXMXpMV2R5YVdRdFkyOXNkVzF1Y3pvZ2NtVndaV0YwS0RJc0lERm1jaWs3WEc0Z0lHZHlhV1F0WjJGd09pQXdMakUwTm5KbGJUdGNiaUFnYldGeVoybHVPaUF3SURBZ01TNDJNVGh5WlcwN1hHNGdJSEJoWkdScGJtYzZJREFnTUM0ek9ESnlaVzA3WEc1OVhHNWNiaTVqWVhKa0lIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpNVGt4TnpFNU8xeHVJQ0JpYjNKa1pYSTZJREZ3ZUNCdmRYUnpaWFFnSXpObU0yWXpaanRjYmlBZ1kzVnljMjl5T2lCd2IybHVkR1Z5TzF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01EdGNibjFjYmx4dUxtTmhjbVE2YUc5MlpYSStMbU5oY21SZlgySm5JSHRjYmlBZ2RISmhibk5tYjNKdE9pQnpZMkZzWlNneExqUXBPMXh1ZlZ4dVhHNHVZMkZ5WkY5ZmJtRnRaU0I3WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEWXdNRHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXdMall4T0hKbGJUdGNiaUFnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYmlBZ1ltOTBkRzl0T2lBeExqZHlaVzA3WEc0Z0lIb3RhVzVrWlhnNklEUTdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXdPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCeVoySmhLREl4TUN3Z016a3NJRFE0TENBd0xqZ3BPMXh1SUNCd1lXUmthVzVuT2lBdU5EVnlaVzA3WEc1OVhHNWNiaTVqWVhKa1gxOWlaeUI3WEc0Z0lHMWhlQzEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lDNDBjenRjYm4xY2JseHVMbU5oY21SZlgzUmhaeTFzYVc1bElIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUhCaFpHUnBibWM2SURBdU5qRTRjbVZ0SURBN1hHNGdJR1p2Ym5RdGMybDZaVG9nTUM0Mk1UaHlaVzA3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNTlYRzVjYmk1allYSmtYMTloWTJObGJuUWdlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpaREl5TnpNd08xeHVJQ0JvWldsbmFIUTZJREZ3ZUR0Y2JpQWdZbTkwZEc5dE9pQXdPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ1lXeHNJR0Z1WkNBb2JXbHVMWGRwWkhSb09qWTRNWEI0S1NCN1hHNGdJQzVqWVhKa1gxOWpjM010WjNKcFpDQjdYRzRnSUNBZ1ozSnBaQzEwWlcxd2JHRjBaUzFqYjJ4MWJXNXpPaUJ5WlhCbFlYUW9NeXdnTVdaeUtUdGNiaUFnSUNBdGJYTXRaM0pwWkMxamIyeDFiVzV6T2lCeVpYQmxZWFFvTXl3Z01XWnlLVHRjYmlBZ0lDQm5jbWxrTFdkaGNEb2dNQzR6T0RKeVpXMDdYRzRnSUNBZ2JXRnlaMmx1T2lBd0lEQWdNaTQyTVRoeVpXMDdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01DQXdMall4T0hKbGJUdGNiaUFnZlZ4dVhHNGdJQzVqWVhKa1gxOXVZVzFsSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJeGNIZzdYRzRnSUNBZ1ltOTBkRzl0T2lBeUxqbHlaVzA3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dMamR5WlcwN1hHNGdJSDFjYmx4dUlDQXVZMkZ5WkY5ZmRHRm5MV3hwYm1VZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01qRndlRHRjYmlBZ0lDQndZV1JrYVc1bk9pQXlNWEI0SURBN1hHNGdJSDFjYmx4dUlDQXVZMkZ5WkY5ZllXTmpaVzUwSUh0Y2JpQWdJQ0JvWldsbmFIUTZJREp3ZUR0Y2JpQWdmVnh1ZlZ4dVhHNUFiV1ZrYVdFZ1lXeHNJR0Z1WkNBb2JXbHVMWGRwWkhSb09qRXdNalJ3ZUNrZ2UxeHVJQ0F1WTJGeVpGOWZZM056TFdkeWFXUWdlMXh1SUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nY21Wd1pXRjBLRFFzSURGbWNpazdYRzRnSUNBZ0xXMXpMV2R5YVdRdFkyOXNkVzF1Y3pvZ2NtVndaV0YwS0RRc0lERm1jaWs3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0F4TGpZeE9ISmxiVHRjYmlBZ2ZWeHVYRzRnSUM1allYSmtYMTl1WVcxbElIdGNiaUFnSUNCaWIzUjBiMjA2SURJdU9YSmxiVHRjYmlBZ0lDQndZV1JrYVc1bk9pQXVOM0psYlR0Y2JpQWdmVnh1ZlZ4dVhHNUFiV1ZrYVdFZ1lXeHNJR0Z1WkNBb2JXbHVMWGRwWkhSb09qRXhNREJ3ZUNrZ2UxeHVJQ0F1WTJGeVpGOWZZM056TFdkeWFXUWdlMXh1SUNBZ0lIQmhaR1JwYm1jNklEQWdOQzR5TXpaeVpXMDdYRzRnSUNBZ1ozSnBaQzFuWVhBNklEQXVOakU0Y21WdE8xeHVJQ0I5WEc1OVhHNWNia0J0WldScFlTQmhiR3dnWVc1a0lDaHRhVzR0ZDJsa2RHZzZNVEl3TUhCNEtTQjdYRzRnSUM1allYSmtYMTlqYzNNdFozSnBaQ0I3WEc0Z0lDQWdaM0pwWkMxbllYQTZJREl4Y0hnN1hHNGdJSDFjYm4xY2JseHVRRzFsWkdsaElHRnNiQ0JoYm1RZ0tHMXBiaTEzYVdSMGFEb3hORFF3Y0hncElIdGNiaUFnTG1OaGNtUmZYMk56Y3kxbmNtbGtJSHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdJRFl1T0RVMGNtVnRPMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQXdJREl1TmpFNGNtVnRPMXh1SUNCOVhHNTlYRzVjYmtCdFpXUnBZU0JoYkd3Z1lXNWtJQ2h0YVc0dGQybGtkR2c2TVRjeU1IQjRLU0I3WEc0Z0lDNWpZWEprWDE5amMzTXRaM0pwWkNCN1hHNGdJQ0FnYldGeVoybHVPaUF3SURBZ05DNHlNelp5WlcwN1hHNGdJQ0FnY0dGa1pHbHVaem9nTUNBeE1TNHdPRGx5WlcwN1hHNGdJQ0FnWjNKcFpDMW5ZWEE2SURJeGNIZzdYRzRnSUgxY2JuMWNibHh1TG1admIzUmxjaUI3WEc0Z0lIQmhaR1JwYm1jNklEQXVOakU0Y21WdE8xeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lHWnZiblF0YzJsNlpUb2dNQzQyTVRoeVpXMDdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhOREFsTzF4dUlDQmliM2d0YzJoaFpHOTNPaUF3SURBZ01USndlQ0F3SUNOa01qSTNNekE3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ014T1RFM01UazdYRzU5WEc1Y2JrQnRaV1JwWVNCaGJHd2dZVzVrSUNodGFXNHRkMmxrZEdnNk5qZ3hjSGdwSUh0Y2JpQWdMbVp2YjNSbGNpQjdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01qRndlQ0F5TGpZeE9ISmxiVHRjYmlBZ2ZWeHVmVnh1WEc1QWJXVmthV0VnWVd4c0lHRnVaQ0FvYldsdUxYZHBaSFJvT2pFd01qUndlQ2tnZTF4dUlDQXVabTl2ZEdWeUlIdGNiaUFnSUNCd1lXUmthVzVuT2lBeU1YQjRJRFl1T0RVMGNtVnRPMXh1SUNCOVhHNTlYRzVjYmtCdFpXUnBZU0JoYkd3Z1lXNWtJQ2h0YVc0dGQybGtkR2c2TVRFd01IQjRLU0I3WEc0Z0lDNW1iMjkwWlhJZ2UxeHVJQ0FnSUhCaFpHUnBibWM2SURJeGNIZ2dNVEV1TURnNWNtVnRPMXh1SUNCOVhHNTlYRzVjYmk1b1pXRmtaWElnZTF4dUlDQmthWE53YkdGNU9pQjBZV0pzWlR0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnY0dGa1pHbHVaem9nTWk0Mk1UaHlaVzBnTUNBeExqWXhPSEpsYlNBd08xeHVmVnh1WEc0dWFHVmhaR1Z5WDE5c2IyZHZMWFJsZUhRZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURFdU5qRTRjbVZ0TzF4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ2JXbGtaR3hsTzF4dUlDQmthWE53YkdGNU9pQjBZV0pzWlMxalpXeHNPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOVEF3TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTUR0Y2JuMWNibHh1TG1obFlXUmxjbDlmYkc5bmJ5MWxiWEJvWVhOcGN5QjdYRzRnSUdOdmJHOXlPaUFqWkRJeU56TXdPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dWZWeHVYRzVBYldWa2FXRWdZV3hzSUdGdVpDQW9iV2x1TFhkcFpIUm9Palk0TVhCNEtTQjdYRzRnSUM1b1pXRmtaWElnZTF4dUlDQWdJRzFoY21kcGJqb2dNUzQyTVRoeVpXMGdNQ0F5TVhCNElEQTdYRzRnSUgxY2JseHVJQ0F1YUdWaFpHVnlYMTlzYjJkdkxYUmxlSFFnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTWk0Mk1UaHlaVzA3WEc0Z0lIMWNibjFjYmx4dVFHMWxaR2xoSUdGc2JDQmhibVFnS0cxcGJpMTNhV1IwYURveE1ESTBjSGdwSUh0Y2JpQWdMbWhsWVdSbGNpQjdYRzRnSUNBZ2JXRnlaMmx1T2lBeUxqWXhPSEpsYlNBd0lERXVOakU0Y21WdElEQTdYRzRnSUgxY2JseHVJQ0F1YUdWaFpHVnlYMTlzYjJkdkxYUmxlSFFnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTkM0eU16WnlaVzA3WEc0Z0lIMWNibjFjYmx4dVFHMWxaR2xoSUdGc2JDQmhibVFnS0cxcGJpMTNhV1IwYURveE1qQXdjSGdwSUh0Y2JpQWdMbWhsWVdSbGNpQjdYRzRnSUNBZ2JXRnlaMmx1T2lBMExqSXpObkpsYlNBd0lESXVOakU0Y21WdElEQTdYRzRnSUgxY2JseHVJQ0F1YUdWaFpHVnlYMTlzYjJkdkxYUmxlSFFnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTkM0eU16WnlaVzA3WEc0Z0lIMWNibjFjYmx4dUxteHZaMmx1SUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCNkxXbHVaR1Y0T2lBeE1EQTdYRzRnSUd4bFpuUTZJRFV3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbVZrTzF4dWZWeHVYRzR1YkdsemRDQjdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNObVptWm1abVk3WEc1OVhHNWNiaThxWEhKY2JpQXFJRk5sWVhKamFHSmhjbHh5WEc0Z0tpQTlQVDA5UFQwOVBUMWNjbHh1SUNvdlhHNWNiaTV6WldGeVkyaGlZWElnZTF4dUlDQm9aV2xuYUhRNklERnlaVzA3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnY0dGa1pHbHVaeTFpYjNSMGIyMDZJRFZ5WlcwN1hHNTlYRzVjYm1sdWNIVjBJSHRjYmlBZ2IzVjBiR2x1WlRvZ2JtOXVaVHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUTdYRzRnSUdKdmNtUmxjam9nYm05dVpUdGNiaUFnWTI5c2IzSTZJQ05HT0VZNFJrWTdYRzRnSUhSbGVIUXRjMmhoWkc5M09pQXdjSGdnTUhCNElEQndlQ0FqUmpoR09FWkdPMXh1SUNBdGQyVmlhMmwwTFhSbGVIUXRabWxzYkMxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN1hHNGdJRzl3WVdOcGRIazZJQzQzTzF4dWZWeHVYRzR1YzJWaGNtTm9ZbUZ5WDE5aVlYSWdlMXh1SUNCdFlYSm5hVzQ2SUdGMWRHODdYRzRnSUhkcFpIUm9PaUF5TUhKbGJUdGNiaUFnWW05eVpHVnlMV0p2ZEhSdmJUb2dNWEI0SUhOdmJHbGtJQ05HT0VZNFJrWTdYRzRnSUhCaFpHUnBibWM2SUM0MWNtVnRPMXh1SUNCbWIyNTBMWE5wZW1VNklERXVNM0psYlR0Y2JuMWNibHh1TG14cGMzUWdlMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBalptWm1abVptTzF4dWZWeHVMeW9qSUhOdmRYSmpaVTFoY0hCcGJtZFZVa3c5WkdGMFlUcGhjSEJzYVdOaGRHbHZiaTlxYzI5dU8ySmhjMlUyTkN4bGVVb3lXbGhLZW1GWE9YVkphbTk2VEVOS2VtSXpWbmxaTWxaNlNXcHdZa2xwT1Zaak1sWjVZM2s1VVZwWFVubGllVUpJV1ZoS2FscFliM1pTUjFaNllUTlNkbU5ET1hkamJUbHhXbGRPTUdONU9YbGFWMFpxWkVNeGFXSXliSE5hV0VsMldtNUtkbUp1VVhaak0wcHFUREpPZG1KWVFuWmliVloxWkVoTmRsbHVWblZhUjNoc1RHMU9lbU41U21STVEwcDFXVmN4YkdONVNUWlhNVEJ6U1cweGFHTklRbkJpYldSNlNXcHZhVkZWUmtKUlZIUkdVVlZPUkU4d1ZrSlJNRVUzVWxWR1JGRlVkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRkUzVWxWR1JGRjZkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRkUzVWxWR1JGRjZkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRkUzVWxWR1JGRjZkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRkUzVWxWR1JGRjZkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRkUzVWxWR1JGRjZkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRkUzVWxWR1JGRjZjemRQTUVaQ1VqQlJOMUpWUmtSUmVuUkdVVlZPUWs5NmN6ZFJWVVpJVWtSMFJsRlZUa1JQTUZaQ1VUQkZOMUpWUmtSUlZIUkdVVlZPUWs4d1ZrSlJNRVUzVDNwMFFsRlZaRVZQTUVaQ1VUQk5OMU5WUmtSUmVuTTNUM3AwUWxGVlpFZFBlbk0zVDNwMFFsRlZkRUpQTUVaQ1VUQk5OMDk2ZEVKUlZteENUM3B6TjFGVlJsUlJWSE0zVHpCR1FsWXdSVGRQZW5SQ1VWVXhRazk2Y3pkUlZVWk9VVlJ6TjA5NmN6ZFJWVVpVVWtSek4wOTZjemRSVlVab1VWUjBSbEZWVGtSUE1GWkNVVEJGTjFKVlJrUlJWSFJHVVZWT1FrOHdWa0pSTUVVM1VsVkdSRkZVY3pkUE1FWkNVakJSTjFKVlJrUlJlblJHVVZWT1FrOHdWa0pSTUVVM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFBlblJDVVZWa1JVOHdWa0pSTUUwM1QzcDBRbEZWWkVWUE1GWkNVVEJOTjFKVlJrUlJWSFJHVVZWT1FrOHdWa0pSTUVVM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZSMFJsRlZUa0pQZW5NM1VWVkdTRkpFZEVaUlZVNUVUekJXUWxFd1JUZFBlblJDVVZWa1JVOHdWa0pSTUUwM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZSek4wOHdSa0pTTUZFM1VsVkdSRkY2ZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZSMFJsRlZUa0pQZW5NM1VWVkdTRkpFZEVKUlZVNUVUekJzUWxFd1RUZFRWVVpFVVZSMFNsRlZUa0pQTUd4Q1VUQkZOMU5WUmtSUlZITTNUekJHUWxKVlVUZFRWVVpFVVhwMFNsRlZUa0pQTUd4Q1VUQkZOMDk2ZEVKUlZWWkZUekJzUWxFd1RUZFRWVVpFVVZSek4wOHdSa0pTVlZFM1UxVkdSRkY2Y3pkUGVuUkNVVlZzUjA4d1JrSlJNRTAzVTFWR1JGRjZkRXBSVlU1Q1R6QnNRbEV3UlRkUGVuUkNVVlZrUlU4d2JFSlJNRTAzVTFWR1JGRlVjemRQZW5SQ1VWVnNSMDh3UmtKUk1FMDNVMVZHUkZGNmRFcFJWVTVDVDNwek4wOHdSa0pUVlZrM1VWVkdSRkY2ZEVwUlZVNUVUM3B6TjA4d1JrSlRWVmszVVZWR1JGRjZkRXBSVlU1RVR6QnNRbEV3UlRkUGVuTTNVVlZHU2xKcWRFSlJWVTVFVHpCc1FsRXdUVGRUVlVaRVVWUjBTbEZWVGtKUGVuTTNUekJHUWxOVldUZFNWVVpFVVhwMFJsRlZUa0pQTUZaQ1VUQkZOMUpWUmtSUlZIUkdVVlZPUWs4d1ZrSlJNRVUzVDNwMFFsRlZaRVZQTUVaQ1VUQk5OMU5WUmtSUmVuTTNUM3AwUWxGVmJFZFBNRVpDVVRCTk4xTlZSa1JSZW5NM1QzcDBRbEZWYkVkUE1FWkNVVEJOTjFOVlJrUlJlbk0zVDNwMFFsRlZiRWRQTUZaQ1VUQk5OMUpWUmtSUlZIUkdVVlZPUWs4d1ZrSlJNRVUzVDNwMFFsRlZaRVZQTUZaQ1VUQk5OMUpWUmtSUlZIUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVjemRQTUVaQ1VqQlJOMUpWUmtSUmVuUkdVVlZPUWs5NmN6ZFJWVVpJVWtSMFFsRlZUa1JQTUd4Q1VUQk5OMDk2ZEVKUlZWWkZUekJzUWxFd1RUZFBlbk0zVVZWR1NsSnFkRUpSVlU1RVR6QnNRbEV3VFRkUGVuUkNVVlZXUlU4d2JFSlJNRTAzVDNwek4xRlZSa3BTYW5SQ1VWVk9SRTh3YkVKUk1FMDNUM3AwUWxGVlZrVlBNR3hDVVRCTk4wOTZjemRSVlVaS1VtcDBSbEZWVGtSUE1GWkNVVEJGTjFKVlJrWlJWSFJHVVZWT1FrOTZjemRSVlVaSVVrUjBSbEZWVGtKUGVuTTNVVlZHU0ZGVWN6ZFBlbk0zVVZWR1RGRjZkRVpSVlU1RVR6QldRbEV3UlRkU1ZVWkVVa1J6TjA4d1JrSlNNRVUzVWxWR1JGRjZkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlIwUmxGVlRrSlBNRlpDVVRCRk4xSlZSa1JTUkhNM1R6QkdRbEl3VVRkU1ZVWkVVWHAwUmxGVlRrSlBNRlpDVVRCRk4xSlZSa1JSVkhSR1VWVk9Razk2Y3pkUlZVWklVa1IwUmxGVlRrSkphWGRwWXpJNU1XTnRUbXhqTUU1MlltNVNiR0p1VVdsUGJITnBZVWhTZEdKRFFqZFlTRXBqWW14NE1GcHRPWFZrUXpGdFdWY3hjR0pJYXpaSlEyUlRXVmR3YTJGSFJuVmhVMk56U1VoT2FHSnVUWFJqTWxaNVlWZFpOMWhJU21OaWJIZ3dXVzFHYW1FeVpIbGlNMVoxV2tNeGFtSXllSFpqYW05blpHMUdlVXRETUhSWmJVWnFZVEprZVdJelZuVmFRekZxWWpKNGRtTnBhemRZU0VwallteDRNRmt5T1hOaU0wazJTVWhhYUdOcFozUk1XRTVzV1RJNWRWcEhSbmxsVXpGcVlqSjRkbU5wYXpkWVNFcGpZbXg0TUZwdE9YVmtRekY2WVZod2JFOXBRakpaV0VsdlRGTXhkR0l5VWpGaVIwWjVURmRLYUdNeVZYQlBNWGg1V0VjMVkyUkhlSEJpYlZWMFlVZFdjRm95YURCUGFVRjRUa1JCYkU4eGVIbFlSelZqWkVkYWRtSnVVWFJrTWxad1dqSm9NRTlwUVRCTlJFRTNXRWhLWTJKdU1XTmpiSGgxV0VoS1kySnJRbTFpTWpVd1RGZGFhRmt5VldkbE1YaDVXRWMxWTJSSFduWmlibEYwV20xR2RHRlhlRFZQYkhkcFZXMUdjVnBIYUdoaWJXeGpTV3AwWTJOc2VIVllTRkp0WWpJMU1FeFlUakJsVjNoc1QybENkV0l6U25SWlYzYzNXRWhLWTJKc2VEQmFiVGwxWkVNeE0xcFhiRzVoU0ZFMlNVUk5kMDFFZEdOamJIaDFXRWhTZW1OdFRUWmtXRXB6UzBaM2FVd3lXblppYmxKNlRERkthR0Z0VW05WlZ6VndURlY0Y0ZveWFEQk1ibEl3V214M2FVdFVkR05qYkhoMVpsWjRlVmhITldOamJIaDFVVWRhZG1KdVVYUmFiVVpxV2xOQ04xaElTbU5pYkhnd1dtMDVkV1JETVcxWlZ6RndZa2hyTmxoRFNsTlpWM0JyWVVkR2RXRldkMmxQTVhoNVdFYzFZMlJIV25aaWJsRjBZek5TTldKSFZUWkpSelYyWTIweGFHSkVkR05qYkhoMVdFaFNiV0l5TlRCTVdHUnNZVmRrYjJSRWIyZE9SRUYzVHpGNGVWaEhOV05rU0U1NVdYcHdNV050ZDI5WVEwbDJXbTA1ZFdSSVRYWlZiVVp4V2tkb2FHSnRhM1JWYlZadVpGZDRhR05wTlRCa1IxcGpTV2xyTjFoSVNtTmliakZqWTJ4NGRWaElTbU5pYTBKdFlqSTFNRXhYV21oWk1sVm5aVEY0ZVZoSE5XTmtSMXAyWW01UmRGcHRSblJoVjNnMVQyeDNhVlZ0Um5GYVIyaG9ZbTFzWTBscWRHTmpiSGgxV0VoU2JXSXlOVEJNV0U0d1pWZDRiRTlwUW5WaU0wcDBXVmQzTjFoSVNtTmliSGd3V20wNWRXUkRNVE5hVjJ4dVlVaFJOa2xFVlhkTlJIUmpZMng0ZFZoSVVucGpiVTAyWkZoS2MwdEdkMmxNTWxwMlltNVNla3d4U21oaGJWSnZXVmMxY0V4Vk1XeGFSMnd4WWxNMU1HUkhXbU5KYVdzM1dFaEtZMkp1TVdOamJIaDFXRWhLWTJKclFtMWlNalV3VEZkYWFGa3lWV2RsTVhoNVdFYzFZMlJIV25aaWJsRjBXbTFHZEdGWGVEVlBiSGRwVlcxR2NWcEhhR2hpYld4alNXcDBZMk5zZUhWWVNGSnRZakkxTUV4WVRqQmxWM2hzVDJsQ2RXSXpTblJaVjNjM1dFaEtZMkpzZURCYWJUbDFaRU14TTFwWGJHNWhTRkUyU1VSWmQwMUVkR05qYkhoMVdFaFNlbU50VFRaa1dFcHpTMFozYVV3eVduWmlibEo2VERGS2FHRnRVbTlaVnpWd1RGWk9iR0pYYkVOaU1uaHJURzVTTUZwc2QybExWSFJqWTJ4NGRXWldlSGxZUnpWalkyeDRkVkZIV25aaWJsRjBXbTFHYWxwVFFqZFlTRXBqWW14NE1GcHRPWFZrUXpGdFdWY3hjR0pJYXpaWVEwcFRXVmR3YTJGSFJuVmhWbmRwVHpGNGVWaEhOV05rUjFwMlltNVJkR016VWpWaVIxVTJTVWMxZG1OdE1XaGlSSFJqWTJ4NGRWaElVbTFpTWpVd1RGaGtiR0ZYWkc5a1JHOW5UbnBCZDA4eGVIbFlSelZqWkVoT2VWbDZjREZqYlhkdldFTkpkbHB0T1hWa1NFMTJWVzFHY1ZwSGFHaGliV3QwVVcwNWMxcEROVEJrUjFwalNXbHJOMWhJU21OaWJqRmpZMng0ZFZoSVNtTmliVXAyV2tocloyVXhlSGxZUnpWalpFY3hhR050WkhCaWFtOW5UVVIwWTJOc2VIVm1Wbmg1V0VjMVkyTnNlSFZaVTBJM1dFaEtZMkpzZURCWk1qbHpZak5KTmtsSGJIVmhSMVo1WVZoUk4xaElTbU5pYkhnd1pFZFdOR1JETVd0YVYwNTJZMjFHTUdGWE9YVlBhVUoxWWpJMWJFOHhlSGxZUnpVNVdFaEtZMkpzZUhsWVJ6UjFZa2RHTldJelZqQkpTSFJqWTJ4NGRWaElVblJaV0dkMFpESnNhMlJIWnpaSlJFVjNUVU5WTjFoSVNtTmliSGd3WWxkR2VWb3liSFZQYVVKb1pGaFNkazh4ZUhsWVJ6VmpaRWM1TWxwWVNtMWlSemt6VEZobk5rbEhhSEJhUjFKc1ltcDBZMk5zZUhWWVNGSnBXVmRPY2xvelNuWmtWelZyVEZkc2RGbFhaR3hQYVVJeVdWaEpiMHhUTVdsWlYwNXlXak5LZG1SWE5XdE1XRkpzWlVoU01XTnRWWFJqTWpGb1lrZDNjRTh4ZUhsWVJ6VmpaRWRLYUZreWRHNWpiVGt4WW0xUmRHTnRWbmRhVjBZd1QybENlVnBZUW14WldGRTNXRWhLWTJKdU1XTmpiSGgxV0VoS1kySnJRblJhVjFKd1dWTkJiMHhUTVRCWlYwcHpXbGhSZEdKSFJubGFNbFZ3U1VoMFkyTnNlSFZZU0ZGMVlrZEdOV0l6VmpCSlNIUmpZMng0ZFZoSVVtTmtSMHBvV1RKMGJtTnRPVEZpYlZGMFlWY3hhRm95VlRaSlNGcG9ZMmxuZEV4WFNtaFpNblJ1WTIwNU1XSnRVWFJrUjFZMFpFaFdlVnBUTVhSYVYxSndaRmN3Y0U4eGVIbFlSelZqWkVneFkyTnNlSFZtVm5oMVRIbHZjVXRzZUhsWVJ6Um5TMmxDVjFsWVNuQlpWMHB6V2xoT1kyTnNlSFZKUTI5blRGWjRlVmhITkdkTGFUbGpZMng0ZFZoSVNtTmlhbkI1WWpJNU1FbElkR05qYkhoMVdFaFJka3RzZUhsWVJ6VmpaRU5CY1VsRk1YWmFTRlp6V1ZoSloxVXlUbWhpUjFWblRGTkJlRXhxV1hoUFEwRnZVakk1YzFwSFZuVkpSa3BvWkVkc2RrdFdlSGxZUnpWalpFTkJjVXd4ZUhsWVJ6VmpaRU13ZEdKWE9XdGtWM2hvWTJreE5HVklhSHBQYVVGM1RHcEJOV050Vm5SUE1YaDVXRWMxWTJSRE1IUmlWemxyWkZkNGFHTnBNVFJsU0UwMlNVUkJkVTFVVVRKamJWWjBUekY0ZVZoSE5XTmtRekIwWWxjNWEyUlhlR2hqYVRFMFkzcHZaMDFETkhwUFJFcDVXbGN3TjFoSVNtTmliSGd3VEZNeGRHSXlVakZpUjBaNVRGaE5Oa2xFUVhWT2FrVTBZMjFXZEU4eGVIbFlSelZqWkVNd2RHSlhPV3RrVjNob1kya3hhVmxZVG14UGFVRjVUVmhDTkU4eGVIbFlSelZqWkVNd2RHSlhPV3RrVjNob1kya3hjMDlwUVhoTWFsbDRUMGhLYkdKVWRHTmpiSGgxV0VoUmRFeFhNWFphU0ZaeldWaEpkR1ZIZHpaSlJFbDFUbXBGTkdOdFZuUlBNWGg1V0VjMVkyUkRNSFJpVnpsclpGZDRhR05wTVRSbFIzYzJTVVJSZFUxcVRUSmpiVlowVHpGNGVWaEhOV05rUXpCMFlsYzVhMlJYZUdoamFURTBaVWhvYzA5cFFUSk1hbWN4VGtoS2JHSlVkR05qYkhoMVdFaFJka3RzZUhsWVJ6VmpaRU5CY1VsR1VtOWFWekZzV0VoS1kySnNlREJKUTI5MldFaEtZMkpzZURCTVV6RnBXVmRPY2xvelNuWmtWelZyVEZoU2JHVklVakZqYlZWMFl6SXhhR0pIZHpaSlNGWjVZa05uZG1GWE1XaGFNbFo2VEROU2JHVklVakZqYlZaNlRESkthRmt5ZEc1amJUa3hZbTFSZEdSSFZqUmtTRlo1V2xNeGVtSlhSbk5pUXpWeFkwZGpjRTh4ZUhsWVJ6VmpaRU13ZEZsdFJtcGhNbVI1WWpOV2RWcERNVEJhV0dnd1pGaEtiRXhYTVd4YVIyd3hZbFJ2WjJSWVNuTkxRemx3WWxkR2JscFlUWFprUjFZMFpFaFdlVnBZVFhaWmJVWnFZVEprZVdJelZuVmFRekV3V2xob01HUllTbXhNVnpGc1drZHNNV0pUTlhGalIyTndUekY0TUZoSVNtTmliSGd3VEZNeGFWbFhUbkphTTBwMlpGYzFhMHhZVW14bFNGSXhZMjFWZEdKSFJubGFNbFUyU1VoV2VXSkRaM1poVnpGb1dqSldla3d6VW14bFNGSXhZMjFXZWt3eVNtaFpNblJ1WTIwNU1XSnRVWFJrUjFZMFpFaFdlVnBUTVhOWldFcHVXbE0xY1dOSFkzQlBNWGd3V0VoS1kySnNlREJNVXpGcFdWZE9jbG96U25aa1Z6VnJURmRPZG1KSE9YbFBhVUZxVFZScmVFNTZSVFZQTVhoNVdFYzFZMlJETUhSaVYwWndZbWt4YW1JeWVIWmphbTluU1RKUmVVMXFZM3BOUkhSalkyeDRkVmhJVVhSTVdFNXNXVEk1ZFZwSFJubGxVekZxWWpKNGRtTnFiMmRKTWxVeVdrZEthMWw2ZEdOamJIaDFXRWhSZGt0c2VIbFlSelZqWkVOQmNVbEZUblppUnpsNVl6RjRlVmhITldOa1EwRnhUREY0ZVZoSE5XTmtRekIwV1RJNWMySXpTWFJrTW1od1pFZFZOa2xEVG0xYWJWcHRXbTFaTjFoSVNtTmliSGd3VEZNeGFtSXllSFpqYVRGdVkyMUdOVXhYZUhCYU1tZ3dXbGhPTUU5cFFXcGFiVTV0V1RKYWFrOHhlSGxZUnpWalpFTXdkRmt5T1hOaU0wbDBXak5LYUdWVE1YTmhWMlJ2WkVkV2VVOXBRV3BhYWs1dFRUSlplazh4ZUhsWVJ6VmpaRU13ZEZreU9YTmlNMGwwV2pOS2FHVlRNWE5oVjJSdlpFUnZaMGt3VlhsU1ZFcEdUV3AwWTJOc2VIVllTRkYwVEZkT2RtSkhPWGxNVjJSNVdWaHJkR0pYVm10aFdGWjBURmQ0Y0ZveWFEQlBhVUZxV2tkU2ExcEhVbXRQTVhoNVdFYzFZMlJETUhSWk1qbHpZak5KZEZvelNtaGxVekYwV2xkU2NHUlhNRFpKUTA1c1dWZFdhRnBYUlRkWVNFcGpZbXg0TUV4VE1XcGlNbmgyWTJreGJtTnRSalZNVjFKb1kyMXpOa2xEVFRGT1ZGVXhUbFJWTjFoSVNtTmliSGd3VEZNeGFtSXllSFpqYVRGdVkyMUdOVXhYVW1oamJYUnNZMnB2WjBsNlRtMU5NbGw2V21wMFkyTnNlSFZZU0ZGMlMyeDRlVmhITldOa1EwRnhTVVpTYkdWSVVucFlTRXBqWW14NE1FbERiM1pZU0VwallteDRNRXhUTVdwaU1uaDJZMmt4TUZwWWFEQk1WMlI1V1ZoQ2IwOXBRV3BOTWxWNldsUk9iRTh4ZUhsWVJ6VmpaRU13ZEZreU9YTmlNMGwwWkVkV05HUkRNWE5oVjJSdlpFUnZaMGw2WnpKUFJGazBUbXAwWTJOc2VIVllTRkYwVEZkT2RtSkhPWGxNV0ZKc1pVaFJkRnBIUm5saGVtOW5TWHBSZUU1RVJUQk5WSFJqWTJ4NGRWaElVWFpMYkhoNVdFYzFZMlJEUVhGSlJVWnpXbGhLTUV3eFRqQlpXRkl4WTNsQ2FtSXllSFpqYms1alkyeDRkVmhJVVdkTGFUbGpZMng0ZFZoSVVYUk1WMDUyWWtjNWVVeFhWbmxqYlRsNVQybEJhbEpGU1RCT2VrMHlUekY0ZVZoSE5XTmtRekIwV1RJNWMySXpTWFJqTTFacVdUSldlbU42YjJkSmVsWkhVVlJCTVUxcWRHTmpiSGgxV0VoUmRFeFhUblppUnpsNVRGaGthR050TlhCaWJXTTJTVU5PUlZKRVpFZE5lazAzV0VoS1kySnNlREJNZVhCalkyeDRkVmhJVVdkTGFVSkdXVmhPY0dKdFpIcFlTRXBqWW14NE1FbERiM1pZU0VwallteDRNRXhUTVd4WldFNXdZbTFqZEdGWE9YcFBhVUpxWkZkS2NGbDVNV2xhV0hCd1dsaEpiMDFETkhsTmVYZG5UVk4zWjAxRE5IcE5hWGRuVFZOck4xaElTbU5pYkhnd1RGTXhiRmxZVG5CaWJXTjBXbGhvZDFsWE5XdFBhVUpxWkZkS2NGbDVNV2xhV0hCd1dsaEpiMDFETkhoT2VsVnpTVVJCZFU5RVp6Rk1RMEYzVEdwTmVVMURkMmROVXpSNVRucFZjRTh4ZUhsWVJ6VmpaRU13ZEZwWFJucGhWelZ1VEZoR01WbFhVVFpKUjA0eFdXMXNha3hYU214bGJXeHNZMmxuZDB4cVl6Tk5RM2RuVFVNMGQwMUVRWE5KUkVGMVRWUmpNVXhEUVhoTWFrRjNUVU5yTjFoSVNtTmliakZqWTJ4NGRWaElTbU5pYkhoNVdFYzBka3RwYjNGWVNFcGpZbWxCY1VsRk1XeGFSMnhvU1VoR01WcFlTbkJhV0U1alkyeDRkVWxEYjJkTVZuaDVXRWMwWjB0cE9XTmpiSGgxV0VoS1kySnJRbXBrV0U0d1lqSXdkR0pYVm10aFYwVm5URk14TUZsWFNuTmFXRkZuV1ZkNGMwbEhSblZhUTBGdllsZHNkVXhZWkhCYVNGSnZUMnBaTkUxWVFqUkxWSFJqWTJ4NGRWRkhUakZqTTFKMllsTXhkRnBYVW5CWlUwRjBURmhTYUZsdGVHeGtRekZ6V1ZoS2JscFRRbWhpUjNkbldWYzFhMGxEYUhSaFZ6UjBaREpzYTJSSFp6Wk5WRUY1VGtoQ05FdFVkR05qYkhoMVVVZE9NV016VW5aaVV6RjBXbGRTY0ZsVFFYUk1WMUpzWXpKME1HSXpRWFJqTWpGb1lrZDNaMWxYZUhOSlIwWjFXa05CYjJKWGJIVk1XR1J3V2toU2IwOXFSWGhOUkVKM1pVTnJOMWhJU21OaWEwSnFaRmhPTUdJeU1IUmlWMVpyWVZkRloweFRNV3RhV0U1eVpFYzVkMHhYTVd4YVIyd3hZbE5DYUdKSGQyZFpWelZyU1VOb2RHRlhOSFJrTW14clpFZG5OazFVU1hkTlNFSTBTMVIwWTJOc2VIVlJSMDR4WXpOU2RtSlRNWFJhVjFKd1dWTkJkRXhYVW14ak1uUXdZak5CZEdKSFJubGFNbFZuV1ZkNGMwbEhSblZhUTBGdllsZHNkVXhZWkhCYVNGSnZUMnBGTUU1RVFuZGxRMnMzV0VoS1kySnJRbXBrV0U0d1lqSXdkR0pYVm10aFYwVm5URk14YTFwWVRuSmtSemwzVEZob2MxbFlTbTVhVTBKb1lrZDNaMWxYTld0SlEyaDBZVmMwZEdReWJHdGtSMmMyVFZSamVVMUlRalJMVkhSalkyeDRkVkZIVGpGak0xSjJZbE14ZEZwWFVuQlpVMEYwVEZkU2JHTXlkREJpTTBGMFpVaG9jMWxZU201YVUwSm9Za2QzWjFsWE5XdEpRMmgwWVZjMGRHUXliR3RrUjJjMlRWUnJlVTFJUWpSTFZIUmpZMng0ZFZoSE5IVlpNa1o1V2tZNVpsa3pUbnBNVjJSNVlWZFJaMlV4ZUhsWVJ6VmpaRWRTY0dNelFuTlpXR3MyU1Vka2VXRlhVVGRZU0VwallteDRNRm96U25CYVF6RXdXbGN4ZDJKSFJqQmFVekZxWWpKNE1XSlhOWHBQYVVKNVdsaENiRmxZVVc5TmFYZG5UVmRhZVV0VWRHTmpiSGgxV0VoUmRHSllUWFJhTTBwd1drTXhhbUl5ZURGaVZ6VjZUMmxDZVZwWVFteFpXRkZ2VFdsM1owMVhXbmxMVkhSalkyeDRkVmhJVW01amJXeHJURmRrYUdORWIyZGtiVVo1UzBNd2RHSlhPV3RrVjNob1kya3hOR1ZJVFhCUE1YaDVXRWMxWTJSSE1XaGpiV1J3WW1wdlowMURRWGRKU0Zwb1kybG5kRXhYTVhaYVNGWnpXVmhKZEdKRGF6ZFlTRXBqWW14NE1HTkhSbXRhUjJ4MVducHZaMDFEUWpKWldFbHZURk14ZEdJeVVqRmlSMFo1VEZob2VrdFVkR05qYkhoMVpsWjRlVmhITldOamJIaDFURzFPYUdOdFVXZGxNWGg1V0VjMVkyUklRblpqTW13d1lWYzVkVTlwUW5sYVYzaG9aRWRzTWxwVWRHTmpiSGgxV0VoU2FWbFhUbkphTTBwMlpGYzFhMHhYVG5aaVJ6bDVUMmxDTWxsWVNXOU1VekZwV1ZkT2Nsb3pTblprVnpWclRGZE9kbUpIT1hsTFZIUmpZMng0ZFZoSVVtbGlNMHByV2xoSk5rbEVSbmRsUTBKMlpGaFNlbHBZVVdka2JVWjVTME13ZEZreU9YTmlNMGwwV2pOS2FHVlRNV3RaV0VweVdsaEpjRTh4ZUhsWVJ6VmpaRWRPTVdOdVRuWmphbTluWTBjNWNHSnVVbXhqYW5SalkyeDRkVmhJVW5aa2JWWjVXbTE0ZG1SNmIyZGhSMnhyV2tkV2RVOHhlSGxZUnpWalpFZDRjR0p0VlhSaFIxWndXakpvTUU5cFFYZFBNWGg1V0VjMU9WaElTbU5pYkhoNVdFYzBkVmt5Um5sYVJIQnZZak5hYkdOcU5IVlpNa1o1V2tZNVpsbHRZMmRsTVhoNVdFYzFZMlJJVW5sWlZ6VjZXbTA1ZVdKVWIyZGpNazVvWWtkVmIwMVROREJMVkhSalkyeDRkV1pXZUhsWVJ6VmpZMng0ZFV4dFRtaGpiVkptV0RJMWFHSlhWV2RsTVhoNVdFYzFZMlJJUW5aak1td3dZVmM1ZFU5cFFtaFpiazUyWWtoV01GcFVkR05qYkhoMVdFaFNiV0l5TlRCTVdHUnNZVmRrYjJSRWIyZE9ha0YzVHpGNGVWaEhOV05rUjFwMlltNVJkR015YkRaYVZHOW5aRzFHZVV0RE1IUmlWemxyWkZkNGFHTnBNWHBMVkhSalkyeDRkVmhJVWpCYVdHZ3dURmhTZVZsWE5YcGFiVGw1WWxSdloyUllRbmRhV0VwcVdWaE9iRTh4ZUhsWVJ6VmpaRWRLZG1SSVVuWmlWRzluVFZNME0yTnRWblJQTVhoNVdFYzFZMlJJYjNSaFZ6VnJXbGhuTmtsRVVUZFlTRXBqWW14NE1HSkhiSFZhVXpGdldsZHNibUZJVVRaSlJFRTNXRWhLWTJKc2VEQlpiVVpxWVRKa2VXSXpWblZhUXpGcVlqSjRkbU5xYjJkamJXUnBXVk5uZVUxVVFYTkpSRTAxVEVOQk1FOURkMmROUXpRMFMxUjBZMk5zZUhWWVNGSjNXVmRTYTJGWE5XNVBhVUYxVGtSV2VWcFhNRGRZU0VwalltNHhZMk5zZUhWWVNFcGpZbWsxYWxsWVNtdFlNVGxwV25sQ04xaElTbU5pYkhnd1lsZEdORXhZWkhCYVNGSnZUMmxCZUUxRVFXeFBNWGg1V0VjMVkyUklVbmxaVnpWNllWaFNjR0l5TkRaSlIwWnpZa05CZFU1SVRUZFlTRXBqWW00eFkyTnNlSFZZU0VwalltazFhbGxZU210WU1Ua3dXVmRqZEdKSGJIVmFVMEkzV0VoS1kySnNlREJqUnpsNllWaFNjR0l5TkRaSlNFcHNZa2RHTUdGWVdteFBNWGg1V0VjMVkyUklVbXhsU0ZGMFdWZDRjRm95TkRaSlIwNXNZbTVTYkdOcWRHTmpiSGgxV0VoU2QxbFhVbXRoVnpWdVQybENNbGxZU1c5TVV6RjBZakpTTVdKSFJubE1XRTF3U1VSQk4xaElTbU5pYkhnd1dtMDVkV1JETVhwaFdIQnNUMmxDTWxsWVNXOU1VekYwWWpKU01XSkhSbmxNV0Uxd1R6RjRlVmhITldOa1NGSnNaVWhSZEdSSVNtaGliazV0WWpOS2RFOXBRakZqU0VKc1kyMU9hR015VlRkWVNFcGpZbTR4WTJOc2VIVllTRXBqWW1rMWFsbFlTbXRZTVRsb1dUSk9iR0p1VVdkbE1YaDVXRWMxWTJSSVFuWmpNbXd3WVZjNWRVOXBRbWhaYms1MllraFdNRnBVZEdOamJIaDFXRWhTTTJGWFVqQmhSRzluVFZSQmQwcFVkR05qYkhoMVdFaFNhVmxYVG5KYU0wcDJaRmMxYTB4WFRuWmlSemw1VDJsQ01sbFlTVzlNVXpGMFdWZHNkVXhYVG5aaVJ6bDVTMVIwWTJOc2VIVllTRkp2V2xkc2JtRklVVFpKUkVaM1pVUjBZMk5zZUhWWVNGSnBZak5TTUdJeU1EWkpSRUUzV0VoS1kySnVNV05qYkhoMVdFaEtZMkpyUW5SYVYxSndXVk5CYjB4VE1UQlpWMHB6V2xoUmNFbElkR05qYkhoMVdFaFJkVmt5Um5sYVJqbG1XVE5PZWt4WFpIbGhWMUZuWlRGNGVWaEhOV05rUm5nd1dqTktjRnBETVRCYVZ6RjNZa2RHTUZwVE1XcGlNbmd4WWxjMWVrOXBRbmxhV0VKc1dWaFJiMDE1ZDJkTlYxcDVTMVIwWTJOc2VIVllTRkpqWkVNeGRHTjVNVzVqYld4clRGZE9kbUpJVm5SaWJrMDJTVWhLYkdOSFZtaGtRMmQ2VEVOQmVGcHVTWEJQTVhoNVdFYzFZMlJHZURCYU0wcHdXa014YmxsWVFUWkpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkR1ZJVFhCUE1YaDVXRWMxWTJSR2VEQmlWMFo1V2pKc2RVOXBRWGRKUkVGblpHMUdlVXRETUhSaVZ6bHJaRmQ0YUdOcE1UUmlRMnMzV0VoS1kySnNlREJZU0ZKM1dWZFNhMkZYTlc1UGFVRjNTVWhhYUdOcFozUk1WekYyV2toV2MxbFlTWFJqZVdzM1dFaEtZMkpzZURCbVZuaDVXRWMxWTJSRE5XcFpXRXByV0RFNWRWbFhNV3hKU0hSalkyeDRkVmhJVW1Oa1IxcDJZbTVSZEdNeWJEWmFWRzluWkcxR2VVdERNSFJpVnpsclpGZDRhR05wTVdsWldFNXNTMVIwWTJOc2VIVllTRkpqWkVkS2RtUklVblppVkc5blRXazBOV050Vm5SUE1YaDVXRWMxWTJSR2VEQmpSMFpyV2tkc2RWcDZiMmRNYW1SNVdsY3dOMWhJU21OaWJIZ3dabFo0ZVZoSE5XTmtRelZxV1ZoS2ExZ3hPVEJaVjJOMFlrZHNkVnBUUWpkWVNFcGpZbXg0TUZoSVVtMWlNalV3VEZoT2NHVnRWVFpKU0Zwb1kybG5kRXhYTVhaYVNGWnpXVmhKZEZsdFJucGFVMnMzV0VoU1kyTnNlSFZZU0ZKalpFaENhRnBIVW5CaWJXTTJTVWhhYUdOcFozUk1WekYyV2toV2MxbFlTWFJaYlVaNldsTnJaMDFFZEdOa1JuaDVXRWMxWTJSSU1XTmpiSGgxV0VoUmRWa3lSbmxhUmpsbVdWZE9hbHBYTlRCSlNIUmpZMng0ZFZoSVVtTmtSMmhzWVZka2IyUkViMmROYmtJMFR6RjRlVmhITldOa1NERmpZMng0ZFdaV2VIbFlSelZqWTJ4NGRWRkhNV3hhUjJ4b1NVTm5kRXhZVW1oWmJYaHNaRU14YzFsWVNtNWFVMnRuWlRGNGVWaEhOV05rUXpWcVdWaEthMWd4T1dwak0wMTBXak5LY0ZwRFFqZFlTRXBqWW14NE1GaElVbTVqYld4clRGaFNiR0pZUW5OWldGSnNURmRPZG1KSVZuUmliazAyU1VoS2JHTkhWbWhrUTJjd1RFTkJlRnB1U1hCUE1YaDVXRWMxWTJSR2VEQk1WekY2VEZka2VXRlhVWFJaTWpselpGY3hkV042YjJkamJWWjNXbGRHTUV0RVVYTkpSRVp0WTJsck4xaElTbU5pYkhnd1dFaFNkMWxYVW10aFZ6VnVUMmxCZDBsSVdtaGphV2QwVEZjeGRscElWbk5aV0VsMFlrTnJOMWhJU21OaWJIZ3dXRWhLWTJKc2VEQm1Wbmg1V0VjMVkyUkROV3BaV0VwcldERTVkVmxYTVd4SlNIUmpZMng0ZFZoSVVtTmtSMHAyWkVoU2RtSlViMmROYVRRMVkyMVdkRTh4ZUhsWVJ6VmpaRVo0TUdOSFJtdGFSMngxV25wdloweHFaSGxhVnpBM1dFaEtZMkpzZURCbVZuaDVXRWMxT1ZoSVNtTmliSGg1V0VjMVFXSlhWbXRoVjBWblMwTXdkRnBIVm5waE0xSjJZME14ZW1KWFJuTmlRMnRuWlRGNGVWaEhOV05rUXpWcVdWaEthMWd4T1dwak0wMTBXak5LY0ZwRFFqZFlTRXBqWW14NE1GaElVbmRaVjFKcllWYzFiazlwUVhkSlNGcG9ZMmxuZEV4WE1YWmFTRlp6V1ZoSmRHVklhSE5MVkhSalkyeDRkVmhJVW1Oa1IyUjVZVmRSZEZveVJuZFBhVUl5V1ZoSmIweFRNWFJpTWxJeFlrZEdlVXhZVFhCUE1YZ3dXRWhLWTJKc2VEQm1Wbmg1V0VjMU9WaElTbU5pYkhoNVdFYzFRV0pYVm10aFYwVm5TME13ZEZwSFZucGhNMUoyWTBNeGRGcFhVbkJrVnpCd1NVaDBZMk5zZUhWWVNGRjFXVEpHZVZwR09XWlpNMDU2VEZka2VXRlhVV2RsTVhoNVdFYzFZMlJHZURCYU0wcHdXa014YmxsWVFUWkpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkRmx0Um5wYVUyczNXRWhLWTJKc2VEQm1Wbmg1V0VjMU9WaElTbU5pYkhoNVdFYzFRV0pYVm10aFYwVm5TME13ZEZwSFZucGhNMUoyWTBNeGMxbFlTbTVhVTJ0blpURjRlVmhITldOa1F6VnFXVmhLYTFneE9XcGpNMDEwV2pOS2NGcERRamRZU0VwallteDRNRmhJVW5kWlYxSnJZVmMxYms5cFFYZEpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkR1ZJYURSaVEyczNXRWhLWTJKc2VEQllTRkowV1ZoS2JtRlhORFpKUkVGblRVTkNNbGxZU1c5TVV6RjBZakpTTVdKSFJubE1XR2h6UzFSMFkyTnNlSFZZU0ZJNVdFaEtZMkp1TVdOamJIaDFXRWhLWTJKclFuUmFWMUp3V1ZOQmIweFRNV3RhV0U1eVpFYzVkMHhZYUhOWldFcHVXbE5yWjJVeGVIbFlSelZqWkVNMWFsbFlTbXRZTVRscVl6Tk5kRm96U25CYVEwSTNXRWhLWTJKc2VEQllTRkowV1ZoS2JtRlhORFpKUkVGblRVTkNNbGxZU1c5TVV6RjBZakpTTVdKSFJubE1XR2cwWWtOck4xaElTbU5pYkhnd1dFaFNkMWxYVW10aFZ6VnVUMmxCZDBsRVJYaE1ha0UwVDFoS2JHSlVkR05qYkhoMVdFaFNZMlJIWkhsaFYxRjBXakpHZDA5cFFqSlpXRWx2VEZNeGRHSXlVakZpUjBaNVRGZEthR015VlhCUE1YZ3dXRWhTWTJOc2VIVllTRkk1V0VoS1kySnVNV05qYkhoMVdFYzBkVnB0T1haa1IxWjVTVWgwWTJOc2VIVllTRkozV1ZkU2EyRlhOVzVQYVVJeVdWaEpiMHhUTVhSaU1sSXhZa2RHZVV4WVRYQlBNWGg1V0VjMVkyUklVbXhsU0ZGMFdWZDRjRm95TkRaSlIwNXNZbTVTYkdOcWRHTmpiSGgxV0VoU2JXSXlOVEJNV0U1d1pXMVZOa2xJV21oamFXZDBURmN4ZGxwSVZuTlpXRWwwWTNsck4xaElTbU5pYkhnd1lrZHNkVnBUTVc5YVYyeHVZVWhSTmtsRVJUQk5RMVUzV0VoS1kySnNlREJaYlRrMFRGaE9iMWxYVW5aa2VtOW5UVU5CZDBsRVJYbGpTR2RuVFVOQ01sbFlTVzlNVXpGMFdWZHNkVXhYVG5aaVJ6bDVTMVIwWTJOc2VIVllTRkpwV1ZkT2Nsb3pTblprVnpWclQybENNbGxZU1c5TVV6RnBXVmRPY2xvelNuWmtWelZyVEZkT2RtSkhPWGxMVkhSalkyeDRkV1pXZUhsWVJ6VmpZMng0ZFZGSE1XeGFSMnhvU1VObmRFeFlVbWhaYlhoc1pFTnJaMlV4ZUhsWVJ6VmpaRU0xYldJeU9UQmFXRWxuWlRGNGVWaEhOV05rUm5nd1kwZEdhMXBIYkhWYWVtOW5aRzFHZVV0RE1IUmlWemxyWkZkNGFHTnBNV2xaV0U1c1MxTkNNbGxZU1c5TVV6RjBZakpTTVdKSFJubE1XR2h6UzFSMFkyTnNlSFZZU0ZJNVdFaEtZMkp1TVdOamJIaDFXRWhLWTJKclFuUmFWMUp3V1ZOQmIweFRNVEJaVjBweldsaFJkR0pIUm5sYU1sVndTVWgwWTJOc2VIVllTRkYxV20wNWRtUkhWbmxKU0hSalkyeDRkVmhJVW1Oa1NFSm9Xa2RTY0dKdFl6WkpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkRmx0Um5wYVUydG5aRzFHZVV0RE1IUmlWemxyWkZkNGFHTnBNVFJsU0doelMxUjBZMk5zZUhWWVNGSTVXRWhLWTJKdU1XTmpiSGgxV0VoS1kySnJRblJhVjFKd1dWTkJiMHhUTVd0YVdFNXlaRWM1ZDB4WVRuUlpWM2h6UzFOQ04xaElTbU5pYkhnd1RHMWFkbUl6VW14amFVSTNXRWhLWTJKc2VEQllTRkozV1ZkU2EyRlhOVzVQYVVJeVdWaEpiMHhUTVhSaU1sSXhZa2RHZVV4WFNtaGpNbFZ3U1VSRmVFeHFRVFJQV0Vwc1lsUjBZMk5zZUhWWVNGSTVXRWhLWTJKdU1XTmpiSGgxV0VjMGRXRkhWbWhhUjFaNVNVaDBZMk5zZUhWWVNGSnJZVmhPZDJKSFJqVlBhVUl3V1ZkS2MxcFVkR05qYkhoMVdFaFNNRnBZYURCTVYwWnpZVmRrZFU5cFFtcGFWelV3V2xoSk4xaElTbU5pYkhnd1pESnNhMlJIWnpaSlJFVjNUVU5WTjFoSVNtTmliSGd3WTBkR2ExcEhiSFZhZW05blpHMUdlVXRETUhSaVZ6bHJaRmQ0YUdOcE1UUmlRMnRuVFVOQ01sbFlTVzlNVXpGMFlqSlNNV0pIUm5sTVYzZHdTVVJCTjFoSVNtTmliakZqWTJ4NGRWaElTbU5pYVRWdldsZEdhMXBZU21aWU1uaDJXakk0ZEdSSFZqUmtRMEkzV0VoS1kySnNlREJhYlRsMVpFTXhlbUZZY0d4UGFVSXlXVmhKYjB4VE1YUmlNbEl4WWtkR2VVeFhkM0JQTVhoNVdFYzFZMlJJV214amJsSndXVEpHYzB4WFJuTmhWMlIxVDJsQ2RHRlhVbXRpUjFVM1dFaEtZMkpzZURCYVIyeDZZMGQ0YUdWVWIyZGtSMFpwWWtkVmRGa3lWbk5pUkhSalkyeDRkVmhJVW0xaU1qVXdURmhrYkdGWFpHOWtSRzluVGxSQmQwOHhlSGxZUnpWalpFZDRjR0p0VlhSaFIxWndXakpvTUU5cFFYZFBNWGg1V0VjMU9WaElTbU5pYkhoNVdFYzBkV0ZIVm1oYVIxWjVXREU1YzJJeVpIWk1WMVowWTBkb2FHTXliSHBKU0hSalkyeDRkVmhJVW1waU1uaDJZMnB2WjJSdFJubExRekIwWWxkR2NHSnBNV3BpTW5oMlkybHJOMWhJU21OaWJIZ3dXbTA1ZFdSRE1UTmFWMnh1WVVoUk5rbEVZM2ROUkhSalkyeDRkV1pXZUhsWVJ6VmpZMng0ZFZGSE1XeGFSMnhvU1VObmRFeFlVbWhaYlhoc1pFTnJaMlV4ZUhsWVJ6VmpaRU0xYjFwWFJtdGFXRWxuWlRGNGVWaEhOV05rUm5nd1lsZEdlVm95YkhWUGFVSXlXVmhKYjB4VE1YUmlNbEl4WWtkR2VVeFhkM0JKUkVGblpHMUdlVXRETUhSaVZ6bHJaRmQ0YUdOcE1XbFpXRTVzUzFOQmQwOHhlSGxZUnpWalpFZ3hZMk5zZUhWWVNGRjFZVWRXYUZwSFZubFlNVGx6WWpKa2RreFlVbXhsU0ZGblpURjRlVmhITldOa1JuZ3dXbTA1ZFdSRE1YcGhXSEJzVDJsQ01sbFlTVzlNVXpGMFlqSlNNV0pIUm5sTVdHaHpTMVIwWTJOc2VIVllTRkk1V0VoS1kySnVNV05qYkhoMVdFaEtZMkpyUW5SYVYxSndXVk5CYjB4VE1UQlpWMHB6V2xoUmRHSkhSbmxhTWxWd1NVaDBZMk5zZUhWWVNGRjFZVWRXYUZwSFZubEpTSFJqWTJ4NGRWaElVbU5rUnpGb1kyMWtjR0pxYjJka2JVWjVTME13ZEdKWE9XdGtWM2hvWTJreE5HSkRhMmROUTBJeVdWaEpiMHhUTVhSaU1sSXhZa2RHZVV4WGQzQkpSRUUzV0VoS1kySnNlREJtVm5oNVdFYzFZMlJETlc5YVYwWnJXbGhLWmxneWVIWmFNamgwWkVkV05HUkRRamRZU0VwallteDRNRmhJVW0xaU1qVXdURmhPY0dWdFZUWkpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkR1ZJYUhOTFZIUmpZMng0ZFZoSVVqbFlTRXBqWW00eFkyTnNlSFZZU0VwalltdENkRnBYVW5CWlUwRnZURk14YTFwWVRuSmtSemwzVEZjeGJGcEhiREZpVTJ0blpURjRlVmhITldOa1F6VnZXbGRHYTFwWVNXZGxNWGg1V0VjMVkyUkdlREJpVjBaNVdqSnNkVTlwUWpKWldFbHZURk14ZEdJeVVqRmlSMFo1VEZob05HSkRhMmROUTBJeVdWaEpiMHhUTVhSaU1sSXhZa2RHZVV4WWFITkxVMEYzVHpGNGVWaEhOV05rU0RGalkyeDRkVmhJVVhWaFIxWm9Xa2RXZVZneE9YTmlNbVIyVEZoU2JHVklVV2RsTVhoNVdFYzFZMlJHZURCYWJUbDFaRU14ZW1GWWNHeFBhVUl5V1ZoSmIweFRNWFJpTWxJeFlrZEdlVXhZYURSaVEyczNXRWhLWTJKc2VEQm1Wbmg1V0VjMU9WaElTbU5pYkhoMVRHMTRkbG95YkhWSlNIUmpZMng0ZFZoSVVuZGlNMDV3WkVkc2RtSnFiMmRaVjBwNllqSjRNV1JIVlRkWVNFcGpZbXg0TUdWcE1YQmliVkpzWlVSdlowMVVRWGRQTVhoNVdFYzFZMk5zZUhWWVNGSnpXbGRhTUU5cFFURk5RMVUzV0VoS1kySnNlREJaYlVacVlUSmtlV0l6Vm5WYVF6RnFZako0ZG1OcWIyZGpiVlpyVHpGNGVWaEhOVGxZU0VwallteDRkVXh0ZUhCak0xRm5aVEY0ZVZoSE5XbGlNMHByV2xoSk5rbEVSbmRsUTBKNllqSjRjRnBEUWpKWldFbHZURk14YW1JeWVIWmphVEV6WVVkc01GcFRhemRZU0VwalltNHhZMk5zZUhWWVJ6UjJTMng0ZVZoSE5HZExhVUpVV2xkR2VWa3lhR2xaV0VwalkyeDRkVWxEYjJkUVZEQTVVRlF3T1ZCVU1EbFlTRXBqWW1sQmNVd3hlSGxZUnpWalkyeDRkVWxETlhwYVYwWjVXVEpvYVZsWVNXZGxNWGg1V0VjMFoxaElVbTlhVjJ4dVlVaFJOazFZU214aVZIUmpZMng0ZFVsR2VEQmtSMVkwWkVNeGFHSkhiRzVpYW5CcVdsYzFNRnBZU1RkWVNFcGpZbXg0TUdOSFJtdGFSMngxV25reGFXSXpVakJpTWpBMlRsaEtiR0pVZEdOamJIaDFTVWd4WTJOc2VIVllTRXBqWW1sQ2NHSnVRakZrUTBJM1dFaEtZMkpwUW1Oa1J6a3haRWQ0Y0dKdFZUWkpSelYyWW0xVk4xaElTbU5pYVVKalpFZEthRmt5ZEc1amJUa3hZbTFSZEZreU9YTmlNMGsyU1VoU2VWbFhOWHBqUjBaNVdsYzFNRTh4ZUhsWVJ6Um5XRWhTYVdJelNtdGFXRWsyU1VjMWRtSnRWVGRZU0VwalltbENZMlJIVG5aaVJ6bDVUMmxPUjA5RldUUlNhMWszV0VoS1kySnBRbU5rU0ZKc1pVaFJkR015YUdoYVJ6a3pUMmxCZDJOSVoyZE5TRUkwU1VSQ2QyVkRRV3BTYW1oSFQwVmFSMDh4ZUhsWVJ6Um5XRWhSZEdReVZtbGhNbXd3VEZoU2JHVklVWFJhYld4ellrTXhhbUl5ZUhaamFtOW5aRWhLYUdKdVRuZFpXRXBzWW01Uk4xaElTbU5pYkhnd1lqTkNhRmt5YkRCbFZHOTFUbnAwWTJOc2VIVkpTREZqWTJ4NGRWaElTbU5pYVRWNldsZEdlVmt5YUdsWldFcG1XREpLYUdOcFFqZFlTRXBqWW14NE1HSlhSbmxhTW14MVQyMUdNV1JIT0RkWVNFcGpZbXg0TUdReWJHdGtSMmMyVFdwQ2VWcFhNRGRZU0VwallteDRNRmx0T1hsYVIxWjVURmRLZG1SSVVuWmlWRzk0WTBobloyTXlPWE5oVjFGblNUQlpORkpxYUVkU2FuUmpZMng0ZFZoSVVuZFpWMUpyWVZjMWJrOXBOREZqYlZaMFR6RjRlVmhITldOa1IxcDJZbTVSZEdNeWJEWmFWRzk0VEdwT2VWcFhNRGRZU0VwalltNHhZMk5zZUhWWVJ6UjFZa2RzZW1SRFFqZFlTRXBqWW0xS2RtTnRVbXhqYW05blRWaENORWxJVG5aaVIyeHJTVWhhYUdOcFozUk1WMDUyWWtjNWVVeFlaRzloV0ZKc1MxUjBZMk5zZUhWbVZuaDVXRWMwYVZoWU1EMGdLaThpWFgwPSAqLyJdfQ== */