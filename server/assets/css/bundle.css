:root {
  font-size: 18px;
}

html {
  font-family: 'Rajdhani', sans-serif;
  background-color: rgb(19, 19, 19);
  color: #e6dbdc;
  font-size: 1rem;
  line-height: 1.3;
  font-weight: 400;
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/Rajdhani-Light.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/Rajdhani-Regular.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 500;
  src: url("/fonts/Rajdhani-Medium.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/Rajdhani-SemiBold.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/Rajdhani-Bold.ttf");
}

body {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.app {
  background-image: url("/images/textures/background-texture-large.jpg");
  background-repeat: repeat;
}

/***
 * Media queries
 * -
 */

@media all and (min-width:600px) {
  :root {
    font-size: 20px;
  }
}

@media all and (min-width:1800px) {
  :root {
    font-size: 22px;
  }
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Modular Scale
	 */
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.ad-container {
  display: none;
}

.ad-container-horizontal {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0 0 1.563rem;
  border: 2px solid white;
}

.ad-container-horizontal:last-child {
  margin: 0;
}

/***
 * Ad Locations
 * -
 */

.ad-container__home {
  margin-bottom: 0;
}

.ad-container__champion-index-middle {
  margin-bottom: 2.441rem;
}

/***
 * Media queries
 * -
 */

@media all and (min-width:1200px) {
  .ad-container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    height: auto;
    border: 2px solid white;
  }
}

.banner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  overflow: hidden;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  line-height: 0;
  box-shadow: 0 0 3px 0 #d22730;
  border-top: 1px solid #d22730;
  border-bottom: 1px solid #d22730;
  margin: 0 0 2.441rem;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  height: 6rem;
  background-position: center;
  background-size: cover;
}

.banner__name {
  position: absolute;
  left: 0;
  text-transform: uppercase;
  top: 50%;
  font-weight: 700;
  font-size: 1.953rem;
  text-shadow: 1px 1px 8px #d22730;
  padding: 0 0 0 .8rem;
  z-index: 100;
}

.banner__champ-wrapper {
  width: 130px;
  -webkit-animation-name: champ-intro;
  animation-name: champ-intro;
  -webkit-animation-duration: .75s;
  animation-duration: .75s;
  -webkit-animation-iteration-count: 1;
  animation-iteration-count: 1;
  -webkit-animation-timing-function: ease;
  animation-timing-function: ease;
  -webkit-animation-delay: .1s;
  animation-delay: .1s;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  opacity: 0;
}

.banner__img {
  height: 6rem;
}

/*
 * Animations
 */

@-webkit-keyframes champ-intro {
  0% {
    -webkit-transform: translateX(4rem);
    transform: translateX(4rem);
    opacity: 0;
  }

  100% {
    -webkit-transform: translateX(-1.5rem);
    transform: translateX(-1.5rem);
    opacity: 1;
  }
}

@keyframes champ-intro {
  0% {
    -webkit-transform: translateX(4rem);
    -o-transform: translateX(4rem);
    transform: translateX(4rem);
    opacity: 0;
  }

  100% {
    -webkit-transform: translateX(-1.5rem);
    -o-transform: translateX(-1.5rem);
    transform: translateX(-1.5rem);
    opacity: 1;
  }
}

/*
 * Media Queries
 */

@media all and (min-width:600px) {
  .banner {
    height: 9rem;
  }

  .banner__img {
    height: 12rem;
  }

  .banner__name {
    padding: 0 1rem;
  }

  .banner__champ-wrapper {
    -webkit-transform: translateX(-4rem);
    -ms-transform: translateX(-4rem);
    -o-transform: translateX(-4rem);
    transform: translateX(-4rem);
    width: 230px;
  }

@-webkit-keyframes champ-intro {
    0% {
      -webkit-transform: translateX(7rem);
      transform: translateX(7rem);
      opacity: 0;
    }

    100% {
      -webkit-transform: translateX(-4rem);
      transform: translateX(-4rem);
      opacity: 1;
    }
}

@keyframes champ-intro {
    0% {
      -webkit-transform: translateX(7rem);
      -o-transform: translateX(7rem);
      transform: translateX(7rem);
      opacity: 0;
    }

    100% {
      -webkit-transform: translateX(-4rem);
      -o-transform: translateX(-4rem);
      transform: translateX(-4rem);
      opacity: 1;
    }
}
}

@media all and (min-width:900px) {
  .banner__name {
    font-size: 2.441rem;
  }
}

@media all and (min-width:1200px) {
  .banner__name {
    padding: 0;
    text-align: center;
    width: 100%;
    letter-spacing: .5rem;
  }

  .banner {
    margin: 0 0 1.563rem;
  }

  .banner__champ-wrapper {
    width: 350px;
  }
}

@media all and (min-width:1800px) {
  .banner__name {
    font-size: 4rem;
  }

  .banner {
    height: 12rem;
  }

  .banner__img {
    height: 18rem;
  }

  .banner__champ-wrapper {
    width: 700px;
  }
}

.button__button {
  border: 2px solid #d22730;
  font-size: .8rem;
  padding: .8rem .8rem;
  -webkit-transition: all .25s ease-out;
  -o-transition: all .25s ease-out;
  transition: all .25s ease-out;
  font-family: 'Rajdhani';
  text-transform: uppercase;
  color: #d22730;
  font-weight: 600;
  margin: 0 0 1.563rem;
  background: transparent;
  background-image: -webkit-linear-gradient(#d22730, #d22730);
  background-image: linear-gradient(#d22730, #d22730);
  background-repeat: no-repeat;
  background-position: 50% 0%;
  background-size: 100% 0%;
  line-height: 0;
  cursor: pointer;
  -ms-flex-item-align: start;
  align-self: flex-start;
  width: 100%;
}

.button__button:active {
  -webkit-transform: translateY(2px);
  -ms-transform: translateY(2px);
  -o-transform: translateY(2px);
  transform: translateY(2px);
}

.button__button:focus {
  outline: none;
}

@media all and (min-width:600px) {
  .button__button {
    padding: .8rem 1rem;
    width: auto;
    -ms-flex-item-align: center;
    align-self: center;
  }
}

@media all and (min-width:1200px) {
  .button__button {
    font-size: 1rem;
    padding: 1rem 1.25rem;
  }

  .button__button:hover {
    background-size: 100% 100%;
    color: #e6dbdc;
    box-shadow: 0 0 3px 0 #d22730;
  }
}

.card {
  position: relative;
  border: 1px outset #3f3f3f;
  cursor: pointer;
  overflow: hidden;
  line-height: 0;
}

.card__name {
  position: absolute;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0 .64rem;
  font-weight: 700;
  font-size: .8rem;
  text-transform: uppercase;
  bottom: 24px;
  z-index: 20;
  background: #d22730;
  line-height: 1.25rem;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
  text-shadow: 0 0 5px rgba(0, 0, 0, 0.6);
}

.card__image-container {
  height: 4rem;
  background-size: cover;
  background-position: center -10px;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.card__tag-line {
  position: relative;
  text-align: center;
  padding: .3rem 0;
  font-size: .64rem;
  text-transform: uppercase;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
  width: 100%;
  background-color: rgba(19, 19, 19, 0.9);
  z-index: 100;
  line-height: .8rem;
  box-sizing: border-box;
  border-top: #d22730 2px solid;
}

.card__accent {
  position: absolute;
  width: 100%;
  background-color: #d22730;
  height: 1px;
  top: 0;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
  display: none;
}

/*
 * Animations
 */

@-webkit-keyframes rotateTarget {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes rotateTarget {
  from {
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

/*
 * Media Queries
 */

@media all and (min-width:600px) {
  .card__name {
    font-size: 1rem;
    bottom: 32px;
    line-height: 1.563rem;
  }

  .card__tag-line {
    font-size: .8rem;
    padding: .41rem;
  }

  .card__accent {
    height: 2px;
  }

  .card__image-container {
    height: 7rem;
  }
}

@media all and (min-width:900px) {
  .card__image-container {
    height: 6.5rem;
  }
}

@media all and (min-width:1200px) {
  .card__name {
    bottom: 0;
    font-size: 1.25rem;
    line-height: 1.953rem;
  }

  .card:hover .card__name {
    -webkit-transform: translateY(-32px);
    -ms-transform: translateY(-32px);
    -o-transform: translateY(-32px);
    transform: translateY(-32px);
  }

  .card__tag-line {
    -webkit-transform: translateY(32px);
    -ms-transform: translateY(32px);
    -o-transform: translateY(32px);
    transform: translateY(32px);
    position: absolute;
    bottom: 0;
  }

  .card:hover .card__image-container {
    -webkit-transform: scale(1.3) rotate(6deg);
    -ms-transform: scale(1.3) rotate(6deg);
    -o-transform: scale(1.3) rotate(6deg);
    transform: scale(1.3) rotate(6deg);
  }

  .card:hover .card__tag-line {
    -webkit-transform: translateY(0);
    -ms-transform: translateY(0);
    -o-transform: translateY(0);
    transform: translateY(0);
  }

  .card:hover .card__overlay {
    opacity: 100;
  }
}

@media all and (min-width:1800px) {
  .card__tag-line {
    -webkit-transform: translateY(35px);
    -ms-transform: translateY(35px);
    -o-transform: translateY(35px);
    transform: translateY(35px);
  }

  .card:hover .card__name {
    -webkit-transform: translateY(-35px);
    -ms-transform: translateY(-35px);
    -o-transform: translateY(-35px);
    transform: translateY(-35px);
  }

  .card__image-container {
    height: 7.7rem;
  }
}

.champion-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  -ms-grid-columns: repeat(2, 1fr);
  grid-gap: .512rem;
  margin: 0 0 5rem;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  max-width: 100%;
}

@media all and (min-width:600px) {
  .champion-grid {
    grid-template-columns: repeat(2, 1fr);
    -ms-grid-columns: repeat(2, 1fr);
    grid-gap: .64rem;
  }
}

@media all and (min-width:900px) {
  .champion-grid {
    grid-template-columns: repeat(3, 1fr);
    -ms-grid-columns: repeat(3, 1fr);
  }
}

@media all and (min-width:1200px) {
  .champion-grid {
    padding: 0 1rem;
  }
}

@media all and (min-width:1800px) {
  .champion-grid {
    grid-template-columns: repeat(4, 1fr);
    -ms-grid-columns: repeat(4, 1fr);
    grid-gap: .8rem;
  }
}

.footer {
  padding: .8rem;
  font-size: .8rem;
  border-top: 1px solid #d22730;
  box-shadow: 0 0 3px 0 #d22730;
  background: rgb(19, 19, 19);
  grid-area: footer;
}

.footer__text {
  max-width: 30rem;
  text-align: center;
  margin: 0 auto 0;
}

@media all and (min-width:1800px) {
  .footer {
    padding: 1rem 25rem;
  }
}

.form__title {
  color: #d22730;
  margin: 0 0 1rem;
  font-weight: 600;
  font-size: 1.563rem;
  text-align: center;
  text-transform: uppercase;
}

.form__input {
  position: relative;
}

.form__input-el {
  background: rgba(19, 19, 19, 0.9);
  border: 1px outset #3f3f3f;
  border-bottom: 1px solid #d22730;
  min-width: 100%;
  font-weight: 300;
  color: #e6dbdc;
  font-size: .8rem;
  font-family: 'Rajdhani';
  min-height: 4rem;
  margin: 0 0 .1rem;
  box-sizing: border-box;
  padding: .64rem .8rem .8rem;
  box-shadow: inset 0.1rem 0.7rem 1.5rem rgba(0, 0, 0, 0.35);
}

.form__input-el:focus {
  border-left: 1px solid #d22730;
  border-right: 1px solid #d22730;
  border-top: 1px solid #d22730;
  outline: none;
}

.form__feedback {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 1rem;
  font-weight: 700;
}

.form__character-indicator {
  font-weight: 400;
}

.form__user-feedback {
  -webkit-animation-name: user-feedback;
  animation-name: user-feedback;
  -webkit-animation-duration: .5s;
  animation-duration: .5s;
  -webkit-animation-iteration-count: 2;
  animation-iteration-count: 2;
  -webkit-animation-timing-function: ease;
  animation-timing-function: ease;
}

.form__tip-longer {
  color: #d22730;
}

/***
 * Animations
 * -
 */

@-webkit-keyframes user-feedback {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }

  50% {
    -webkit-transform: scale(1.2);
    transform: scale(1.2);
  }

  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

@keyframes user-feedback {
  0% {
    -webkit-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1);
  }

  50% {
    -webkit-transform: scale(1.2);
    -o-transform: scale(1.2);
    transform: scale(1.2);
  }

  100% {
    -webkit-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1);
  }
}

/***
 * Media queries
 * -
 */

@media all and (min-width:900px) {
  .form__title {
    font-size: 1.953rem;
  }

  .form__input-el {
    font-size: 1rem;
  }
}

.header-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  background-color: rgb(19, 19, 19);
  margin: 0;
  border-bottom: 1px solid #d22730;
  box-shadow: 0 0 3px 0 #d22730;
  z-index: 10;
  grid-area: header;
}

.header {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  height: 2.5rem;
}

.header a {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 0 0 .64rem;
}

.logo__img {
  width: 1.1rem;
  height: 1.1rem;
  margin: 0 .2rem 0 0;
}

.logo__text {
  font-size: 1rem;
  font-weight: 400;
  line-height: 0;
}

.logo__text_emphasis {
  color: #d22730;
  font-weight: 700;
}

.header__button {
  font-size: .8rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-transition: all .25s ease-out;
  -o-transition: all .25s ease-out;
  transition: all .25s ease-out;
  background-image: -webkit-linear-gradient(#b72a31, #b72a31);
  background-image: linear-gradient(#b72a31, #b72a31);
  background-repeat: no-repeat;
  background-position: 50% 0%;
  background-size: 100% 0%;
  cursor: pointer;
  color: #e6dbdc;
  font-weight: 500;
  background-color: #d22730;
  height: 100%;
  box-sizing: border-box;
}

.header__button__icon {
  margin: 0 .3rem 0 0;
  height: .8rem;
}

@media all and (min-width:600px) {
  .header {
    height: 3rem;
  }

  .logo__img {
    width: 1.35rem;
    height: 1.35rem;
  }

  .logo__text {
    font-size: 1.25rem;
  }

  .header__button {
    font-size: 1rem;
    padding: 0 .64rem;
  }

  .header__icon {
    width: 1rem;
    height: 1rem;
    margin: 0 .64rem 0 0;
  }
}

@media all and (min-width:1200px) {
  .header {
    height: 3.5rem;
  }

  .header__button:hover {
    background-size: 100% 100%;
    z-index: 20;
    box-shadow: 0 0 3px 0 #d22730;
  }

  .logo__img {
    width: 1.663rem;
    height: 1.663rem;
  }

  .logo__text {
    font-size: 1.563rem;
  }
}

@media all and (min-width:1800px) {
  .header__button {
    width: 10rem;
  }
}

.line-graph-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
}

.line-graph {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  height: .8rem;
  background: #262626;
  position: relative;
}

.line-graph__up-vote-percent {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  box-sizing: border-box;
  height: 100%;
  -webkit-transition: all .5s ease-out;
  -o-transition: all .5s ease-out;
  transition: all .5s ease-out;
  box-shadow: inset 0.5rem 0.7rem 16px rgba(0, 0, 0, 0.35);
  position: relative;
}

.line-graph__up-vote-percent-text {
  font-size: .64rem;
  white-space: nowrap;
}

.login {
  position: absolute;
  z-index: 100;
  left: 50%;
  background-color: red;
}

.matchup-card {
  margin-bottom: .8rem;
  height: 5rem;
}

.matchup-card__matchup-info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  border: 1px outset #3f3f3f;
  background: rgba(19, 19, 19, 0.9);
  height: 100%;
}

.matchup-card__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: 1rem;
  border-bottom: black 1px solid;
  height: 100%;
}

.matchup-card__link {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-preferred-size: 38.2%;
  flex-basis: 38.2%;
}

.matchup-card__champ-img-container {
  overflow: hidden;
  position: relative;
  width: 100%;
  background-size: 100%;
  background-position: center -5px;
  border-right: black 1px solid;
}

.matchup-card__champ-name {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  width: 100%;
  font-weight: 600;
  font-size: 1rem;
  z-index: 20;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
  bottom: 0;
  padding: 0;
  background: #d22730;
  text-shadow: 0 0 5px rgba(0, 0, 0, 0.6);
  height: 30%;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.matchup-card__vote {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-preferred-size: 61.8%;
  flex-basis: 61.8%;
  font-weight: 400;
  z-index: 10;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.matchup-card__vote-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-preferred-size: 70%;
  flex-basis: 70%;
  width: 100%;
}

.matchup-card__vote-up-flex,
.matchup-card__vote-down-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-shadow: inset 0 0.5rem 30px rgba(0, 0, 0, 0.3);
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.matchup-card__vote-up-flex {
  border-right: rgba(255, 255, 255, 0.03) 1px solid;
}

.matchup-card__up-arrow,
.matchup-card__down-arrow {
  width: .9rem;
  margin: 0 7px 0 0;
  -ms-flex-item-align: center;
  align-self: center;
  opacity: .8;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.matchup-card__vote-details {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-evenly;
  -ms-flex-pack: space-evenly;
  justify-content: space-evenly;
  font-size: .8rem;
  background: rgba(0, 0, 0, 0.3);
  width: 100%;
  line-height: 0;
  -ms-flex-preferred-size: 30%;
  flex-basis: 30%;
}

.matchup-card__total-votes,
.matchup-card__upvote-percentage {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.matchup-card__up-arrow {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  -o-transform: rotate(180deg);
  transform: rotate(180deg);
}

/*
 * Media Queries
 */

@media all and (min-width:1200px) {
  .matchup-card__vote-up-flex:hover,
  .matchup-card__vote-down-flex:hover {
    background-color: #d22730;
  }
}

.matchups-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.matchups-header {
  font-size: 1.563rem;
  font-weight: 600;
  color: #d22730;
  text-transform: uppercase;
  text-align: center;
  margin: 0 0 1.563rem;
}

.matchups {
  text-transform: uppercase;
  padding: 0 0.4rem 0;
  max-width: 25rem;
  width: 100%;
  box-sizing: border-box;
}

.matchups__title {
  margin-bottom: .64rem;
}

.matchups__matchup-card:last-child {
  margin: 0 0 1rem;
}

.matchups__show-more-btn {
  border: 2px solid #d22730;
  font-size: .8rem;
  padding: .8rem .8rem;
  -webkit-transition: all .25s ease-out;
  -o-transition: all .25s ease-out;
  transition: all .25s ease-out;
  font-family: 'Rajdhani';
  text-transform: uppercase;
  color: #d22730;
  font-weight: 600;
  margin: 0 0 1.563rem;
  background: transparent;
  background-image: -webkit-linear-gradient(#d22730, #d22730);
  background-image: linear-gradient(#d22730, #d22730);
  background-position: 50% 0%;
  background-size: 100% 0%;
  background-repeat: no-repeat;
  line-height: 0;
  width: 100%;
  margin: 0 0 1.563rem;
  cursor: pointer;
}

.matchups__show-more-btn:focus {
  outline: none;
}

/*
 * Media Queries
 */

@media all and (min-width:900px) {
  .matchups-flex {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    margin-bottom: 4rem;
    padding: 0 1rem;
  }

  .matchups {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    padding: 0;
  }

  .matchups:first-child {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    margin-right: .64rem;
  }

  .matchups__show-more-btn {
    margin: 0;
  }

  .matchups-header {
    font-size: 1.953rem;
    margin: 0 0 1.953rem;
  }
}

@media all and (min-width:1200px) {
  .matchups__show-more-btn:hover {
    background-size: 100% 100%;
    color: #e6dbdc;
    box-shadow: 0 0 3px 0 #d22730;
  }

  .matchups__show-more-btn:active {
    -webkit-transform: translateY(2px);
    -ms-transform: translateY(2px);
    -o-transform: translateY(2px);
    transform: translateY(2px);
  }
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

.spinner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 10rem;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  opacity: .9;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.spinner__circle {
  border: .7rem solid #d22730;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  box-shadow: 0 0 3px 0 #d22730;
}

.spinner__circle-outer {
  border: .3rem solid rgba(0, 0, 0, 0.25);
  border-top: .3rem solid rgba(255,255,255,0.19215686274509805);
  width: 2.5rem;
  height: 2.5rem;
  position: absolute;
  border-radius: 50%;
  z-index: 20;
  -webkit-animation-name: spin;
  animation-name: spin;
  -webkit-animation-duration: .3s;
  animation-duration: .3s;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;
  animation-timing-function: linear;
}

/***
 * Animation
 * -
 */

@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.tips {
  padding: 0 .8rem;
  font-weight: 300;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0 auto 0;
  max-width: 30rem;
  font-size: .8rem;
}

.tips .button__button {
  width: 100%;
  font-size: 1rem;
}

.tips .button__button:last-child {
  margin: 0 0 4rem;
}

.tips__title {
  color: #d22730;
  margin: 0 0 1rem;
  font-weight: 600;
  font-size: 1.563rem;
  text-align: center;
  text-transform: uppercase;
}

.tips__list {
  padding: 0;
  margin: 0;
}

.tips__tip {
  padding: .64rem .8rem .8rem;
  background: rgba(19, 19, 19, 0.9);
  margin-bottom: .64rem;
  border: 1px outset #3f3f3f;
  border-bottom: solid 1px #d22730;
  list-style: none;
  box-shadow: inset 0.1rem 0.7rem 1.5rem rgba(0, 0, 0, 0.35);
  word-wrap: break-word;
}

.tips__tip:last-child {
  margin: 0 0 1.563rem;
}

.tips__tip-name_big-white-quote {
  font-size: 1rem;
  font-weight: 600;
  margin: 0 0 0 3px;
}

.tips__tip-name_big-red-quote {
  font-size: 1rem;
  color: #d22730;
  font-weight: 600;
  margin: 0 3px 0 0;
}

.tips__show-more-btn {
  border: 2px solid #d22730;
  font-size: .8rem;
  padding: .8rem .8rem;
  -webkit-transition: all .25s ease-out;
  -o-transition: all .25s ease-out;
  transition: all .25s ease-out;
  font-family: 'Rajdhani';
  text-transform: uppercase;
  color: #d22730;
  font-weight: 600;
  margin: 0 0 1.25rem;
  background: rgba(0,0,0,0.25882352941176473);
  background-image: -webkit-linear-gradient(#d22730, #d22730);
  background-image: linear-gradient(#d22730, #d22730);
  background-position: 50% 0%;
  background-size: 100% 0%;
  background-repeat: no-repeat;
  line-height: 0;
  width: 100%;
  margin: 0 0 1.953rem;
  cursor: pointer;
}

.tips__show-more-btn:focus {
  outline: none;
}

/*
 * Media Queries
 */

@media all and (min-width:900px) {
  .tips__title {
    font-size: 1.953rem;
  }

  .tips .button__button:last-child {
    margin: 0 0 8rem;
  }

  .tips__tip-name {
    font-size: 1rem;
  }
}

@media all and (min-width:1200px) {
  .tips__show-more-btn {
    padding: 1rem;
  }

  .tips__show-more-btn:hover {
    background-size: 100% 100%;
    color: #e6dbdc;
    box-shadow: 0 0 3px 0 #d22730;
  }

  .tips__show-more-btn:active {
    -webkit-transform: translateY(2px);
    -ms-transform: translateY(2px);
    -o-transform: translateY(2px);
    transform: translateY(2px);
  }

  .tips__tip-name_big-red-quote,
  .tips__tip-name_big-white-quote {
    font-size: 1.0625rem;
  }
}

.vote-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  padding: .2rem 0 0;
}

.vote {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-weight: 500;
}

.vote__item-up,
.vote__item-down {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.vote__item-up {
  margin: 0 1rem 0 0;
}

.vote__up-arrow,
.vote__down-arrow {
  width: .8rem;
  height: .8rem;
  margin: 0 7px 0 0;
  cursor: pointer;
  opacity: .8;
}

.vote__up-arrow {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  -o-transform: rotate(180deg);
  transform: rotate(180deg);
}

@media all and (min-width:1200px) {
  .vote {
    font-size: 0.9375rem;
  }

  .vote__up-arrow,
  .vote__down-arrow {
    width: .9rem;
    height: .9rem;
    margin: 0 7px 0 0;
  }

  .vote__up-arrow:hover,
  .vote__down-arrow:hover {
    opacity: 1;
  }
}

.ad-vertical-example-1 {
  height: 150px;
  background: white;
  color: black;
}

.ad-vertical-example-2 {
  height: 400px;
  background: black;
  color: white;
}

.ad-horizontal-example {
  height: 70px;
  background: white;
  color: black;
}

/*# sourceMappingURL=data:application/json;base64, */