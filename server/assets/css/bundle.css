html {
  font-family: 'Rajdhani', sans-serif;
  background-color: #191719;
  color: #e6dbdc;
  font-size: 21px;
  line-height: 140%;
  font-weight: 400;
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/Rajdhani-Light.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/Rajdhani-Regular.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 500;
  src: url("/fonts/Rajdhani-Medium.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/Rajdhani-SemiBold.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/Rajdhani-Bold.ttf");
}

body {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.layout {
  background-color: #191719;
  max-width: 100%;
  margin: auto;
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Modular Scale - 1.618 (Golden Ratio)
	 */
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.card__flexbox {
  display: grid;
  grid-template-columns: 1fr 1fr;
  -ms-grid-columns: 1fr 1fr;
  margin: 0 0.073rem 1.618rem;
}

.card {
  position: relative;
  border: 1px solid #dddddd;
  margin: 0 0.073rem 0.146rem;
  /* and that, will result in a 10px gap */
  cursor: pointer;
  overflow: hidden;
  line-height: 0;
}

.card:hover>.card__bg {
  -webkit-transform: scale(1.4);
  -ms-transform: scale(1.4);
  -o-transform: scale(1.4);
  transform: scale(1.4);
}

.card__name {
  position: absolute;
  font-weight: 600;
  font-size: 0.618rem;
  text-transform: uppercase;
  bottom: 0.382rem;
  right: 0.146rem;
  z-index: 4;
  line-height: 0;
}

.card__bg {
  max-width: 100%;
  -webkit-transition: all .4s;
  -o-transition: all .4s;
  transition: all .4s;
}

@media all and (min-width:681px) {
  .card__flexbox {
    margin: 0 0.309rem 2.618rem;
  }

  .card {
    margin: 0 0.309rem 0.618rem;
  }

  .card__name {
    font-size: 1.618rem;
    bottom: 21px;
    right: 0.146rem;
  }
}

@media all and (min-width:1024px) {
  .card__flexbox {
    grid-template-columns: 1fr 1fr 1fr;
    -ms-grid-columns: 1fr 1fr 1fr;
    margin: 0 21px 2.618rem;
  }

  .card {
    margin: 0 0.309rem 0.618rem;
  }

  .card__name {
    font-size: 1.618rem;
    bottom: 21px;
    right: 0.146rem;
  }
}

.footer {
  padding: 0.618rem 21px;
  text-align: center;
  font-size: 0.618rem;
  line-height: 140%;
  border-top: 1px solid #d22730;
}

@media all and (min-width:1024px) {
  .footer {
    padding: 21px 2.618rem;
  }
}

.header {
  display: table;
  text-align: center;
  width: 100%;
  padding: 2.618rem 0 1.618rem 0;
}

.header__logo-text {
  font-size: 1.618rem;
  vertical-align: middle;
  display: table-cell;
  font-weight: 700;
  line-height: 0;
}

.header__logo-emphasis {
  color: #d22730;
}

@media all and (min-width:681px) {
  .header {
    margin: 2.618rem 0 1.618rem 0;
  }

  .header__logo-text {
    font-size: 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .header__logo-text {
    font-size: 4.236rem;
  }
}

.login {
  position: absolute;
  z-index: 100;
  left: 50%;
  background-color: red;
}

.list {
  border: 1px solid #ffffff;
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

.list {
  border: 1px solid #ffffff;
}

/*# sourceMappingURL=data:application/json;base64, */