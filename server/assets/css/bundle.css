html {
  font-family: 'Rajdhani', sans-serif;
  background-color: #191719;
  color: #e6dbdc;
  font-size: 21px;
  line-height: 140%;
  font-weight: 400;
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/Rajdhani-Light.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/Rajdhani-Regular.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 500;
  src: url("/fonts/Rajdhani-Medium.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/Rajdhani-SemiBold.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/Rajdhani-Bold.ttf");
}

body {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.layout {
  max-width: 100%;
  margin: auto;
  overflow-x: hidden;
  background-image: url("/images/textures/background-texture-mobile.jpg");
  background-repeat: repeat;
}

@media all and (min-width:1024px) {
  .layout {
    background-image: url("/images/textures/background-texture-desktop.jpg");
  }
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Modular Scale - 1.618 (Golden Ratio)
	 */
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.card__css-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  -ms-grid-columns: repeat(2, 1fr);
  grid-auto-rows: 80px;
  grid-gap: 0.146rem;
  margin: 0 0 1.618rem;
  padding: 0 0.382rem;
}

.card {
  position: relative;
  border: 1px outset #3f3f3f;
  cursor: pointer;
  overflow: hidden;
  line-height: 0;
}

.card:hover>.card__bg {
  -webkit-transform: scale(1.4);
  -ms-transform: scale(1.4);
  -o-transform: scale(1.4);
  transform: scale(1.4);
}

.card__name {
  position: absolute;
  font-weight: 600;
  font-size: 0.618rem;
  text-transform: uppercase;
  bottom: 0.382rem;
  right: 0.146rem;
  z-index: 4;
  line-height: 0;
}

.card__bg {
  max-width: 100%;
  -webkit-transition: all .4s;
  -o-transition: all .4s;
  transition: all .4s;
}

@media all and (min-width:681px) {
  .card {
    border-width: 0.09rem;
  }

  .card__css-grid {
    grid-template-columns: repeat(3, 1fr);
    -ms-grid-columns: repeat(3, 1fr);
    grid-gap: 0.382rem;
    margin: 0 0 2.618rem;
    padding: 0 0.618rem;
    grid-auto-rows: auto;
  }

  .card__name {
    font-size: 21px;
    bottom: 21px;
    right: 0.146rem;
  }
}

@media all and (min-width:1024px) {
  .card__css-grid {
    grid-template-columns: repeat(4, 1fr);
    -ms-grid-columns: repeat(4, 1fr);
  }

  .card__name {
    bottom: 21px;
    right: 0.146rem;
  }
}

.footer {
  padding: 0.618rem;
  text-align: center;
  font-size: 0.618rem;
  line-height: 140%;
  box-shadow: 0 0 12px 0 #d22730;
  background: #191719;
}

@media all and (min-width:681px) {
  .footer {
    padding: 21px 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .footer {
    padding: 21px 6.854rem;
  }
}

.header {
  display: table;
  text-align: center;
  width: 100%;
  padding: 2.618rem 0 1.618rem 0;
}

.header__logo-text {
  font-size: 1.618rem;
  vertical-align: middle;
  display: table-cell;
  font-weight: 500;
  line-height: 0;
}

.header__logo-emphasis {
  color: #d22730;
  font-weight: 700;
}

@media all and (min-width:681px) {
  .header {
    margin: 1.618rem 0 21px 0;
  }

  .header__logo-text {
    font-size: 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .header {
    margin: 2.618rem 0 1.618rem 0;
  }

  .header__logo-text {
    font-size: 4.236rem;
  }
}

.login {
  position: absolute;
  z-index: 100;
  left: 50%;
  background-color: red;
}

.list {
  border: 1px solid #ffffff;
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

.list {
  border: 1px solid #ffffff;
}

/*# sourceMappingURL=data:application/json;base64, */