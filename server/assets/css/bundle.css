html {
  font-family: 'Rajdhani', sans-serif;
  background-color: #191719;
  color: #e6dbdc;
  font-size: 21px;
  line-height: 140%;
  font-weight: 400;
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/Rajdhani-Light.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/Rajdhani-Regular.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 500;
  src: url("/fonts/Rajdhani-Medium.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/Rajdhani-SemiBold.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/Rajdhani-Bold.ttf");
}

body {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.layout {
  background-color: #191719;
  max-width: 100%;
  margin: auto;
  overflow-x: hidden;
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Modular Scale - 1.618 (Golden Ratio)
	 */
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.card__css-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  -ms-grid-columns: 1fr 1fr;
  grid-column-gap: 0.146rem;
  grid-row-gap: 0.146rem;
  margin: 0 0.146rem 1.618rem;
}

.card {
  position: relative;
  border: 1px solid #dddddd;
  cursor: pointer;
  overflow: hidden;
  line-height: 0;
}

.card:hover>.card__bg {
  -webkit-transform: scale(1.4);
  -ms-transform: scale(1.4);
  -o-transform: scale(1.4);
  transform: scale(1.4);
}

.card__name {
  position: absolute;
  font-weight: 600;
  font-size: 0.618rem;
  text-transform: uppercase;
  bottom: 0.382rem;
  right: 0.146rem;
  z-index: 4;
  line-height: 0;
}

.card__bg {
  max-width: 100%;
  -webkit-transition: all .4s;
  -o-transition: all .4s;
  transition: all .4s;
}

@media all and (min-width:681px) {
  .card__css-grid {
    grid-column-gap: 0.382rem;
    grid-row-gap: 0.382rem;
    margin: 0 0.618rem 2.618rem;
  }

  .card__name {
    font-size: 1.618rem;
    bottom: 21px;
    right: 0.146rem;
  }
}

@media all and (min-width:1024px) {
  .card__css-grid {
    grid-template-columns: 1fr 1fr 1fr;
    -ms-grid-columns: 1fr 1fr 1fr;
    grid-column-gap: 0.382rem;
    grid-row-gap: 0.382rem;
    margin: 0 21px 2.618rem;
  }

  .card__name {
    font-size: 1.618rem;
    bottom: 21px;
    right: 0.146rem;
  }
}

.footer {
  padding: 0.618rem;
  text-align: center;
  font-size: 0.618rem;
  line-height: 140%;
  border-top: 1px solid #d22730;
}

@media all and (min-width:681px) {
  .footer {
    padding: 21px 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .footer {
    padding: 21px 6.854rem;
  }
}

.header {
  display: table;
  text-align: center;
  width: 100%;
  padding: 2.618rem 0 1.618rem 0;
}

.header__logo-text {
  font-size: 1.618rem;
  vertical-align: middle;
  display: table-cell;
  font-weight: 500;
  line-height: 0;
}

.header__logo-emphasis {
  color: #d22730;
  font-weight: 700;
}

@media all and (min-width:681px) {
  .header {
    margin: 1.618rem 0 21px 0;
  }

  .header__logo-text {
    font-size: 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .header {
    margin: 2.618rem 0 1.618rem 0;
  }

  .header__logo-text {
    font-size: 4.236rem;
  }
}

.login {
  position: absolute;
  z-index: 100;
  left: 50%;
  background-color: red;
}

.list {
  border: 1px solid #ffffff;
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

.list {
  border: 1px solid #ffffff;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9QZWRybyBHYXJjZXovRGVza3RvcC9wcm9qZWN0cy9yZWFjdC1ib2lsZXIvZnJvbnQvc3JjL2NvbXBvbmVudHMvYnVuZGxlLmNzcyIsInNvdXJjZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7OztBQUdEO0VBQ0M7RUFDQTs7O0FBR0Q7RUFDQztFQUNBO0VBQ0E7RUFDQTs7O0FBR0Q7Ozs7O0FBS0E7QUFDQzs7O0FBV0E7OztBQU1BOzs7QUFVQTs7O0FBTUE7OztBQU1BOzs7OztBQVNEOzs7OztBQWFBO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRDtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFBQTtFQUFBO0VBQUE7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Q7RUFDQztFQUNBO0VBQUE7RUFBQTs7O0FBR0Q7QUFDQztJQUNDO0lBQ0E7SUFDQTs7O0FBRUQ7SUFDQztJQUNBO0lBQ0E7Ozs7QUFJRjtBQUNDO0lBQ0M7SUFDQTtJQUNBO0lBQ0E7SUFDQTs7O0FBRUQ7SUFDQztJQUNBO0lBQ0E7Ozs7QUFHRjtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0FBQ0M7SUFDQzs7OztBQUlGO0FBQ0M7SUFDQzs7OztBQUlGO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Q7RUFDQztFQUNBOzs7QUFHRDtBQUNDO0lBQ0M7OztBQUVEO0lBQ0M7Ozs7QUFJRjtBQUNDO0lBQ0M7OztBQUVEO0lBQ0M7Ozs7QUFHRjtFQUNDO0VBQ0E7RUFFQTtFQUNBOzs7QUFHRDtFQUNBOzs7QUFHQTs7Ozs7QUFLQztFQUNDO0VBQ0E7RUFDRDs7O0FBR0E7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDRDs7O0FBR0Q7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRDtFQUNBOzs7QUN4QkEiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sIHtcclxuXHRmb250LWZhbWlseTogJ1JhamRoYW5pJywgc2Fucy1zZXJpZjtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kKTtcclxuXHRjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtcclxuXHRmb250LXNpemU6IHZhcigtLW1vZHVsYXItYmFzZSk7XHJcblx0bGluZS1oZWlnaHQ6IDE0MCU7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6XCJSYWpkaGFuaVwiO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogMzAwO1xyXG5cdHNyYzp1cmwoXCIvZm9udHMvUmFqZGhhbmktTGlnaHQudHRmXCIpO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTpcIlJhamRoYW5pXCI7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0c3JjOnVybChcIi9mb250cy9SYWpkaGFuaS1SZWd1bGFyLnR0ZlwiKTtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6XCJSYWpkaGFuaVwiO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNTAwO1xyXG5cdHNyYzp1cmwoXCIvZm9udHMvUmFqZGhhbmktTWVkaXVtLnR0ZlwiKTtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6XCJSYWpkaGFuaVwiO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNjAwO1xyXG5cdHNyYzp1cmwoXCIvZm9udHMvUmFqZGhhbmktU2VtaUJvbGQudHRmXCIpO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTpcIlJhamRoYW5pXCI7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0c3JjOnVybChcIi9mb250cy9SYWpkaGFuaS1Cb2xkLnR0ZlwiKTtcclxufVxyXG5cclxuYm9keSB7XHJcblx0bWFyZ2luOiAwO1xyXG59XHJcblxyXG5hIHtcclxuXHRjb2xvcjogaW5oZXJpdDtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi5sYXlvdXQge1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2tncm91bmQpO1xyXG5cdG1heC13aWR0aDogMTAwJTtcclxuXHRtYXJnaW46IGF1dG87XHJcblx0b3ZlcmZsb3cteDogaGlkZGVuO1xyXG59XHJcblxuLyoqKlxyXG4gKiBWYXJpYWJsZXNcclxuICogLVxyXG4gKi9cclxuXHJcbjpyb290IHtcclxuXHQvKlxyXG5cdCAqIE1vZHVsYXIgU2NhbGUgLSAxLjYxOCAoR29sZGVuIFJhdGlvKVxyXG5cdCAqL1xyXG5cdC0tbW9kdWxhci14eHM6IDAuMTQ2cmVtO1xyXG5cdC0tbW9kdWxhci14czogMC4zODJyZW07XHJcblx0LS1tb2R1bGFyLXM6IDAuNjE4cmVtO1xyXG5cdC0tbW9kdWxhci1iYXNlOiAyMXB4O1xyXG5cdC0tbW9kdWxhci1sOiAxLjYxOHJlbTtcclxuXHQtLW1vZHVsYXIteGw6IDIuNjE4cmVtO1xyXG5cdC0tbW9kdWxhci14eGw6IDQuMjM2cmVtO1xyXG5cdC0tbW9kdWxhci14eHhsOiA2Ljg1NHJlbTtcclxuXHQvKlxyXG5cdCAqIFRoZW1lXHJcblx0ICovXHJcblx0LS1iYWNrZ3JvdW5kOiAjMTkxNzE5O1xyXG5cdC0tbWFpbi1jb2xvcjogI2QyMjczMDtcclxuXHQtLXNlY29uZGFyeS1jb2xvcjogI2U2ZGJkYztcclxuXHQvKlxyXG5cdCAqIENvbG9yc1xyXG5cdCAqL1xyXG5cdC0tY29sb3Itd2hpdGU6ICNmZmZmZmY7XHJcblx0LS1jb2xvci1ncmF5LWxpZ2h0ZXN0OiAjZmNmY2ZjO1xyXG5cdC0tY29sb3ItZ3JheS1saWdodGVyOiAjZjNmM2YzO1xyXG5cdC0tY29sb3ItZ3JheS1saWdodDogI0UyRTJFMjtcclxuXHQtLWNvbG9yLWdyYXktbWVkaXVtLWxpZ2h0OiAjZGRkZGRkO1xyXG5cdC0tY29sb3ItZ3JheS1tZWRpdW06ICNlYWVhZWE7XHJcblx0LS1jb2xvci1ncmF5LWRhcms6ICM1NTU1NTU7XHJcblx0LypcclxuXHQgKiBUZXh0c1xyXG5cdCAqL1xyXG5cdC0tY29sb3ItdGV4dC1ncmFwaDogIzNlM2UzZTtcclxuXHQtLWNvbG9yLXRleHQtbGlnaHQ6ICM4Njg2ODY7XHJcblx0LS1jb2xvci10ZXh0LWRhcms6ICM0MTQxNDE7XHJcblx0LypcclxuXHQgKiBBbGVydC9TdGF0dXMgY29sb3JzXHJcblx0ICovXHJcblx0LS1jb2xvci1lcnJvcjogI0RCNDczNjtcclxuXHQtLWNvbG9yLXN1Y2Nlc3M6ICM1RkEwNTI7XHJcblx0LS1jb2xvci13YXJuaW5nOiAjREQ3RjMzO1xyXG5cdC8qXHJcblx0ICogRWFzaW5nc1xyXG5cdCAqL1xyXG5cdC0tZWFzaW5nLWlvczogY3ViaWMtYmV6aWVyKDAuMjMsIDEsIDAuMzIsIDEpO1xyXG5cdC0tZWFzaW5nLWV4cGFuZDogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMjAsIDEuMjc1KTtcclxuXHQtLWVhc2luZy1xdWFkOiBjdWJpYy1iZXppZXIoMC43NzAsIDAuMDAwLCAwLjE3NSwgMS4wMDApO1xyXG59XHJcblxyXG5cclxuLyoqKlxyXG4gKiBNZWRpYSBxdWVyaWVzXHJcbiAqIC1cclxuICovXHJcblxyXG5AY3VzdG9tLW1lZGlhIC0tdGFibGV0IGFsbCBhbmQgKG1pbi13aWR0aDo2ODFweCk7XHJcbkBjdXN0b20tbWVkaWEgLS10YWJsZXQtbGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjEwMjRweCk7XHJcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLXNtYWxsIGFsbCBhbmQgKG1pbi13aWR0aDoxMTAwcHgpO1xyXG5AY3VzdG9tLW1lZGlhIC0tZGVza3RvcC1tZWRpdW0gYWxsIGFuZCAobWluLXdpZHRoOjEyMDBweCk7XHJcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLWxhcmdlIGFsbCBhbmQgKG1pbi13aWR0aDoxNDQwcHgpO1xyXG5AY3VzdG9tLW1lZGlhIC0tZGVza3RvcC14bGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjE3MjBweCk7XHJcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLXh4bGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjE5MjBweCk7XHJcblxuLmNhcmRfX2Nzcy1ncmlkIHtcclxuXHRkaXNwbGF5OiBncmlkO1xyXG5cdGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuXHQtbXMtZ3JpZC1jb2x1bW5zOiAxZnIgMWZyO1xyXG5cdGdyaWQtY29sdW1uLWdhcDogdmFyKC0tbW9kdWxhci14eHMpO1xyXG5cdGdyaWQtcm93LWdhcDogdmFyKC0tbW9kdWxhci14eHMpO1xyXG5cdG1hcmdpbjogMCB2YXIoLS1tb2R1bGFyLXh4cykgdmFyKC0tbW9kdWxhci1sKTtcclxufVxyXG5cclxuLmNhcmQge1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1jb2xvci1ncmF5LW1lZGl1bS1saWdodCk7XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcblx0bGluZS1oZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi5jYXJkOmhvdmVyPi5jYXJkX19iZyB7XHJcblx0dHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xyXG59XHJcblxyXG4uY2FyZF9fbmFtZSB7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdGZvbnQtd2VpZ2h0OiA2MDA7XHJcblx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLXMpO1xyXG5cdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0Ym90dG9tOiB2YXIoLS1tb2R1bGFyLXhzKTtcclxuXHRyaWdodDogdmFyKC0tbW9kdWxhci14eHMpO1xyXG5cdHotaW5kZXg6IDQ7XHJcblx0bGluZS1oZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi5jYXJkX19iZyB7XHJcblx0bWF4LXdpZHRoOiAxMDAlO1xyXG5cdHRyYW5zaXRpb246IGFsbCAuNHM7XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQpIHtcclxuXHQuY2FyZF9fY3NzLWdyaWQge1xyXG5cdFx0Z3JpZC1jb2x1bW4tZ2FwOiB2YXIoLS1tb2R1bGFyLXhzKTtcclxuXHRcdGdyaWQtcm93LWdhcDogdmFyKC0tbW9kdWxhci14cyk7XHJcblx0XHRtYXJnaW46IDAgdmFyKC0tbW9kdWxhci1zKSB2YXIoLS1tb2R1bGFyLXhsKTtcclxuXHR9XHJcblx0LmNhcmRfX25hbWUge1xyXG5cdFx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLWwpO1xyXG5cdFx0Ym90dG9tOiB2YXIoLS1tb2R1bGFyLWJhc2UpO1xyXG5cdFx0cmlnaHQ6IHZhcigtLW1vZHVsYXIteHhzKTtcclxuXHR9XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQtbGFyZ2UpIHtcclxuXHQuY2FyZF9fY3NzLWdyaWQge1xyXG5cdFx0Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcclxuXHRcdC1tcy1ncmlkLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG5cdFx0Z3JpZC1jb2x1bW4tZ2FwOiB2YXIoLS1tb2R1bGFyLXhzKTtcclxuXHRcdGdyaWQtcm93LWdhcDogdmFyKC0tbW9kdWxhci14cyk7XHJcblx0XHRtYXJnaW46IDAgdmFyKC0tbW9kdWxhci1iYXNlKSB2YXIoLS1tb2R1bGFyLXhsKTtcclxuXHR9XHJcblx0LmNhcmRfX25hbWUge1xyXG5cdFx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLWwpO1xyXG5cdFx0Ym90dG9tOiB2YXIoLS1tb2R1bGFyLWJhc2UpO1xyXG5cdFx0cmlnaHQ6IHZhcigtLW1vZHVsYXIteHhzKTtcclxuXHR9XHJcbn1cbi5mb290ZXIge1xyXG5cdHBhZGRpbmc6IHZhcigtLW1vZHVsYXItcyk7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci1zKTtcclxuXHRsaW5lLWhlaWdodDogMTQwJTtcclxuXHRib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tbWFpbi1jb2xvcik7XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQpIHtcclxuXHQuZm9vdGVyIHtcclxuXHRcdHBhZGRpbmc6IHZhcigtLW1vZHVsYXItYmFzZSkgdmFyKC0tbW9kdWxhci14bCk7XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgKC0tdGFibGV0LWxhcmdlKSB7XHJcblx0LmZvb3RlciB7XHJcblx0XHRwYWRkaW5nOiB2YXIoLS1tb2R1bGFyLWJhc2UpIHZhcigtLW1vZHVsYXIteHh4bCk7XHJcblx0fVxyXG59XHJcblxuLmhlYWRlciB7XHJcblx0ZGlzcGxheTogdGFibGU7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdHBhZGRpbmc6IHZhcigtLW1vZHVsYXIteGwpIDAgdmFyKC0tbW9kdWxhci1sKSAwO1xyXG59XHJcblxyXG4uaGVhZGVyX19sb2dvLXRleHQge1xyXG5cdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci1sKTtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG5cdGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcblx0Zm9udC13ZWlnaHQ6IDUwMDtcclxuXHRsaW5lLWhlaWdodDogMDtcclxufVxyXG5cclxuLmhlYWRlcl9fbG9nby1lbXBoYXNpcyB7XHJcblx0Y29sb3I6IHZhcigtLW1haW4tY29sb3IpO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQpIHtcclxuXHQuaGVhZGVyIHtcclxuXHRcdG1hcmdpbjogdmFyKC0tbW9kdWxhci1sKSAwIHZhcigtLW1vZHVsYXItYmFzZSkgMDtcclxuXHR9XHJcblx0LmhlYWRlcl9fbG9nby10ZXh0IHtcclxuXHRcdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci14bCk7XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgKC0tdGFibGV0LWxhcmdlKSB7XHJcblx0LmhlYWRlciB7XHJcblx0XHRtYXJnaW46IHZhcigtLW1vZHVsYXIteGwpIDAgdmFyKC0tbW9kdWxhci1sKSAwO1xyXG5cdH1cclxuXHQuaGVhZGVyX19sb2dvLXRleHQge1xyXG5cdFx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLXh4bCk7XHJcblx0fVxyXG59XG4ubG9naW4ge1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR6LWluZGV4OiAxMDA7XHJcblxyXG5cdGxlZnQ6IDUwJTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXG4ubGlzdCB7XHJcbmJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yLXdoaXRlKTtcclxufVxyXG5cbi8qXHJcbiAqIFNlYXJjaGJhclxyXG4gKiA9PT09PT09PT1cclxuICovXHJcblxyXG4gLnNlYXJjaGJhciB7XHJcbiBcdGhlaWdodDoxcmVtO1xyXG4gXHR0ZXh0LWFsaWduOmNlbnRlcjtcclxuXHRwYWRkaW5nLWJvdHRvbTo1cmVtO1xyXG4gfVxyXG5cclxuIGlucHV0IHtcclxuIFx0b3V0bGluZTogbm9uZTtcclxuIFx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiBcdGJvcmRlcjogbm9uZTtcclxuIFx0Y29sb3I6I0Y4RjhGRjtcclxuIFx0dGV4dC1zaGFkb3c6IDBweCAwcHggMHB4ICNGOEY4RkY7XHJcbiBcdC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuXHRvcGFjaXR5Oi43O1xyXG4gfVxyXG5cclxuLnNlYXJjaGJhcl9fYmFyIHtcclxuXHRtYXJnaW46YXV0bztcclxuXHR3aWR0aDoyMHJlbTtcclxuXHRib3JkZXItYm90dG9tOjFweCBzb2xpZCAjRjhGOEZGO1xyXG5cdHBhZGRpbmc6LjVyZW07XHJcblx0Zm9udC1zaXplOjEuM3JlbTtcclxufVxyXG5cbi5saXN0IHtcclxuYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3Itd2hpdGUpO1xyXG59XHJcbiIsImh0bWwge1xuICBmb250LWZhbWlseTogJ1JhamRoYW5pJywgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE5MTcxOTtcbiAgY29sb3I6ICNlNmRiZGM7XG4gIGZvbnQtc2l6ZTogMjFweDtcbiAgbGluZS1oZWlnaHQ6IDE0MCU7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJSYWpkaGFuaVwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL1JhamRoYW5pLUxpZ2h0LnR0ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJhamRoYW5pXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiB1cmwoXCIvZm9udHMvUmFqZGhhbmktUmVndWxhci50dGZcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJSYWpkaGFuaVwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL1JhamRoYW5pLU1lZGl1bS50dGZcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJSYWpkaGFuaVwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL1JhamRoYW5pLVNlbWlCb2xkLnR0ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJhamRoYW5pXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgc3JjOiB1cmwoXCIvZm9udHMvUmFqZGhhbmktQm9sZC50dGZcIik7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbmEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ubGF5b3V0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE5MTcxOTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW46IGF1dG87XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLyoqKlxyXG4gKiBWYXJpYWJsZXNcclxuICogLVxyXG4gKi9cblxuOnJvb3Qge1xuICAvKlxyXG5cdCAqIE1vZHVsYXIgU2NhbGUgLSAxLjYxOCAoR29sZGVuIFJhdGlvKVxyXG5cdCAqL1xuICAvKlxyXG5cdCAqIFRoZW1lXHJcblx0ICovXG4gIC8qXHJcblx0ICogQ29sb3JzXHJcblx0ICovXG4gIC8qXHJcblx0ICogVGV4dHNcclxuXHQgKi9cbiAgLypcclxuXHQgKiBBbGVydC9TdGF0dXMgY29sb3JzXHJcblx0ICovXG4gIC8qXHJcblx0ICogRWFzaW5nc1xyXG5cdCAqL1xufVxuXG4vKioqXHJcbiAqIE1lZGlhIHF1ZXJpZXNcclxuICogLVxyXG4gKi9cblxuLmNhcmRfX2Nzcy1ncmlkIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAxZnIgMWZyO1xuICBncmlkLWNvbHVtbi1nYXA6IDAuMTQ2cmVtO1xuICBncmlkLXJvdy1nYXA6IDAuMTQ2cmVtO1xuICBtYXJnaW46IDAgMC4xNDZyZW0gMS42MThyZW07XG59XG5cbi5jYXJkIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkZGRkO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGxpbmUtaGVpZ2h0OiAwO1xufVxuXG4uY2FyZDpob3Zlcj4uY2FyZF9fYmcge1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS40KTtcbiAgICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEuNCk7XG4gICAgICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS40KTtcbn1cblxuLmNhcmRfX25hbWUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMC42MThyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGJvdHRvbTogMC4zODJyZW07XG4gIHJpZ2h0OiAwLjE0NnJlbTtcbiAgei1pbmRleDogNDtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG5cbi5jYXJkX19iZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjRzO1xuICAgICAgIC1vLXRyYW5zaXRpb246IGFsbCAuNHM7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIC40cztcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDo2ODFweCkge1xuICAuY2FyZF9fY3NzLWdyaWQge1xuICAgIGdyaWQtY29sdW1uLWdhcDogMC4zODJyZW07XG4gICAgZ3JpZC1yb3ctZ2FwOiAwLjM4MnJlbTtcbiAgICBtYXJnaW46IDAgMC42MThyZW0gMi42MThyZW07XG4gIH1cblxuICAuY2FyZF9fbmFtZSB7XG4gICAgZm9udC1zaXplOiAxLjYxOHJlbTtcbiAgICBib3R0b206IDIxcHg7XG4gICAgcmlnaHQ6IDAuMTQ2cmVtO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6MTAyNHB4KSB7XG4gIC5jYXJkX19jc3MtZ3JpZCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgICBncmlkLWNvbHVtbi1nYXA6IDAuMzgycmVtO1xuICAgIGdyaWQtcm93LWdhcDogMC4zODJyZW07XG4gICAgbWFyZ2luOiAwIDIxcHggMi42MThyZW07XG4gIH1cblxuICAuY2FyZF9fbmFtZSB7XG4gICAgZm9udC1zaXplOiAxLjYxOHJlbTtcbiAgICBib3R0b206IDIxcHg7XG4gICAgcmlnaHQ6IDAuMTQ2cmVtO1xuICB9XG59XG5cbi5mb290ZXIge1xuICBwYWRkaW5nOiAwLjYxOHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDAuNjE4cmVtO1xuICBsaW5lLWhlaWdodDogMTQwJTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkMjI3MzA7XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6NjgxcHgpIHtcbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZzogMjFweCAyLjYxOHJlbTtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOjEwMjRweCkge1xuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAyMXB4IDYuODU0cmVtO1xuICB9XG59XG5cbi5oZWFkZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMi42MThyZW0gMCAxLjYxOHJlbSAwO1xufVxuXG4uaGVhZGVyX19sb2dvLXRleHQge1xuICBmb250LXNpemU6IDEuNjE4cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMDtcbn1cblxuLmhlYWRlcl9fbG9nby1lbXBoYXNpcyB7XG4gIGNvbG9yOiAjZDIyNzMwO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOjY4MXB4KSB7XG4gIC5oZWFkZXIge1xuICAgIG1hcmdpbjogMS42MThyZW0gMCAyMXB4IDA7XG4gIH1cblxuICAuaGVhZGVyX19sb2dvLXRleHQge1xuICAgIGZvbnQtc2l6ZTogMi42MThyZW07XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDoxMDI0cHgpIHtcbiAgLmhlYWRlciB7XG4gICAgbWFyZ2luOiAyLjYxOHJlbSAwIDEuNjE4cmVtIDA7XG4gIH1cblxuICAuaGVhZGVyX19sb2dvLXRleHQge1xuICAgIGZvbnQtc2l6ZTogNC4yMzZyZW07XG4gIH1cbn1cblxuLmxvZ2luIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxMDA7XG4gIGxlZnQ6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4ubGlzdCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmZmZmY7XG59XG5cbi8qXHJcbiAqIFNlYXJjaGJhclxyXG4gKiA9PT09PT09PT1cclxuICovXG5cbi5zZWFyY2hiYXIge1xuICBoZWlnaHQ6IDFyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy1ib3R0b206IDVyZW07XG59XG5cbmlucHV0IHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICNGOEY4RkY7XG4gIHRleHQtc2hhZG93OiAwcHggMHB4IDBweCAjRjhGOEZGO1xuICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG9wYWNpdHk6IC43O1xufVxuXG4uc2VhcmNoYmFyX19iYXIge1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiAyMHJlbTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNGOEY4RkY7XG4gIHBhZGRpbmc6IC41cmVtO1xuICBmb250LXNpemU6IDEuM3JlbTtcbn1cblxuLmxpc3Qge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpOVZjMlZ5Y3k5UVpXUnlieUJIWVhKalpYb3ZSR1Z6YTNSdmNDOXdjbTlxWldOMGN5OXlaV0ZqZEMxaWIybHNaWEl2Wm5KdmJuUXZjM0pqTDJOdmJYQnZibVZ1ZEhNdlluVnVaR3hsTG1OemN5SXNJbUoxYm1Sc1pTNWpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1JVRkRReXh2UTBGQlFUdEZRVU5CTERCQ1FVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hwUWtGQlFUdERRME5CT3p0QlJFVkVPMFZCUTBNc2QwSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzYzBOQlFVRTdRME5EUVRzN1FVUkZSRHRGUVVORExIZENRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEhkRFFVRkJPME5EUTBFN08wRkVSVVE3UlVGRFF5eDNRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4MVEwRkJRVHREUTBOQk96dEJSRVZFTzBWQlEwTXNkMEpCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2VVTkJRVUU3UTBORFFUczdRVVJGUkR0RlFVTkRMSGRDUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxIRkRRVUZCTzBORFEwRTdPMEZFUlVRN1JVRkRReXhWUVVGQk8wTkRRMEU3TzBGRVJVUTdSVUZEUXl4bFFVRkJPMFZCUTBFc2MwSkJRVUU3UTBORFFUczdRVVJGUkR0RlFVTkRMREJDUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4aFFVRkJPMFZCUTBFc2JVSkJRVUU3UTBORFFUczdRVVJGUkRzN08wZERSMGM3TzBGRVJVZzdSVUZEUXpzN1NVTkZSenRGUkZOSU96dEpRMDVITzBWRVdVZzdPMGxEVkVjN1JVUnRRa2c3TzBsRGFFSkhPMFZFYzBKSU96dEpRMjVDUnp0RlJIbENTRHM3U1VOMFFrYzdRMEZEU0RzN1FVUTRRa1E3T3p0SFEzcENSenM3UVVSelEwZzdSVUZEUXl4alFVRkJPMFZCUTBFc0swSkJRVUU3UlVGRFFTd3dRa0ZCUVR0RlFVTkJMREJDUVVGQk8wVkJRMEVzZFVKQlFVRTdSVUZEUVN3MFFrRkJRVHREUTI1RFFUczdRVVJ6UTBRN1JVRkRReXh0UWtGQlFUdEZRVU5CTERCQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMR1ZCUVVFN1EwTnVRMEU3TzBGRWMwTkVPMFZCUTBNc09FSkJRVUU3VFVGQlFTd3dRa0ZCUVR0UFFVRkJMSGxDUVVGQk8xVkJRVUVzYzBKQlFVRTdRME51UTBFN08wRkVjME5FTzBWQlEwTXNiVUpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc01FSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEdWQlFVRTdRME51UTBFN08wRkVjME5FTzBWQlEwTXNaMEpCUVVFN1JVRkRRU3cwUWtGQlFUdFBRVUZCTEhWQ1FVRkJPMVZCUVVFc2IwSkJRVUU3UTBOdVEwRTdPMEZFYzBORU8wVkJRME03U1VGRFF5d3dRa0ZCUVR0SlFVTkJMSFZDUVVGQk8wbEJRMEVzTkVKQlFVRTdSME51UTBNN08wVkVjVU5HTzBsQlEwTXNiMEpCUVVFN1NVRkRRU3hoUVVGQk8wbEJRMEVzWjBKQlFVRTdSME5zUTBNN1EwRkRSanM3UVVSeFEwUTdSVUZEUXp0SlFVTkRMRzFEUVVGQk8wbEJRMEVzT0VKQlFVRTdTVUZEUVN3d1FrRkJRVHRKUVVOQkxIVkNRVUZCTzBsQlEwRXNkMEpCUVVFN1IwTnNRME03TzBWRWIwTkdPMGxCUTBNc2IwSkJRVUU3U1VGRFFTeGhRVUZCTzBsQlEwRXNaMEpCUVVFN1IwTnFRME03UTBGRFJqczdRVVJ0UTBRN1JVRkRReXhyUWtGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMRGhDUVVGQk8wTkRhRU5CT3p0QlJHMURSRHRGUVVORE8wbEJRME1zZFVKQlFVRTdSME5vUTBNN1EwRkRSanM3UVVSdFEwUTdSVUZEUXp0SlFVTkRMSFZDUVVGQk8wZERhRU5ETzBOQlEwWTdPMEZFYlVORU8wVkJRME1zWlVGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxDdENRVUZCTzBORGFFTkJPenRCUkcxRFJEdEZRVU5ETEc5Q1FVRkJPMFZCUTBFc2RVSkJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzWlVGQlFUdERRMmhEUVRzN1FVUnRRMFE3UlVGRFF5eGxRVUZCTzBWQlEwRXNhVUpCUVVFN1EwTm9RMEU3TzBGRWJVTkVPMFZCUTBNN1NVRkRReXd3UWtGQlFUdEhRMmhEUXpzN1JVUnJRMFk3U1VGRFF5eHZRa0ZCUVR0SFF5OUNRenREUVVOR096dEJSR3REUkR0RlFVTkRPMGxCUTBNc09FSkJRVUU3UjBNdlFrTTdPMFZFYVVOR08wbEJRME1zYjBKQlFVRTdSME01UWtNN1EwRkRSanM3UVVSblEwUTdSVUZEUXl4dFFrRkJRVHRGUVVOQkxHRkJRVUU3UlVGRlFTeFZRVUZCTzBWQlEwRXNjMEpCUVVFN1EwTTVRa0U3TzBGRWFVTkVPMFZCUTBFc01FSkJRVUU3UTBNNVFrTTdPMEZFYVVORU96czdSME0xUWtjN08wRkVhVU5HTzBWQlEwTXNZVUZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMFFzY1VKQlFVRTdRME01UWtFN08wRkVhVU5CTzBWQlEwTXNZMEZCUVR0RlFVTkJMRGhDUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4cFEwRkJRVHRGUVVOQkxIRkRRVUZCTzBWQlEwUXNXVUZCUVR0RFF6bENRVHM3UVVScFEwUTdSVUZEUXl4aFFVRkJPMFZCUTBFc1lVRkJRVHRGUVVOQkxHbERRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMR3RDUVVGQk8wTkRPVUpCT3p0QlJHbERSRHRGUVVOQkxEQkNRVUZCTzBORE9VSkRJaXdpWm1sc1pTSTZJbUoxYm1Sc1pTNWpjM01pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKb2RHMXNJSHRjY2x4dVhIUm1iMjUwTFdaaGJXbHNlVG9nSjFKaGFtUm9ZVzVwSnl3Z2MyRnVjeTF6WlhKcFpqdGNjbHh1WEhSaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMllYSW9MUzFpWVdOclozSnZkVzVrS1R0Y2NseHVYSFJqYjJ4dmNqb2dkbUZ5S0MwdGMyVmpiMjVrWVhKNUxXTnZiRzl5S1R0Y2NseHVYSFJtYjI1MExYTnBlbVU2SUhaaGNpZ3RMVzF2WkhWc1lYSXRZbUZ6WlNrN1hISmNibHgwYkdsdVpTMW9aV2xuYUhRNklERTBNQ1U3WEhKY2JseDBabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNjbHh1ZlZ4eVhHNWNjbHh1UUdadmJuUXRabUZqWlNCN1hISmNibHgwWm05dWRDMW1ZVzFwYkhrNlhDSlNZV3BrYUdGdWFWd2lPMXh5WEc1Y2RHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNjbHh1WEhSbWIyNTBMWGRsYVdkb2REb2dNekF3TzF4eVhHNWNkSE55WXpwMWNtd29YQ0l2Wm05dWRITXZVbUZxWkdoaGJta3RUR2xuYUhRdWRIUm1YQ0lwTzF4eVhHNTlYSEpjYmx4eVhHNUFabTl1ZEMxbVlXTmxJSHRjY2x4dVhIUm1iMjUwTFdaaGJXbHNlVHBjSWxKaGFtUm9ZVzVwWENJN1hISmNibHgwWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4eVhHNWNkR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYSEpjYmx4MGMzSmpPblZ5YkNoY0lpOW1iMjUwY3k5U1lXcGthR0Z1YVMxU1pXZDFiR0Z5TG5SMFpsd2lLVHRjY2x4dWZWeHlYRzVjY2x4dVFHWnZiblF0Wm1GalpTQjdYSEpjYmx4MFptOXVkQzFtWVcxcGJIazZYQ0pTWVdwa2FHRnVhVndpTzF4eVhHNWNkR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjY2x4dVhIUm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHlYRzVjZEhOeVl6cDFjbXdvWENJdlptOXVkSE12VW1GcVpHaGhibWt0VFdWa2FYVnRMblIwWmx3aUtUdGNjbHh1ZlZ4eVhHNWNjbHh1UUdadmJuUXRabUZqWlNCN1hISmNibHgwWm05dWRDMW1ZVzFwYkhrNlhDSlNZV3BrYUdGdWFWd2lPMXh5WEc1Y2RHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNjbHh1WEhSbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4eVhHNWNkSE55WXpwMWNtd29YQ0l2Wm05dWRITXZVbUZxWkdoaGJta3RVMlZ0YVVKdmJHUXVkSFJtWENJcE8xeHlYRzU5WEhKY2JseHlYRzVBWm05dWRDMW1ZV05sSUh0Y2NseHVYSFJtYjI1MExXWmhiV2xzZVRwY0lsSmhhbVJvWVc1cFhDSTdYSEpjYmx4MFptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHlYRzVjZEdadmJuUXRkMlZwWjJoME9pQTNNREE3WEhKY2JseDBjM0pqT25WeWJDaGNJaTltYjI1MGN5OVNZV3BrYUdGdWFTMUNiMnhrTG5SMFpsd2lLVHRjY2x4dWZWeHlYRzVjY2x4dVltOWtlU0I3WEhKY2JseDBiV0Z5WjJsdU9pQXdPMXh5WEc1OVhISmNibHh5WEc1aElIdGNjbHh1WEhSamIyeHZjam9nYVc1b1pYSnBkRHRjY2x4dVhIUjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEhKY2JuMWNjbHh1WEhKY2JpNXNZWGx2ZFhRZ2UxeHlYRzVjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhaaGNpZ3RMV0poWTJ0bmNtOTFibVFwTzF4eVhHNWNkRzFoZUMxM2FXUjBhRG9nTVRBd0pUdGNjbHh1WEhSdFlYSm5hVzQ2SUdGMWRHODdYSEpjYmx4MGIzWmxjbVpzYjNjdGVEb2dhR2xrWkdWdU8xeHlYRzU5WEhKY2JseHVMeW9xS2x4eVhHNGdLaUJXWVhKcFlXSnNaWE5jY2x4dUlDb2dMVnh5WEc0Z0tpOWNjbHh1WEhKY2JqcHliMjkwSUh0Y2NseHVYSFF2S2x4eVhHNWNkQ0FxSUUxdlpIVnNZWElnVTJOaGJHVWdMU0F4TGpZeE9DQW9SMjlzWkdWdUlGSmhkR2x2S1Z4eVhHNWNkQ0FxTDF4eVhHNWNkQzB0Ylc5a2RXeGhjaTE0ZUhNNklEQXVNVFEyY21WdE8xeHlYRzVjZEMwdGJXOWtkV3hoY2kxNGN6b2dNQzR6T0RKeVpXMDdYSEpjYmx4MExTMXRiMlIxYkdGeUxYTTZJREF1TmpFNGNtVnRPMXh5WEc1Y2RDMHRiVzlrZFd4aGNpMWlZWE5sT2lBeU1YQjRPMXh5WEc1Y2RDMHRiVzlrZFd4aGNpMXNPaUF4TGpZeE9ISmxiVHRjY2x4dVhIUXRMVzF2WkhWc1lYSXRlR3c2SURJdU5qRTRjbVZ0TzF4eVhHNWNkQzB0Ylc5a2RXeGhjaTE0ZUd3NklEUXVNak0yY21WdE8xeHlYRzVjZEMwdGJXOWtkV3hoY2kxNGVIaHNPaUEyTGpnMU5ISmxiVHRjY2x4dVhIUXZLbHh5WEc1Y2RDQXFJRlJvWlcxbFhISmNibHgwSUNvdlhISmNibHgwTFMxaVlXTnJaM0p2ZFc1a09pQWpNVGt4TnpFNU8xeHlYRzVjZEMwdGJXRnBiaTFqYjJ4dmNqb2dJMlF5TWpjek1EdGNjbHh1WEhRdExYTmxZMjl1WkdGeWVTMWpiMnh2Y2pvZ0kyVTJaR0prWXp0Y2NseHVYSFF2S2x4eVhHNWNkQ0FxSUVOdmJHOXljMXh5WEc1Y2RDQXFMMXh5WEc1Y2RDMHRZMjlzYjNJdGQyaHBkR1U2SUNObVptWm1abVk3WEhKY2JseDBMUzFqYjJ4dmNpMW5jbUY1TFd4cFoyaDBaWE4wT2lBalptTm1ZMlpqTzF4eVhHNWNkQzB0WTI5c2IzSXRaM0poZVMxc2FXZG9kR1Z5T2lBalpqTm1NMll6TzF4eVhHNWNkQzB0WTI5c2IzSXRaM0poZVMxc2FXZG9kRG9nSTBVeVJUSkZNanRjY2x4dVhIUXRMV052Ykc5eUxXZHlZWGt0YldWa2FYVnRMV3hwWjJoME9pQWpaR1JrWkdSa08xeHlYRzVjZEMwdFkyOXNiM0l0WjNKaGVTMXRaV1JwZFcwNklDTmxZV1ZoWldFN1hISmNibHgwTFMxamIyeHZjaTFuY21GNUxXUmhjbXM2SUNNMU5UVTFOVFU3WEhKY2JseDBMeXBjY2x4dVhIUWdLaUJVWlhoMGMxeHlYRzVjZENBcUwxeHlYRzVjZEMwdFkyOXNiM0l0ZEdWNGRDMW5jbUZ3YURvZ0l6TmxNMlV6WlR0Y2NseHVYSFF0TFdOdmJHOXlMWFJsZUhRdGJHbG5hSFE2SUNNNE5qZzJPRFk3WEhKY2JseDBMUzFqYjJ4dmNpMTBaWGgwTFdSaGNtczZJQ00wTVRReE5ERTdYSEpjYmx4MEx5cGNjbHh1WEhRZ0tpQkJiR1Z5ZEM5VGRHRjBkWE1nWTI5c2IzSnpYSEpjYmx4MElDb3ZYSEpjYmx4MExTMWpiMnh2Y2kxbGNuSnZjam9nSTBSQ05EY3pOanRjY2x4dVhIUXRMV052Ykc5eUxYTjFZMk5sYzNNNklDTTFSa0V3TlRJN1hISmNibHgwTFMxamIyeHZjaTEzWVhKdWFXNW5PaUFqUkVRM1JqTXpPMXh5WEc1Y2RDOHFYSEpjYmx4MElDb2dSV0Z6YVc1bmMxeHlYRzVjZENBcUwxeHlYRzVjZEMwdFpXRnphVzVuTFdsdmN6b2dZM1ZpYVdNdFltVjZhV1Z5S0RBdU1qTXNJREVzSURBdU16SXNJREVwTzF4eVhHNWNkQzB0WldGemFXNW5MV1Y0Y0dGdVpEb2dZM1ZpYVdNdFltVjZhV1Z5S0RBdU1UYzFMQ0F3TGpnNE5Td2dNQzR6TWpBc0lERXVNamMxS1R0Y2NseHVYSFF0TFdWaGMybHVaeTF4ZFdGa09pQmpkV0pwWXkxaVpYcHBaWElvTUM0M056QXNJREF1TURBd0xDQXdMakUzTlN3Z01TNHdNREFwTzF4eVhHNTlYSEpjYmx4eVhHNWNjbHh1THlvcUtseHlYRzRnS2lCTlpXUnBZU0J4ZFdWeWFXVnpYSEpjYmlBcUlDMWNjbHh1SUNvdlhISmNibHh5WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0ZEdGaWJHVjBJR0ZzYkNCaGJtUWdLRzFwYmkxM2FXUjBhRG8yT0RGd2VDazdYSEpjYmtCamRYTjBiMjB0YldWa2FXRWdMUzEwWVdKc1pYUXRiR0Z5WjJVZ1lXeHNJR0Z1WkNBb2JXbHVMWGRwWkhSb09qRXdNalJ3ZUNrN1hISmNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMWtaWE5yZEc5d0xYTnRZV3hzSUdGc2JDQmhibVFnS0cxcGJpMTNhV1IwYURveE1UQXdjSGdwTzF4eVhHNUFZM1Z6ZEc5dExXMWxaR2xoSUMwdFpHVnphM1J2Y0MxdFpXUnBkVzBnWVd4c0lHRnVaQ0FvYldsdUxYZHBaSFJvT2pFeU1EQndlQ2s3WEhKY2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxa1pYTnJkRzl3TFd4aGNtZGxJR0ZzYkNCaGJtUWdLRzFwYmkxM2FXUjBhRG94TkRRd2NIZ3BPMXh5WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0WkdWemEzUnZjQzE0YkdGeVoyVWdZV3hzSUdGdVpDQW9iV2x1TFhkcFpIUm9PakUzTWpCd2VDazdYSEpjYmtCamRYTjBiMjB0YldWa2FXRWdMUzFrWlhOcmRHOXdMWGg0YkdGeVoyVWdZV3hzSUdGdVpDQW9iV2x1TFhkcFpIUm9PakU1TWpCd2VDazdYSEpjYmx4dUxtTmhjbVJmWDJOemN5MW5jbWxrSUh0Y2NseHVYSFJrYVhOd2JHRjVPaUJuY21sa08xeHlYRzVjZEdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2dNV1p5SURGbWNqdGNjbHh1WEhRdGJYTXRaM0pwWkMxamIyeDFiVzV6T2lBeFpuSWdNV1p5TzF4eVhHNWNkR2R5YVdRdFkyOXNkVzF1TFdkaGNEb2dkbUZ5S0MwdGJXOWtkV3hoY2kxNGVITXBPMXh5WEc1Y2RHZHlhV1F0Y205M0xXZGhjRG9nZG1GeUtDMHRiVzlrZFd4aGNpMTRlSE1wTzF4eVhHNWNkRzFoY21kcGJqb2dNQ0IyWVhJb0xTMXRiMlIxYkdGeUxYaDRjeWtnZG1GeUtDMHRiVzlrZFd4aGNpMXNLVHRjY2x4dWZWeHlYRzVjY2x4dUxtTmhjbVFnZTF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjY2x4dVhIUmliM0prWlhJNklERndlQ0J6YjJ4cFpDQjJZWElvTFMxamIyeHZjaTFuY21GNUxXMWxaR2wxYlMxc2FXZG9kQ2s3WEhKY2JseDBZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHlYRzVjZEc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEhKY2JseDBiR2x1WlMxb1pXbG5hSFE2SURBN1hISmNibjFjY2x4dVhISmNiaTVqWVhKa09taHZkbVZ5UGk1allYSmtYMTlpWnlCN1hISmNibHgwZEhKaGJuTm1iM0p0T2lCelkyRnNaU2d4TGpRcE8xeHlYRzU5WEhKY2JseHlYRzR1WTJGeVpGOWZibUZ0WlNCN1hISmNibHgwY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4eVhHNWNkR1p2Ym5RdGQyVnBaMmgwT2lBMk1EQTdYSEpjYmx4MFptOXVkQzF6YVhwbE9pQjJZWElvTFMxdGIyUjFiR0Z5TFhNcE8xeHlYRzVjZEhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEhKY2JseDBZbTkwZEc5dE9pQjJZWElvTFMxdGIyUjFiR0Z5TFhoektUdGNjbHh1WEhSeWFXZG9kRG9nZG1GeUtDMHRiVzlrZFd4aGNpMTRlSE1wTzF4eVhHNWNkSG90YVc1a1pYZzZJRFE3WEhKY2JseDBiR2x1WlMxb1pXbG5hSFE2SURBN1hISmNibjFjY2x4dVhISmNiaTVqWVhKa1gxOWlaeUI3WEhKY2JseDBiV0Y0TFhkcFpIUm9PaUF4TURBbE8xeHlYRzVjZEhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TkhNN1hISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9MUzEwWVdKc1pYUXBJSHRjY2x4dVhIUXVZMkZ5WkY5ZlkzTnpMV2R5YVdRZ2UxeHlYRzVjZEZ4MFozSnBaQzFqYjJ4MWJXNHRaMkZ3T2lCMllYSW9MUzF0YjJSMWJHRnlMWGh6S1R0Y2NseHVYSFJjZEdkeWFXUXRjbTkzTFdkaGNEb2dkbUZ5S0MwdGJXOWtkV3hoY2kxNGN5azdYSEpjYmx4MFhIUnRZWEpuYVc0NklEQWdkbUZ5S0MwdGJXOWtkV3hoY2kxektTQjJZWElvTFMxdGIyUjFiR0Z5TFhoc0tUdGNjbHh1WEhSOVhISmNibHgwTG1OaGNtUmZYMjVoYldVZ2UxeHlYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQjJZWElvTFMxdGIyUjFiR0Z5TFd3cE8xeHlYRzVjZEZ4MFltOTBkRzl0T2lCMllYSW9MUzF0YjJSMWJHRnlMV0poYzJVcE8xeHlYRzVjZEZ4MGNtbG5hSFE2SUhaaGNpZ3RMVzF2WkhWc1lYSXRlSGh6S1R0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JrQnRaV1JwWVNBb0xTMTBZV0pzWlhRdGJHRnlaMlVwSUh0Y2NseHVYSFF1WTJGeVpGOWZZM056TFdkeWFXUWdlMXh5WEc1Y2RGeDBaM0pwWkMxMFpXMXdiR0YwWlMxamIyeDFiVzV6T2lBeFpuSWdNV1p5SURGbWNqdGNjbHh1WEhSY2RDMXRjeTFuY21sa0xXTnZiSFZ0Ym5NNklERm1jaUF4Wm5JZ01XWnlPMXh5WEc1Y2RGeDBaM0pwWkMxamIyeDFiVzR0WjJGd09pQjJZWElvTFMxdGIyUjFiR0Z5TFhoektUdGNjbHh1WEhSY2RHZHlhV1F0Y205M0xXZGhjRG9nZG1GeUtDMHRiVzlrZFd4aGNpMTRjeWs3WEhKY2JseDBYSFJ0WVhKbmFXNDZJREFnZG1GeUtDMHRiVzlrZFd4aGNpMWlZWE5sS1NCMllYSW9MUzF0YjJSMWJHRnlMWGhzS1R0Y2NseHVYSFI5WEhKY2JseDBMbU5oY21SZlgyNWhiV1VnZTF4eVhHNWNkRngwWm05dWRDMXphWHBsT2lCMllYSW9MUzF0YjJSMWJHRnlMV3dwTzF4eVhHNWNkRngwWW05MGRHOXRPaUIyWVhJb0xTMXRiMlIxYkdGeUxXSmhjMlVwTzF4eVhHNWNkRngwY21sbmFIUTZJSFpoY2lndExXMXZaSFZzWVhJdGVIaHpLVHRjY2x4dVhIUjlYSEpjYm4xY2JpNW1iMjkwWlhJZ2UxeHlYRzVjZEhCaFpHUnBibWM2SUhaaGNpZ3RMVzF2WkhWc1lYSXRjeWs3WEhKY2JseDBkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc1Y2RHWnZiblF0YzJsNlpUb2dkbUZ5S0MwdGJXOWtkV3hoY2kxektUdGNjbHh1WEhSc2FXNWxMV2hsYVdkb2REb2dNVFF3SlR0Y2NseHVYSFJpYjNKa1pYSXRkRzl3T2lBeGNIZ2djMjlzYVdRZ2RtRnlLQzB0YldGcGJpMWpiMnh2Y2lrN1hISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9MUzEwWVdKc1pYUXBJSHRjY2x4dVhIUXVabTl2ZEdWeUlIdGNjbHh1WEhSY2RIQmhaR1JwYm1jNklIWmhjaWd0TFcxdlpIVnNZWEl0WW1GelpTa2dkbUZ5S0MwdGJXOWtkV3hoY2kxNGJDazdYSEpjYmx4MGZWeHlYRzU5WEhKY2JseHlYRzVBYldWa2FXRWdLQzB0ZEdGaWJHVjBMV3hoY21kbEtTQjdYSEpjYmx4MExtWnZiM1JsY2lCN1hISmNibHgwWEhSd1lXUmthVzVuT2lCMllYSW9MUzF0YjJSMWJHRnlMV0poYzJVcElIWmhjaWd0TFcxdlpIVnNZWEl0ZUhoNGJDazdYSEpjYmx4MGZWeHlYRzU5WEhKY2JseHVMbWhsWVdSbGNpQjdYSEpjYmx4MFpHbHpjR3hoZVRvZ2RHRmliR1U3WEhKY2JseDBkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc1Y2RIZHBaSFJvT2lBeE1EQWxPMXh5WEc1Y2RIQmhaR1JwYm1jNklIWmhjaWd0TFcxdlpIVnNZWEl0ZUd3cElEQWdkbUZ5S0MwdGJXOWtkV3hoY2kxc0tTQXdPMXh5WEc1OVhISmNibHh5WEc0dWFHVmhaR1Z5WDE5c2IyZHZMWFJsZUhRZ2UxeHlYRzVjZEdadmJuUXRjMmw2WlRvZ2RtRnlLQzB0Ylc5a2RXeGhjaTFzS1R0Y2NseHVYSFIyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE8xeHlYRzVjZEdScGMzQnNZWGs2SUhSaFlteGxMV05sYkd3N1hISmNibHgwWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjY2x4dVhIUnNhVzVsTFdobGFXZG9kRG9nTUR0Y2NseHVmVnh5WEc1Y2NseHVMbWhsWVdSbGNsOWZiRzluYnkxbGJYQm9ZWE5wY3lCN1hISmNibHgwWTI5c2IzSTZJSFpoY2lndExXMWhhVzR0WTI5c2IzSXBPMXh5WEc1Y2RHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hISmNibjFjY2x4dVhISmNia0J0WldScFlTQW9MUzEwWVdKc1pYUXBJSHRjY2x4dVhIUXVhR1ZoWkdWeUlIdGNjbHh1WEhSY2RHMWhjbWRwYmpvZ2RtRnlLQzB0Ylc5a2RXeGhjaTFzS1NBd0lIWmhjaWd0TFcxdlpIVnNZWEl0WW1GelpTa2dNRHRjY2x4dVhIUjlYSEpjYmx4MExtaGxZV1JsY2w5ZmJHOW5ieTEwWlhoMElIdGNjbHh1WEhSY2RHWnZiblF0YzJsNlpUb2dkbUZ5S0MwdGJXOWtkV3hoY2kxNGJDazdYSEpjYmx4MGZWeHlYRzU5WEhKY2JseHlYRzVBYldWa2FXRWdLQzB0ZEdGaWJHVjBMV3hoY21kbEtTQjdYSEpjYmx4MExtaGxZV1JsY2lCN1hISmNibHgwWEhSdFlYSm5hVzQ2SUhaaGNpZ3RMVzF2WkhWc1lYSXRlR3dwSURBZ2RtRnlLQzB0Ylc5a2RXeGhjaTFzS1NBd08xeHlYRzVjZEgxY2NseHVYSFF1YUdWaFpHVnlYMTlzYjJkdkxYUmxlSFFnZTF4eVhHNWNkRngwWm05dWRDMXphWHBsT2lCMllYSW9MUzF0YjJSMWJHRnlMWGg0YkNrN1hISmNibHgwZlZ4eVhHNTlYRzR1Ykc5bmFXNGdlMXh5WEc1Y2RIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1WEhSNkxXbHVaR1Y0T2lBeE1EQTdYSEpjYmx4eVhHNWNkR3hsWm5RNklEVXdKVHRjY2x4dVhIUmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaV1E3WEhKY2JuMWNjbHh1WEc0dWJHbHpkQ0I3WEhKY2JtSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lIWmhjaWd0TFdOdmJHOXlMWGRvYVhSbEtUdGNjbHh1ZlZ4eVhHNWNiaThxWEhKY2JpQXFJRk5sWVhKamFHSmhjbHh5WEc0Z0tpQTlQVDA5UFQwOVBUMWNjbHh1SUNvdlhISmNibHh5WEc0Z0xuTmxZWEpqYUdKaGNpQjdYSEpjYmlCY2RHaGxhV2RvZERveGNtVnRPMXh5WEc0Z1hIUjBaWGgwTFdGc2FXZHVPbU5sYm5SbGNqdGNjbHh1WEhSd1lXUmthVzVuTFdKdmRIUnZiVG8xY21WdE8xeHlYRzRnZlZ4eVhHNWNjbHh1SUdsdWNIVjBJSHRjY2x4dUlGeDBiM1YwYkdsdVpUb2dibTl1WlR0Y2NseHVJRngwWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN1hISmNiaUJjZEdKdmNtUmxjam9nYm05dVpUdGNjbHh1SUZ4MFkyOXNiM0k2STBZNFJqaEdSanRjY2x4dUlGeDBkR1Y0ZEMxemFHRmtiM2M2SURCd2VDQXdjSGdnTUhCNElDTkdPRVk0UmtZN1hISmNiaUJjZEMxM1pXSnJhWFF0ZEdWNGRDMW1hV3hzTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2NseHVYSFJ2Y0dGamFYUjVPaTQzTzF4eVhHNGdmVnh5WEc1Y2NseHVMbk5sWVhKamFHSmhjbDlmWW1GeUlIdGNjbHh1WEhSdFlYSm5hVzQ2WVhWMGJ6dGNjbHh1WEhSM2FXUjBhRG95TUhKbGJUdGNjbHh1WEhSaWIzSmtaWEl0WW05MGRHOXRPakZ3ZUNCemIyeHBaQ0FqUmpoR09FWkdPMXh5WEc1Y2RIQmhaR1JwYm1jNkxqVnlaVzA3WEhKY2JseDBabTl1ZEMxemFYcGxPakV1TTNKbGJUdGNjbHh1ZlZ4eVhHNWNiaTVzYVhOMElIdGNjbHh1WW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnZG1GeUtDMHRZMjlzYjNJdGQyaHBkR1VwTzF4eVhHNTlYSEpjYmlJc0ltaDBiV3dnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSjFKaGFtUm9ZVzVwSnl3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpFNU1UY3hPVHRjYmlBZ1kyOXNiM0k2SUNObE5tUmlaR003WEc0Z0lHWnZiblF0YzJsNlpUb2dNakZ3ZUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFME1DVTdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc1OVhHNWNia0JtYjI1MExXWmhZMlVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKU1lXcGthR0Z1YVZ3aU8xeHVJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUF6TURBN1hHNGdJSE55WXpvZ2RYSnNLRndpTDJadmJuUnpMMUpoYW1Sb1lXNXBMVXhwWjJoMExuUjBabHdpS1R0Y2JuMWNibHh1UUdadmJuUXRabUZqWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lsSmhhbVJvWVc1cFhDSTdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnYzNKak9pQjFjbXdvWENJdlptOXVkSE12VW1GcVpHaGhibWt0VW1WbmRXeGhjaTUwZEdaY0lpazdYRzU5WEc1Y2JrQm1iMjUwTFdaaFkyVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0pTWVdwa2FHRnVhVndpTzF4dUlDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTFNREE3WEc0Z0lITnlZem9nZFhKc0tGd2lMMlp2Ym5SekwxSmhhbVJvWVc1cExVMWxaR2wxYlM1MGRHWmNJaWs3WEc1OVhHNWNia0JtYjI1MExXWmhZMlVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKU1lXcGthR0Z1YVZ3aU8xeHVJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEyTURBN1hHNGdJSE55WXpvZ2RYSnNLRndpTDJadmJuUnpMMUpoYW1Sb1lXNXBMVk5sYldsQ2IyeGtMblIwWmx3aUtUdGNibjFjYmx4dVFHWnZiblF0Wm1GalpTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJbEpoYW1Sb1lXNXBYQ0k3WEc0Z0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYmlBZ2MzSmpPaUIxY213b1hDSXZabTl1ZEhNdlVtRnFaR2hoYm1rdFFtOXNaQzUwZEdaY0lpazdYRzU5WEc1Y2JtSnZaSGtnZTF4dUlDQnRZWEpuYVc0NklEQTdYRzU5WEc1Y2JtRWdlMXh1SUNCamIyeHZjam9nYVc1b1pYSnBkRHRjYmlBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1ZlZ4dVhHNHViR0Y1YjNWMElIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpFNU1UY3hPVHRjYmlBZ2JXRjRMWGRwWkhSb09pQXhNREFsTzF4dUlDQnRZWEpuYVc0NklHRjFkRzg3WEc0Z0lHOTJaWEptYkc5M0xYZzZJR2hwWkdSbGJqdGNibjFjYmx4dUx5b3FLbHh5WEc0Z0tpQldZWEpwWVdKc1pYTmNjbHh1SUNvZ0xWeHlYRzRnS2k5Y2JseHVPbkp2YjNRZ2UxeHVJQ0F2S2x4eVhHNWNkQ0FxSUUxdlpIVnNZWElnVTJOaGJHVWdMU0F4TGpZeE9DQW9SMjlzWkdWdUlGSmhkR2x2S1Z4eVhHNWNkQ0FxTDF4dUlDQXZLbHh5WEc1Y2RDQXFJRlJvWlcxbFhISmNibHgwSUNvdlhHNGdJQzhxWEhKY2JseDBJQ29nUTI5c2IzSnpYSEpjYmx4MElDb3ZYRzRnSUM4cVhISmNibHgwSUNvZ1ZHVjRkSE5jY2x4dVhIUWdLaTljYmlBZ0x5cGNjbHh1WEhRZ0tpQkJiR1Z5ZEM5VGRHRjBkWE1nWTI5c2IzSnpYSEpjYmx4MElDb3ZYRzRnSUM4cVhISmNibHgwSUNvZ1JXRnphVzVuYzF4eVhHNWNkQ0FxTDF4dWZWeHVYRzR2S2lvcVhISmNiaUFxSUUxbFpHbGhJSEYxWlhKcFpYTmNjbHh1SUNvZ0xWeHlYRzRnS2k5Y2JseHVMbU5oY21SZlgyTnpjeTFuY21sa0lIdGNiaUFnWkdsemNHeGhlVG9nWjNKcFpEdGNiaUFnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQXhabklnTVdaeU8xeHVJQ0F0YlhNdFozSnBaQzFqYjJ4MWJXNXpPaUF4Wm5JZ01XWnlPMXh1SUNCbmNtbGtMV052YkhWdGJpMW5ZWEE2SURBdU1UUTJjbVZ0TzF4dUlDQm5jbWxrTFhKdmR5MW5ZWEE2SURBdU1UUTJjbVZ0TzF4dUlDQnRZWEpuYVc0NklEQWdNQzR4TkRaeVpXMGdNUzQyTVRoeVpXMDdYRzU5WEc1Y2JpNWpZWEprSUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBalpHUmtaR1JrTzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXdPMXh1ZlZ4dVhHNHVZMkZ5WkRwb2IzWmxjajR1WTJGeVpGOWZZbWNnZTF4dUlDQjBjbUZ1YzJadmNtMDZJSE5qWVd4bEtERXVOQ2s3WEc1OVhHNWNiaTVqWVhKa1gxOXVZVzFsSUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4dUlDQm1iMjUwTFhOcGVtVTZJREF1TmpFNGNtVnRPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQmliM1IwYjIwNklEQXVNemd5Y21WdE8xeHVJQ0J5YVdkb2REb2dNQzR4TkRaeVpXMDdYRzRnSUhvdGFXNWtaWGc2SURRN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBd08xeHVmVnh1WEc0dVkyRnlaRjlmWW1jZ2UxeHVJQ0J0WVhndGQybGtkR2c2SURFd01DVTdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F1TkhNN1hHNTlYRzVjYmtCdFpXUnBZU0JoYkd3Z1lXNWtJQ2h0YVc0dGQybGtkR2c2TmpneGNIZ3BJSHRjYmlBZ0xtTmhjbVJmWDJOemN5MW5jbWxrSUh0Y2JpQWdJQ0JuY21sa0xXTnZiSFZ0YmkxbllYQTZJREF1TXpneWNtVnRPMXh1SUNBZ0lHZHlhV1F0Y205M0xXZGhjRG9nTUM0ek9ESnlaVzA3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJREF1TmpFNGNtVnRJREl1TmpFNGNtVnRPMXh1SUNCOVhHNWNiaUFnTG1OaGNtUmZYMjVoYldVZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01TNDJNVGh5WlcwN1hHNGdJQ0FnWW05MGRHOXRPaUF5TVhCNE8xeHVJQ0FnSUhKcFoyaDBPaUF3TGpFME5uSmxiVHRjYmlBZ2ZWeHVmVnh1WEc1QWJXVmthV0VnWVd4c0lHRnVaQ0FvYldsdUxYZHBaSFJvT2pFd01qUndlQ2tnZTF4dUlDQXVZMkZ5WkY5ZlkzTnpMV2R5YVdRZ2UxeHVJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2dNV1p5SURGbWNpQXhabkk3WEc0Z0lDQWdMVzF6TFdkeWFXUXRZMjlzZFcxdWN6b2dNV1p5SURGbWNpQXhabkk3WEc0Z0lDQWdaM0pwWkMxamIyeDFiVzR0WjJGd09pQXdMak00TW5KbGJUdGNiaUFnSUNCbmNtbGtMWEp2ZHkxbllYQTZJREF1TXpneWNtVnRPMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQXlNWEI0SURJdU5qRTRjbVZ0TzF4dUlDQjlYRzVjYmlBZ0xtTmhjbVJmWDI1aGJXVWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNUzQyTVRoeVpXMDdYRzRnSUNBZ1ltOTBkRzl0T2lBeU1YQjRPMXh1SUNBZ0lISnBaMmgwT2lBd0xqRTBObkpsYlR0Y2JpQWdmVnh1ZlZ4dVhHNHVabTl2ZEdWeUlIdGNiaUFnY0dGa1pHbHVaem9nTUM0Mk1UaHlaVzA3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnWm05dWRDMXphWHBsT2lBd0xqWXhPSEpsYlR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFME1DVTdYRzRnSUdKdmNtUmxjaTEwYjNBNklERndlQ0J6YjJ4cFpDQWpaREl5TnpNd08xeHVmVnh1WEc1QWJXVmthV0VnWVd4c0lHRnVaQ0FvYldsdUxYZHBaSFJvT2pZNE1YQjRLU0I3WEc0Z0lDNW1iMjkwWlhJZ2UxeHVJQ0FnSUhCaFpHUnBibWM2SURJeGNIZ2dNaTQyTVRoeVpXMDdYRzRnSUgxY2JuMWNibHh1UUcxbFpHbGhJR0ZzYkNCaGJtUWdLRzFwYmkxM2FXUjBhRG94TURJMGNIZ3BJSHRjYmlBZ0xtWnZiM1JsY2lCN1hHNGdJQ0FnY0dGa1pHbHVaem9nTWpGd2VDQTJMamcxTkhKbGJUdGNiaUFnZlZ4dWZWeHVYRzR1YUdWaFpHVnlJSHRjYmlBZ1pHbHpjR3hoZVRvZ2RHRmliR1U3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnZDJsa2RHZzZJREV3TUNVN1hHNGdJSEJoWkdScGJtYzZJREl1TmpFNGNtVnRJREFnTVM0Mk1UaHlaVzBnTUR0Y2JuMWNibHh1TG1obFlXUmxjbDlmYkc5bmJ5MTBaWGgwSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TGpZeE9ISmxiVHRjYmlBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUcxcFpHUnNaVHRjYmlBZ1pHbHpjR3hoZVRvZ2RHRmliR1V0WTJWc2JEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREE3WEc1OVhHNWNiaTVvWldGa1pYSmZYMnh2WjI4dFpXMXdhR0Z6YVhNZ2UxeHVJQ0JqYjJ4dmNqb2dJMlF5TWpjek1EdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYm4xY2JseHVRRzFsWkdsaElHRnNiQ0JoYm1RZ0tHMXBiaTEzYVdSMGFEbzJPREZ3ZUNrZ2UxeHVJQ0F1YUdWaFpHVnlJSHRjYmlBZ0lDQnRZWEpuYVc0NklERXVOakU0Y21WdElEQWdNakZ3ZUNBd08xeHVJQ0I5WEc1Y2JpQWdMbWhsWVdSbGNsOWZiRzluYnkxMFpYaDBJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREl1TmpFNGNtVnRPMXh1SUNCOVhHNTlYRzVjYmtCdFpXUnBZU0JoYkd3Z1lXNWtJQ2h0YVc0dGQybGtkR2c2TVRBeU5IQjRLU0I3WEc0Z0lDNW9aV0ZrWlhJZ2UxeHVJQ0FnSUcxaGNtZHBiam9nTWk0Mk1UaHlaVzBnTUNBeExqWXhPSEpsYlNBd08xeHVJQ0I5WEc1Y2JpQWdMbWhsWVdSbGNsOWZiRzluYnkxMFpYaDBJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJRFF1TWpNMmNtVnRPMXh1SUNCOVhHNTlYRzVjYmk1c2IyZHBiaUI3WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnZWkxcGJtUmxlRG9nTVRBd08xeHVJQ0JzWldaME9pQTFNQ1U3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklISmxaRHRjYm4xY2JseHVMbXhwYzNRZ2UxeHVJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqWm1abVptWm1PMXh1ZlZ4dVhHNHZLbHh5WEc0Z0tpQlRaV0Z5WTJoaVlYSmNjbHh1SUNvZ1BUMDlQVDA5UFQwOVhISmNiaUFxTDF4dVhHNHVjMlZoY21Ob1ltRnlJSHRjYmlBZ2FHVnBaMmgwT2lBeGNtVnRPMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQTFjbVZ0TzF4dWZWeHVYRzVwYm5CMWRDQjdYRzRnSUc5MWRHeHBibVU2SUc1dmJtVTdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0JpYjNKa1pYSTZJRzV2Ym1VN1hHNGdJR052Ykc5eU9pQWpSamhHT0VaR08xeHVJQ0IwWlhoMExYTm9ZV1J2ZHpvZ01IQjRJREJ3ZUNBd2NIZ2dJMFk0UmpoR1JqdGNiaUFnTFhkbFltdHBkQzEwWlhoMExXWnBiR3d0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQnZjR0ZqYVhSNU9pQXVOenRjYm4xY2JseHVMbk5sWVhKamFHSmhjbDlmWW1GeUlIdGNiaUFnYldGeVoybHVPaUJoZFhSdk8xeHVJQ0IzYVdSMGFEb2dNakJ5WlcwN1hHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklERndlQ0J6YjJ4cFpDQWpSamhHT0VaR08xeHVJQ0J3WVdSa2FXNW5PaUF1TlhKbGJUdGNiaUFnWm05dWRDMXphWHBsT2lBeExqTnlaVzA3WEc1OVhHNWNiaTVzYVhOMElIdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTJabVptWm1aanRjYm4xY2JpOHFJeUJ6YjNWeVkyVk5ZWEJ3YVc1blZWSk1QV1JoZEdFNllYQndiR2xqWVhScGIyNHZhbk52Ymp0aVlYTmxOalFzWlhsS01scFlTbnBoVnpsMVNXcHZla3hEU25waU0xWjVXVEpXZWtscWNHSkphVGxXWXpKV2VXTjVPVkZhVjFKNVlubENTRmxZU21wYVdHOTJVa2RXZW1FelVuWmpRemwzWTIwNWNWcFhUakJqZVRsNVdsZEdhbVJETVdsaU1teHpXbGhKZGxwdVNuWmlibEYyWXpOS2Frd3lUblppV0VKMlltMVdkV1JJVFhaWmJsWjFXa2Q0YkV4dFRucGplVXBrVEVOS2RWbFhNV3hqZVVrMlZ6RXdjMGx0TVdoalNFSndZbTFrZWtscWIybFJWVVpDVVZSMFJsRlZUa1JQTUZaQ1VUQkZOMUpWUmtSUlZIUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVjemRQTUVaQ1VqQlJOMUpWUmtSUmVuUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVjemRQTUVaQ1VqQlJOMUpWUmtSUmVuUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVjemRQTUVaQ1VqQlJOMUpWUmtSUmVuUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVjemRQTUVaQ1VqQlJOMUpWUmtSUmVuUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVjemRQTUVaQ1VqQlJOMUpWUmtSUmVuUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVjemRQTUVaQ1VqQlJOMUpWUmtSUmVuTTNUekJHUWxJd1VUZFNWVVpFVVhwMFJsRlZUa0pQZW5NM1VWVkdTRkpFZEVaUlZVNUVUekJXUWxFd1JUZFNWVVpFVVZSMFJsRlZUa0pQZW5NM1VWVkdTRkpFY3pkUGVuTTNVVlZHVEZGVWRFSlJWVTVFVDNwek4xRlZSbGhSVkhNM1R6QkdRbFJWUlRkUGVuUkNVVlpXUWs5NmN6ZFJWVVpPVVZSek4wOHdSa0pVVlVVM1QzcHpOMDh3UmtKVk1GRTNUM3B6TjA4d1JrSlpWVVUzVWxWR1JGRjZkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlIwUmxGVlRrSlBNRlpDVVRCRk4wOTZkRUpSVldSRlR6QldRbEV3VFRkU1ZVWkVVVlIwUmxGVlRrSlBNRlpDVVRCRk4xSlZSa1JSVkhNM1R6QkdRbEl3VVRkU1ZVWkVVWHB6TjA4d1JrSlNNRkUzVWxWR1JGRjZkRVpSVlU1Q1R6QldRbEV3UlRkU1ZVWkVVVlIwUmxGVlRrSlBNRlpDVVRCRk4xSlZSa1JSVkhSR1VWVk9Razk2Y3pkUlZVWklVa1IwUmxGVlRrUlBNRlpDVVRCRk4wOTZkRUpSVldSRlR6QkdRbEV3VFRkVFZVWkVVWHAwU2xGVlRrSlBNR3hDVVRCRk4wOTZkRUpSVlZaRlR6QnNRbEV3VFRkVFZVWkVVVlIwU2xGVlRrSlBlbk0zVHpCR1FsTlZXVGRSVlVaRVVYcDBTbEZWVGtSUE1HeENVVEJGTjFOVlJrUlJWSFJLVVZWT1FrOHdiRUpSTUVVM1QzcDBRbEZWVmtWUE1HeENVVEJOTjFOVlJrUlJWSFJLVVZWT1FrOTZjemRQTUVaQ1VqQlpOMUpWUmtSUmVuUkdVVlZPUWs4d1ZrSlJNRVUzVWxWR1JGRlVkRVpSVlU1Q1QzcHpOMUZWUmtoU1JIUkNVVlZPUkU4d2JFSlJNRTAzVDNwek4xRlZSa3BTYW5SQ1VWVk9SRTh3YkVKUk1FMDNUM3B6TjFGVlJrcFNhblJHVVZWT1JFOHdWa0pSTUVVM1VsVkdSRkZVZEVaUlZVNUNUM3B6TjFGVlJraFNSSFJHVVZWT1JFOHdWa0pSTUVVM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFBlblJDVVZWa1JVOHdWa0pSTUUwM1VsVkdSRkZVY3pkUE1FWkNVakJSTjFGVlJrUlJlblJLVVZWT1JFOTZjemRSVlVaR1VrUjBTbEZWVGtSUGVuTTNUekJHUWxOVldUZFJWVVpFVVhwMFNsRlZUa1JQZW5NM1VWVkdSbEpFZEVwUlZVNUVUM3B6TjA4d1JrSlNNRmszVWxWR1JGRjZkRVpSVlU1Q1R6QldRbEpWUlRkU1ZVWkVVVlJ6TjA4d1JrSlNNRkUzVWxWR1JGRlVjemRQTUVaQ1VqQkZOMDk2Y3pkUE1FWkNVekJOTjFKVlJrUlJlblJHVVZWT1FrOHdWa0pSTUZFM1QzcDBRbEZWWkVKUE1GWkNVVEJOTjFKVlJrUlJWSFJHVVZWT1FrOHdWa0pSTUVVM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1VUZFBlblJDVVZWa1JVOHdWa0pSTUUwM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZSek4wOHdSa0pTTUZFM1VsVkdSRkZUU1hOSmJrNTJaRmhLYWxwWVRrUmlNalV3V2xjMU1FbHFjR0pKYldnd1lsZDNaMlV4ZUhsWVJ6VmpaRWRhZG1KdVVYUmFiVVowWVZkNE5VOXBRVzVWYlVaeFdrZG9hR0p0YTI1TVEwSjZXVmMxZWt4WVRteGpiV3h0VHpGNGVWaEhOV05rUjBwb1dUSjBibU50T1RGaWJWRjBXVEk1YzJJelNUWkpTRnBvWTJsbmRFeFhTbWhaTW5SdVkyMDVNV0p0VVhCUE1YaDVXRWMxWTJSSFRuWmlSemw1VDJsQ01sbFlTVzlNVXpGNldsZE9kbUp0VW1oamJtdDBXVEk1YzJJelNYQlBNWGg1V0VjMVkyUkhXblppYmxGMFl6SnNObHBVYjJka2JVWjVTME13ZEdKWE9XdGtWM2hvWTJreGFWbFlUbXhMVkhSalkyeDRkVmhJVW5OaFZ6VnNURmRvYkdGWFpHOWtSRzluVFZSUmQwcFVkR05qYkhoMVdFaFNiV0l5TlRCTVdHUnNZVmRrYjJSRWIyZE9SRUYzVHpGNGVWaEhOVGxZU0VwallteDRlVmhITlVGYWJUbDFaRU14YlZsWFRteEpTSFJqWTJ4NGRWaElVbTFpTWpVd1RGZGFhR0pYYkhObFZIQmpTV3hLYUdGdFVtOVpWelZ3V0VOSk4xaElTbU5pYkhnd1dtMDVkV1JETVhwa1NHeHpXbFJ2WjJKdE9YbGlWMFp6VHpGNGVWaEhOV05rUjFwMlltNVJkR1F5Vm5CYU1tZ3dUMmxCZWsxRVFUZFlTRXBqWW14NE1HTXpTbXBQYmxaNVlrTm9ZMGxwT1cxaU1qVXdZM2s1VTFsWGNHdGhSMFoxWVZNeFRXRlhaRzlrUXpVd1pFZGFZMGxwYXpkWVNFcGpZbTR4WTJOc2VIVllTRXBqWW10Q2JXSXlOVEJNVjFwb1dUSlZaMlV4ZUhsWVJ6VmpaRWRhZG1KdVVYUmFiVVowWVZkNE5VOXNkMmxWYlVaeFdrZG9hR0p0YkdOSmFuUmpZMng0ZFZoSVVtMWlNalV3VEZoT01HVlhlR3hQYVVKMVlqTktkRmxYZHpkWVNFcGpZbXg0TUZwdE9YVmtRekV6V2xkc2JtRklVVFpKUkZGM1RVUjBZMk5zZUhWWVNGSjZZMjFOTm1SWVNuTkxSbmRwVERKYWRtSnVVbnBNTVVwb1lXMVNiMWxYTlhCTVZrcHNXak5XYzFsWVNYVmtTRkp0V0VOSmNFOHhlSGxZUnpVNVdFaEtZMkpzZUhsWVJ6VkJXbTA1ZFdSRE1XMVpWMDVzU1VoMFkyTnNlSFZZU0ZKdFlqSTFNRXhYV21oaVYyeHpaVlJ3WTBsc1NtaGhiVkp2V1ZjMWNGaERTVGRZU0VwallteDRNRnB0T1hWa1F6RjZaRWhzYzFwVWIyZGliVGw1WWxkR2MwOHhlSGxZUnpWalpFZGFkbUp1VVhSa01sWndXakpvTUU5cFFURk5SRUUzV0VoS1kySnNlREJqTTBwcVQyNVdlV0pEYUdOSmFUbHRZakkxTUdONU9WTlpWM0JyWVVkR2RXRlRNVTVhVjFKd1pGY3dkV1JJVW0xWVEwbHdUekY0ZVZoSE5UbFlTRXBqWW14NGVWaEhOVUZhYlRsMVpFTXhiVmxYVG14SlNIUmpZMng0ZFZoSVVtMWlNalV3VEZkYWFHSlhiSE5sVkhCalNXeEthR0Z0VW05WlZ6VndXRU5KTjFoSVNtTmliSGd3V20wNWRXUkRNWHBrU0d4eldsUnZaMkp0T1hsaVYwWnpUekY0ZVZoSE5XTmtSMXAyWW01UmRHUXlWbkJhTW1nd1QybEJNazFFUVRkWVNFcGpZbXg0TUdNelNtcFBibFo1WWtOb1kwbHBPVzFpTWpVd1kzazVVMWxYY0d0aFIwWjFZVk14VkZwWE1YQlJiVGx6V2tNMU1HUkhXbU5KYVdzM1dFaEtZMkp1TVdOamJIaDFXRWhLWTJKclFtMWlNalV3VEZkYWFGa3lWV2RsTVhoNVdFYzFZMlJIV25aaWJsRjBXbTFHZEdGWGVEVlBiSGRwVlcxR2NWcEhhR2hpYld4alNXcDBZMk5zZUhWWVNGSnRZakkxTUV4WVRqQmxWM2hzVDJsQ2RXSXpTblJaVjNjM1dFaEtZMkpzZURCYWJUbDFaRU14TTFwWGJHNWhTRkUyU1VSamQwMUVkR05qYkhoMVdFaFNlbU50VFRaa1dFcHpTMFozYVV3eVduWmlibEo2VERGS2FHRnRVbTlaVnpWd1RGVktkbUpIVVhWa1NGSnRXRU5KY0U4eGVIbFlSelU1V0VoS1kySnNlSGxZUnpWcFlqSlNOVWxJZEdOamJIaDFXRWhTZEZsWVNtNWhWelEyU1VSQk4xaElTbU5pYmpGalkyeDRkVmhJU21OaWJVVm5aVEY0ZVZoSE5XTmtSMDUyWWtjNWVVOXBRbkJpYldoc1kyMXNNRTh4ZUhsWVJ6VmpaRWhTYkdWSVVYUmFSMVpxWWpOS2FHUkhiSFppYW05blltMDVkVnBVZEdOamJIaDFabFo0ZVZoSE5XTmpiSGgxVEcxNGFHVlhPVEZrUTBJM1dFaEtZMkpzZURCWmJVWnFZVEprZVdJelZuVmFRekZxWWpKNGRtTnFiMmRrYlVaNVMwTXdkRmx0Um1waE1tUjVZak5XZFZwRGF6ZFlTRXBqWW14NE1HSlhSalJNV0dSd1draFNiMDlwUVhoTlJFRnNUekY0ZVZoSE5XTmtSekZvWTIxa2NHSnFiMmRaV0ZZd1lucDBZMk5zZUhWWVNGSjJaRzFXZVZwdGVIWmtlVEUwVDJsQ2IyRlhVbXRhVnpRM1dFaEtZMkp1TVdOamJIaDFXRWMwZGt0cGIzRllTRXBqWW1sQmNVbEdXbWhqYld4b1dXMTRiR014ZUhsWVJ6Um5TMmxCZEZoSVNtTmlhVUZ4VERGNGVWaEhOV05qYkhoMVQyNUtkbUl6VVdkbE1YaDVXRWMxWTJSRE9IRllTRXBqWW14NE1FbERiMmRVVnpsclpGZDRhR05wUWxSWk1rWnpXbE5CZEVsRVJYVk9ha1UwU1VOb1NHSXllR3RhVnpSblZXMUdNR0ZYT0hCWVNFcGpZbXg0TUVsRGIzWllTRXBqWW14NE1FeFRNWFJpTWxJeFlrZEdlVXhZYURSamVtOW5UVU0wZUU1RVdubGFWekEzV0VoS1kySnNlREJNVXpGMFlqSlNNV0pIUm5sTVdHaDZUMmxCZDB4cVRUUk5ia3BzWWxSMFkyTnNlSFZZU0ZGMFRGY3hkbHBJVm5OWldFbDBZM3B2WjAxRE5ESk5WR2g1V2xjd04xaElTbU5pYkhnd1RGTXhkR0l5VWpGaVIwWjVURmRLYUdNeVZUWkpSRWw0WTBobk4xaElTbU5pYkhnd1RGTXhkR0l5VWpGaVIwWjVURmQzTmtsRVJYVk9ha1UwWTIxV2RFOHhlSGxZUnpWalpFTXdkR0pYT1d0a1YzaG9ZMmt4TkdKRWIyZE5hVFF5VFZSb2VWcFhNRGRZU0VwallteDRNRXhUTVhSaU1sSXhZa2RHZVV4WWFEUmlSRzluVGtNMGVVMTZXbmxhVnpBM1dFaEtZMkpzZURCTVV6RjBZakpTTVdKSFJubE1XR2cwWlVkM05rbEVXWFZQUkZVd1kyMVdkRTh4ZUhsWVJ6VmpaRU00Y1ZoSVNtTmliSGd3U1VOdloxWkhhR3hpVjFaalkyeDRkVmhJVVdkTGFUbGpZMng0ZFZoSVVYUk1WMHBvV1RKMGJtTnRPVEZpYlZFMlNVTk5lRTlVUlROTlZHczNXRWhLWTJKc2VEQk1VekYwV1Zkc2RVeFhUblppUnpsNVQybEJhbHBFU1hsT2VrMTNUekY0ZVZoSE5XTmtRekIwWXpKV2FtSXlOV3RaV0VvMVRGZE9kbUpIT1hsUGFVRnFXbFJhYTFsdFVtcFBNWGg1V0VjMVkyUkRPSEZZU0VwallteDRNRWxEYjJkUk1qbHpZak5LZWxoSVNtTmliSGd3U1VOdmRsaElTbU5pYkhnd1RGTXhhbUl5ZUhaamFURXpZVWRzTUZwVWIyZEpNbHB0V20xYWJWcHFkR05qYkhoMVdFaFJkRXhYVG5aaVJ6bDVURmRrZVZsWWEzUmlSMnh1WVVoU2JHTXpVVFpKUTA1dFdUSmFhbHB0VFRkWVNFcGpZbXg0TUV4VE1XcGlNbmgyWTJreGJtTnRSalZNVjNod1dqSm9NRnBZU1RaSlEwNXRUVEpaZWxwcVRUZFlTRXBqWW14NE1FeFRNV3BpTW5oMlkya3hibU50UmpWTVYzaHdXakpvTUU5cFFXcFNWRXBHVFd0VmVVOHhlSGxZUnpWalpFTXdkRmt5T1hOaU0wbDBXak5LYUdWVE1YUmFWMUp3WkZjd2RHSkhiRzVoU0ZFMlNVTk9hMXBIVW10YVIxRTNXRWhLWTJKc2VEQk1VekZxWWpKNGRtTnBNVzVqYlVZMVRGY3hiRnBIYkRGaVZHOW5TVEpXYUZwWFJteFpWSFJqWTJ4NGRWaElVWFJNVjA1MllrYzVlVXhYWkhsWldHdDBXa2RHZVdGNmIyZEplbFV4VGxSVk1VNVVkR05qYkhoMVdFaFJka3RzZUhsWVJ6VmpaRU5CY1VsR1VteGxTRko2V0VoS1kySnNlREJKUTI5MldFaEtZMkpzZURCTVV6RnFZako0ZG1OcE1UQmFXR2d3VEZka2VWbFlRbTlQYVVGcVRUSlZlbHBVVG14UE1YaDVXRWMxWTJSRE1IUlpNamx6WWpOSmRHUkhWalJrUXpGellWZGtiMlJFYjJkSmVtY3lUMFJaTkU1cWRHTmpiSGgxV0VoUmRFeFhUblppUnpsNVRGaFNiR1ZJVVhSYVIwWjVZWHB2WjBsNlVYaE9SRVV3VFZSMFkyTnNlSFZZU0ZGMlMyeDRlVmhITldOa1EwRnhTVVZHYzFwWVNqQk1NVTR3V1ZoU01XTjVRbXBpTW5oMlkyNU9ZMk5zZUhWWVNGRm5TMms1WTJOc2VIVllTRkYwVEZkT2RtSkhPWGxNVjFaNVkyMDVlVTlwUVdwU1JVa3dUbnBOTWs4eGVIbFlSelZqWkVNd2RGa3lPWE5pTTBsMFl6TldhbGt5Vm5wamVtOW5TWHBXUjFGVVFURk5hblJqWTJ4NGRWaElVWFJNVjA1MllrYzVlVXhZWkdoamJUVndZbTFqTmtsRFRrVlNSR1JIVFhwTk4xaElTbU5pYkhnd1RIbHdZMk5zZUhWWVNGRm5TMmxDUmxsWVRuQmliV1I2V0VoS1kySnNlREJKUTI5MldFaEtZMkpzZURCTVV6RnNXVmhPY0dKdFkzUmhWemw2VDJsQ2FtUlhTbkJaZVRGcFdsaHdjRnBZU1c5TlF6UjVUWGwzWjAxVGQyZE5RelI2VFdsM1owMVRhemRZU0VwallteDRNRXhUTVd4WldFNXdZbTFqZEZwWWFIZFpWelZyVDJsQ2FtUlhTbkJaZVRGcFdsaHdjRnBZU1c5TlF6UjRUbnBWYzBsRVFYVlBSR2N4VEVOQmQweHFUWGxOUTNkblRWTTBlVTU2VlhCUE1YaDVXRWMxWTJSRE1IUmFWMFo2WVZjMWJreFlSakZaVjFFMlNVZE9NVmx0YkdwTVYwcHNaVzFzYkdOcFozZE1hbU16VFVOM1owMUROSGROUkVGelNVUkJkVTFVWXpGTVEwRjRUR3BCZDAxRGF6ZFlTRXBqWW00eFkyTnNlSFZZU0VwallteDRlVmhITkhaTGFXOXhXRWhLWTJKcFFYRkpSVEZzV2tkc2FFbElSakZhV0Vwd1dsaE9ZMk5zZUhWSlEyOW5URlo0ZVZoSE5HZExhVGxqWTJ4NGRWaElTbU5pYTBKcVpGaE9NR0l5TUhSaVYxWnJZVmRGWjB4VE1UQlpWMHB6V2xoUloxbFhlSE5KUjBaMVdrTkJiMkpYYkhWTVdHUndXa2hTYjA5cVdUUk5XRUkwUzFSMFkyTnNlSFZSUjA0eFl6TlNkbUpUTVhSYVYxSndXVk5CZEV4WVVtaFpiWGhzWkVNeGMxbFlTbTVhVTBKb1lrZDNaMWxYTld0SlEyaDBZVmMwZEdReWJHdGtSMmMyVFZSQmVVNUlRalJMVkhSalkyeDRkVkZIVGpGak0xSjJZbE14ZEZwWFVuQlpVMEYwVEZkU2JHTXlkREJpTTBGMFl6SXhhR0pIZDJkWlYzaHpTVWRHZFZwRFFXOWlWMngxVEZoa2NGcElVbTlQYWtWNFRVUkNkMlZEYXpkWVNFcGpZbXRDYW1SWVRqQmlNakIwWWxkV2EyRlhSV2RNVXpGcldsaE9jbVJIT1hkTVZ6RnNXa2RzTVdKVFFtaGlSM2RuV1ZjMWEwbERhSFJoVnpSMFpESnNhMlJIWnpaTlZFbDNUVWhDTkV0VWRHTmpiSGgxVVVkT01XTXpVblppVXpGMFdsZFNjRmxUUVhSTVYxSnNZekowTUdJelFYUmlSMFo1V2pKVloxbFhlSE5KUjBaMVdrTkJiMkpYYkhWTVdHUndXa2hTYjA5cVJUQk9SRUozWlVOck4xaElTbU5pYTBKcVpGaE9NR0l5TUhSaVYxWnJZVmRGWjB4VE1XdGFXRTV5WkVjNWQweFlhSE5aV0VwdVdsTkNhR0pIZDJkWlZ6VnJTVU5vZEdGWE5IUmtNbXhyWkVkbk5rMVVZM2xOU0VJMFMxUjBZMk5zZUhWUlIwNHhZek5TZG1KVE1YUmFWMUp3V1ZOQmRFeFhVbXhqTW5Rd1lqTkJkR1ZJYUhOWldFcHVXbE5DYUdKSGQyZFpWelZyU1VOb2RHRlhOSFJrTW14clpFZG5OazFVYTNsTlNFSTBTMVIwWTJOc2VIVllSelIxV1RKR2VWcEdPV1paTTA1NlRGZGtlV0ZYVVdkbE1YaDVXRWMxWTJSSFVuQmpNMEp6V1Zock5rbEhaSGxoVjFFM1dFaEtZMkpzZURCYU0wcHdXa014TUZwWE1YZGlSMFl3V2xNeGFtSXllREZpVnpWNlQybEJlRnB1U1dkTlYxcDVUekY0ZVZoSE5XTmtRekYwWTNreGJtTnRiR3RNVjA1MllraFdkR0p1VFRaSlJFWnRZMmxCZUZwdVNUZFlTRXBqWW14NE1Gb3pTbkJhUXpGcVlqSjRNV0pYTkhSYU1rWjNUMmxDTWxsWVNXOU1VekYwWWpKU01XSkhSbmxNV0dnMFkzbHJOMWhJU21OaWJIZ3dXak5LY0ZwRE1YbGlNMk4wV2pKR2QwOXBRakpaV0VsdlRGTXhkR0l5VWpGaVIwWjVURmhvTkdONWF6ZFlTRXBqWW14NE1HSlhSbmxhTW14MVQybEJkMGxJV21oamFXZDBURmN4ZGxwSVZuTlpXRWwwWlVob2VrdFRRakpaV0VsdlRGTXhkR0l5VWpGaVIwWjVURmQzY0U4eGVIbFlSelU1V0VoS1kySnNlSGxZUnpSMVdUSkdlVnBEUWpkWVNFcGpZbXg0TUdOSE9YcGhXRkp3WWpJME5rbElTbXhpUjBZd1lWaGFiRTh4ZUhsWVJ6VmpaRWRLZG1OdFVteGphbTluVFZoQ05FbElUblppUjJ4clNVaGFhR05wWjNSTVYwNTJZa2M1ZVV4WFpIbFpXR3QwWWxkV2EyRllWblJNVjNod1dqSm9NRXRVZEdOamJIaDFXRWhTYW1SWVNucGlNMGsyU1VoQ2RtRlhOVEJhV0VrM1dFaEtZMkpzZURCaU0xcHNZMjFhYzJJell6WkpSMmh3V2tkU2JHSnFkR05qYkhoMVdFaFNjMkZYTld4TVYyaHNZVmRrYjJSRWIyZE5SSFJqWTJ4NGRXWldlSGxZUnpWalkyeDRkVXh0VG1oamJWRTJZVWM1TWxwWVNTdE1iVTVvWTIxU1psZ3lTbTVKU0hSalkyeDRkVmhJVWpCamJVWjFZekphZG1OdE1EWkpTRTVxV1ZkNGJFdEVSWFZPUTJzM1dFaEtZMkp1TVdOamJIaDFXRWhLWTJKcE5XcFpXRXByV0RFNWRWbFhNV3hKU0hSalkyeDRkVmhJVW5kaU0wNXdaRWRzZG1KcWIyZFpWMHA2WWpKNE1XUkhWVGRZU0VwallteDRNRnB0T1hWa1F6RXpXbGRzYm1GSVVUWkpSRmwzVFVSMFkyTnNlSFZZU0ZKdFlqSTFNRXhZVG5CbGJWVTJTVWhhYUdOcFozUk1WekYyV2toV2MxbFlTWFJqZVdzM1dFaEtZMkpzZURCa1IxWTBaRU14TUdOdFJuVmpNbHAyWTIwd05rbElWbmRqUjFaNVdUSkdlbHBVZEdOamJIaDFXRWhTYVdJelVqQmlNakEyU1VoYWFHTnBaM1JNVnpGMldraFdjMWxZU1hSbFNFMXdUekY0ZVZoSE5XTmtTRXB3V2pKb01FOXBRakpaV0VsdlRGTXhkR0l5VWpGaVIwWjVURmhvTkdONWF6ZFlTRXBqWW14NE1HVnBNWEJpYlZKc1pVUnZaMDVFZEdOamJIaDFXRWhTYzJGWE5XeE1WMmhzWVZka2IyUkViMmROUkhSalkyeDRkV1pXZUhsWVJ6VmpZMng0ZFV4dFRtaGpiVkptV0RKS2JrbElkR05qYkhoMVdFaFNkRmxZWjNSa01teHJaRWRuTmtsRVJYZE5RMVUzV0VoS1kySnNlREJrU0Vwb1ltNU9jR1JIYkhaaWFtOW5XVmQ0YzBsRE5EQmplblJqWTJ4NGRXWldlSGxZUnpWalkyeDRkVkZITVd4YVIyeG9TVU5uZEV4WVVtaFpiWGhzWkVOcloyVXhlSGxZUnpWalpFTTFhbGxZU210WU1UbHFZek5OZEZvelNuQmFRMEkzV0VoS1kySnNlREJZU0ZKdVkyMXNhMHhYVG5aaVNGWjBZbWt4YmxsWVFUWkpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkR1ZJVFhCUE1YaDVXRWMxWTJSR2VEQmFNMHB3V2tNeGVXSXpZM1JhTWtaM1QybENNbGxZU1c5TVV6RjBZakpTTVdKSFJubE1XR2g2UzFSMFkyTnNlSFZZU0ZKalpFY3hhR050WkhCaWFtOW5UVU5DTWxsWVNXOU1VekYwWWpKU01XSkhSbmxNV0Uxd1NVaGFhR05wWjNSTVZ6RjJXa2hXYzFsWVNYUmxSM2R3VHpGNGVWaEhOV05rU0RGalkyeDRkVmhJVVhWWk1rWjVXa1k1Wm1KdFJuUmFVMEkzV0VoS1kySnNlREJZU0ZKdFlqSTFNRXhZVG5CbGJWVTJTVWhhYUdOcFozUk1WekYyV2toV2MxbFlTWFJpUTJzM1dFaEtZMkpzZURCWVNGSnBZak5TTUdJeU1EWkpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkRmx0Um5wYVUyczNXRWhLWTJKc2VEQllTRko1WVZka2IyUkViMmRrYlVaNVMwTXdkR0pYT1d0a1YzaG9ZMmt4TkdWSVRYQlBNWGg1V0VjMVkyUklNV05qYkhoMVpsWjRlVmhITldOamJIaDFVVWN4YkZwSGJHaEpRMmQwVEZoU2FGbHRlR3hrUXpGeldWaEtibHBUYTJkbE1YaDVXRWMxWTJSRE5XcFpXRXByV0RFNWFtTXpUWFJhTTBwd1drTkNOMWhJU21OaWJIZ3dXRWhTYm1OdGJHdE1XRkpzWWxoQ2MxbFlVbXhNVjA1MllraFdkR0p1VFRaSlJFWnRZMmxCZUZwdVNXZE5WMXA1VHpGNGVWaEhOV05rUm5nd1RGY3hla3hYWkhsaFYxRjBXVEk1YzJSWE1YVmplbTluVFZkYWVVbEVSbTFqYVVGNFdtNUpOMWhJU21OaWJIZ3dXRWhTYm1OdGJHdE1WMDUyWWtoV2RHSnBNVzVaV0VFMlNVaGFhR05wWjNSTVZ6RjJXa2hXYzFsWVNYUmxTRTF3VHpGNGVWaEhOV05rUm5nd1dqTktjRnBETVhsaU0yTjBXakpHZDA5cFFqSlpXRWx2VEZNeGRHSXlVakZpUjBaNVRGaG9la3RVZEdOamJIaDFXRWhTWTJSSE1XaGpiV1J3WW1wdlowMURRakpaV0VsdlRGTXhkR0l5VWpGaVIwWjVURmRLYUdNeVZYQkpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkR1ZIZDNCUE1YaDVXRWMxWTJSSU1XTmpiSGgxV0VoUmRWa3lSbmxhUmpsbVltMUdkRnBUUWpkWVNFcGpZbXg0TUZoSVVtMWlNalV3VEZoT2NHVnRWVFpKU0Zwb1kybG5kRXhYTVhaYVNGWnpXVmhKZEdKRGF6ZFlTRXBqWW14NE1GaElVbWxpTTFJd1lqSXdOa2xJV21oamFXZDBURmN4ZGxwSVZuTlpXRWwwV1cxR2VscFRhemRZU0VwallteDRNRmhJVW5saFYyUnZaRVJ2WjJSdFJubExRekIwWWxjNWEyUlhlR2hqYVRFMFpVaE5jRTh4ZUhsWVJ6VmpaRWd4WTJOc2VIVm1WbmgxVEcxYWRtSXpVbXhqYVVJM1dFaEtZMkpzZURCalIwWnJXa2RzZFZwNmIyZGtiVVo1UzBNd2RHSlhPV3RrVjNob1kya3hla3RVZEdOamJIaDFXRWhTTUZwWWFEQk1WMFp6WVZka2RVOXBRbXBhVnpVd1dsaEpOMWhJU21OaWJIZ3dXbTA1ZFdSRE1YcGhXSEJzVDJsQ01sbFlTVzlNVXpGMFlqSlNNV0pIUm5sTVdFMXdUekY0ZVZoSE5XTmtSM2h3WW0xVmRHRkhWbkJhTW1nd1QybEJlRTVFUVd4UE1YaDVXRWMxWTJSSFNuWmpiVkpzWTJreE1HSXpRVFpKUkVaM1pVTkNlbUl5ZUhCYVEwSXlXVmhKYjB4VE1YUlpWMngxVEZkT2RtSkhPWGxMVkhSalkyeDRkV1pXZUhsWVJ6VmpZMng0ZFZGSE1XeGFSMnhvU1VObmRFeFlVbWhaYlhoc1pFTnJaMlV4ZUhsWVJ6VmpaRU0xYldJeU9UQmFXRWxuWlRGNGVWaEhOV05rUm5nd1kwZEdhMXBIYkhWYWVtOW5aRzFHZVV0RE1IUmlWemxyWkZkNGFHTnBNV2xaV0U1c1MxTkNNbGxZU1c5TVV6RjBZakpTTVdKSFJubE1XR2h6UzFSMFkyTnNlSFZZU0ZJNVdFaEtZMkp1TVdOamJIaDFXRWhLWTJKclFuUmFWMUp3V1ZOQmIweFRNVEJaVjBweldsaFJkR0pIUm5sYU1sVndTVWgwWTJOc2VIVllTRkYxV20wNWRtUkhWbmxKU0hSalkyeDRkVmhJVW1Oa1NFSm9Xa2RTY0dKdFl6WkpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkRmx0Um5wYVUydG5aRzFHZVV0RE1IUmlWemxyWkZkNGFHTnBNVFJsU0doelMxUjBZMk5zZUhWWVNGSTVXRWhLWTJKdU1XTmpiSGgxV0VjMGRXRkhWbWhhUjFaNVNVaDBZMk5zZUhWWVNGSnJZVmhPZDJKSFJqVlBhVUl3V1ZkS2MxcFVkR05qYkhoMVdFaFNNRnBZYURCTVYwWnpZVmRrZFU5cFFtcGFWelV3V2xoSk4xaElTbU5pYkhnd1pESnNhMlJIWnpaSlJFVjNUVU5WTjFoSVNtTmliSGd3WTBkR2ExcEhiSFZhZW05blpHMUdlVXRETUhSaVZ6bHJaRmQ0YUdOcE1UUmlRMnRuVFVOQ01sbFlTVzlNVXpGMFlqSlNNV0pIUm5sTVYzZHdTVVJCTjFoSVNtTmliakZqWTJ4NGRWaElTbU5pYVRWdldsZEdhMXBZU21aWU1uaDJXakk0ZEdSSFZqUmtRMEkzV0VoS1kySnNlREJhYlRsMVpFTXhlbUZZY0d4UGFVSXlXVmhKYjB4VE1YUmlNbEl4WWtkR2VVeFhkM0JQTVhoNVdFYzFZMlJJV214amJsSndXVEpHYzB4WFJuTmhWMlIxVDJsQ2RHRlhVbXRpUjFVM1dFaEtZMkpzZURCYVIyeDZZMGQ0YUdWVWIyZGtSMFpwWWtkVmRGa3lWbk5pUkhSalkyeDRkVmhJVW0xaU1qVXdURmhrYkdGWFpHOWtSRzluVGxSQmQwOHhlSGxZUnpWalpFZDRjR0p0VlhSaFIxWndXakpvTUU5cFFYZFBNWGg1V0VjMU9WaElTbU5pYkhoNVdFYzBkV0ZIVm1oYVIxWjVXREU1YzJJeVpIWk1WMVowWTBkb2FHTXliSHBKU0hSalkyeDRkVmhJVW1waU1uaDJZMnB2WjJSdFJubExRekIwWWxkR2NHSnBNV3BpTW5oMlkybHJOMWhJU21OaWJIZ3dXbTA1ZFdSRE1UTmFWMnh1WVVoUk5rbEVZM2ROUkhSalkyeDRkV1pXZUhsWVJ6VmpZMng0ZFZGSE1XeGFSMnhvU1VObmRFeFlVbWhaYlhoc1pFTnJaMlV4ZUhsWVJ6VmpaRU0xYjFwWFJtdGFXRWxuWlRGNGVWaEhOV05rUm5nd1lsZEdlVm95YkhWUGFVSXlXVmhKYjB4VE1YUmlNbEl4WWtkR2VVeFhkM0JKUkVGblpHMUdlVXRETUhSaVZ6bHJaRmQ0YUdOcE1XbFpXRTVzUzFOQmQwOHhlSGxZUnpWalpFZ3hZMk5zZUhWWVNGRjFZVWRXYUZwSFZubFlNVGx6WWpKa2RreFlVbXhsU0ZGblpURjRlVmhITldOa1JuZ3dXbTA1ZFdSRE1YcGhXSEJzVDJsQ01sbFlTVzlNVXpGMFlqSlNNV0pIUm5sTVdHaHpTMVIwWTJOc2VIVllTRkk1V0VoS1kySnVNV05qYkhoMVdFaEtZMkpyUW5SYVYxSndXVk5CYjB4VE1UQlpWMHB6V2xoUmRHSkhSbmxhTWxWd1NVaDBZMk5zZUhWWVNGRjFZVWRXYUZwSFZubEpTSFJqWTJ4NGRWaElVbU5rUnpGb1kyMWtjR0pxYjJka2JVWjVTME13ZEdKWE9XdGtWM2hvWTJreE5HSkRhMmROUTBJeVdWaEpiMHhUTVhSaU1sSXhZa2RHZVV4WGQzQkpSRUUzV0VoS1kySnNlREJtVm5oNVdFYzFZMlJETlc5YVYwWnJXbGhLWmxneWVIWmFNamgwWkVkV05HUkRRamRZU0VwallteDRNRmhJVW0xaU1qVXdURmhPY0dWdFZUWkpTRnBvWTJsbmRFeFhNWFphU0ZaeldWaEpkR1ZJYUhOTFZIUmpZMng0ZFZoSVVqbFlTRXBqWW00eFkySnBOWE5pTW1Sd1ltbENOMWhJU21OaWJIZ3dZMGM1ZW1GWVVuQmlNalEyU1VkR2FXTXlPWE5rV0ZKc1R6RjRlVmhITldOa1NHOTBZVmMxYTFwWVp6WkpSRVYzVFVSMFkyTnNlSFZZU0VwallteDRNR0pIVm0xa1JHOW5UbFJCYkU4eGVIbFlSelZqWkVkS2FGa3lkRzVqYlRreFltMVJkRmt5T1hOaU0wazJTVWhLYkZwRWRHTmpiSGgxWmxaNGVWaEhOV05pYVRWellWaE9NRWxJZEdOamJIaDFXVzA1ZVZwSFZubFBhVUY0WTBobloyTXlPWE5oVjFGblpHMUdlVXRETUhSWk1qbHpZak5KZEdReWFIQmtSMVZ3VHpGNGVWaEhOVGxZU0VwallteDRkVXg1Y0dOamJIaDFTVU52WjFVeVZtaGpiVTV2V1cxR2VWaElTbU5pYVVGeFNVUXdPVkJVTURsUVZEQTVVRlo0ZVZoSE5HZExhVGxqWTJ4NGRWaElTbU5pYVVGMVl6SldhR050VG05WmJVWjVTVWgwWTJOc2VIVkpSbmd3WVVkV2NGb3lhREJQYWtaNVdsY3dOMWhJU21OaWFVSmpaRWhTYkdWSVVYUlpWM2h3V2pJME5sa3lWblZrUjFaNVR6RjRlVmhITldOa1NFSm9Xa2RTY0dKdFkzUlpiVGt3WkVjNWRFOXFWbmxhVnpBM1dFaEtZMkpwUWpsWVNFcGpZbXg0ZVZoSE5HZGhWelYzWkZoUloyVXhlSGxZUnpSbldFaFNkbVJZVW5OaFZ6VnNUMmxDZFdJeU5XeFBNWGg1V0VjMFoxaElVbWxaVjA1eVdqTktkbVJYTld0TVYwNTJZa2M1ZVU5cFFqQmpiVVoxWXpOQ2FHTnRWblZrUkhSalkyeDRkVWxHZURCWmJUbDVXa2RXZVU5cFFuVmlNalZzVHpGNGVWaEhOR2RZU0ZKcVlqSjRkbU5xYjJwU2FtaEhUMFZhUjA4eGVIbFlSelJuV0VoU01GcFlhREJNV0U1dldWZFNkbVI2YjJkTlNFSTBTVVJDZDJWRFFYZGpTR2RuU1RCWk5GSnFhRWRTYW5SalkyeDRkVWxHZURCTVdHUnNXVzEwY0dSRE1UQmFXR2d3VEZkYWNHSkhkM1JaTWpsellqTkpOa2xJVW5sWlZ6VjZZMGRHZVZwWE5UQlBNWGg1V0VjMVkyUkhPWGRaVjA1d1pFaHJOa3hxWXpkWVNFcGpZbWxDT1ZoSVNtTmliSGg1V0VjMGRXTXlWbWhqYlU1dldXMUdlVmd4T1dsWldFbG5aVEY0ZVZoSE5XTmtSekZvWTIxa2NHSnFjR2hrV0ZKMlR6RjRlVmhITldOa1NHUndXa2hTYjA5cVNYZGpiVlowVHpGNGVWaEhOV05rUjBwMlkyMVNiR05wTVdsaU0xSXdZakl3TmsxWVFqUkpTRTUyWWtkc2EwbERUa2RQUlZrMFVtdFpOMWhJU21OaWJIZ3dZMGRHYTFwSGJIVmFlbTkxVGxoS2JHSlVkR05qYkhoMVdFaFNiV0l5TlRCTVdFNXdaVzFWTmsxVE5IcGpiVlowVHpGNGVWaEhOVGxZU0VwallteDRkVXh0ZUhCak0xRm5aVEY0ZVZoSE5XbGlNMHByV2xoSk5rbEVSbmRsUTBKNllqSjRjRnBEUWpKWldFbHZURk14YW1JeWVIWmphVEV6WVVkc01GcFRhemRZU0VwalltNHhZMk5zZUhWSmJERTVJQ292SWwxOSAqLyJdfQ== */