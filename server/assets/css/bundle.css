html {
  font-family: 'Rajdhani', sans-serif;
  background-color: #191719;
  color: #e6dbdc;
  font-size: 21px;
  line-height: 140%;
  font-weight: 400;
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/Rajdhani-Light.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/Rajdhani-Regular.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 500;
  src: url("/fonts/Rajdhani-Medium.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/Rajdhani-SemiBold.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/Rajdhani-Bold.ttf");
}

body {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.layout {
  max-width: 100%;
  margin: auto;
  overflow-x: hidden;
  background-image: url("/images/textures/background-texture-small.jpg");
  background-repeat: repeat;
}

@media all and (min-width:1024px) {
  .layout {
    background-image: url("/images/textures/background-texture-medium.jpg");
  }
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Modular Scale
	 */
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.button__button {
  border: 2px solid #d22730;
  font-size: 0.618rem;
  padding: 0.618rem 0.618rem;
  -webkit-transition: all .4s ease-out;
  -o-transition: all .4s ease-out;
  transition: all .4s ease-out;
  font-family: 'Rajdhani';
  text-transform: uppercase;
  color: #d22730;
  font-weight: 600;
  margin: 0 0 2.618rem;
  background: #191719;
  background-image: -webkit-linear-gradient(#d22730, #d22730);
  background-image: linear-gradient(#d22730, #d22730);
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: 0% 100%;
  line-height: 0;
  width: 100%;
  cursor: pointer;
}

.button__button:hover {
  background-size: 100% 100%;
  color: #e6dbdc;
  box-shadow: 0 0 6px 0 #d22730;
}

.button__button:active {
  -webkit-transform: translateY(2px);
  -ms-transform: translateY(2px);
  -o-transform: translateY(2px);
  transform: translateY(2px);
}

.button__button:focus {
  outline: none;
}

@media all and (min-width:1200px) {
  .button__button {
    font-size: 21px;
    padding: 0.618rem 0.618rem;
  }
}

.card {
  position: relative;
  border: 1px outset #3f3f3f;
  cursor: pointer;
  overflow: hidden;
  line-height: 0;
}

.card__name {
  position: absolute;
  font-weight: 600;
  font-size: 0.618rem;
  text-transform: uppercase;
  bottom: 1.35rem;
  z-index: 20;
  line-height: 0;
  background-color: #d22730;
  padding: 0.146rem 0.382rem;
  line-height: 0.618rem;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.card__bg {
  max-width: 100%;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.card__tag-line {
  position: relative;
  text-align: center;
  padding: 0.382rem 0;
  font-size: 0.5253rem;
  text-transform: uppercase;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
  width: 100%;
  background-color: #191719;
  z-index: 10;
  line-height: 0.618rem;
}

.card__accent {
  position: absolute;
  width: 100%;
  background-color: #d22730;
  height: 1px;
  top: 0;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.card__overlay {
  opacity: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  position: absolute;
  z-index: 10;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.card__hover-target {
  display: none;
}

/*
 * Animations
 */

@-webkit-keyframes rotateTarget {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes rotateTarget {
  from {
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

/*
 * Media Queries
 */

@media all and (min-width:681px) {
  .card__name {
    font-size: 21px;
    bottom: 1.8rem;
    padding: .5rem 0.618rem;
  }

  .card__tag-line {
    font-size: 17.849999999999998px;
    padding: 0.618rem 0;
  }

  .card__accent {
    height: 2px;
  }
}

@media all and (min-width:1024px) {
  .card__name {
    bottom: 0;
  }

  .card__tag-line {
    -webkit-transform: translateY(1.7rem);
    -ms-transform: translateY(1.7rem);
    -o-transform: translateY(1.7rem);
    transform: translateY(1.7rem);
    position: absolute;
    bottom: 0;
  }

  .card:hover .card__name {
    -webkit-transform: translateY(-1.7rem);
    -ms-transform: translateY(-1.7rem);
    -o-transform: translateY(-1.7rem);
    transform: translateY(-1.7rem);
  }

  .card__hover-target {
    display: block;
    height: 60px;
    width: 60px;
    margin-top: -30px;
    margin-left: -30px;
    left: 50%;
    position: absolute;
    top: 35%;
    z-index: 10;
    -webkit-transition: .35s linear;
    -o-transition: .35s linear;
    transition: .35s linear;
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    -o-transform: scale(0);
    transform: scale(0);
    opacity: 0;
    fill: #ffffff;
    pointer-events: none;
  }

  .card:hover .card__hover-target {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1);
    height: 60px;
    width: 60px;
    margin-top: -30px;
    margin-left: -30px;
    -webkit-animation: rotateTarget;
    animation: rotateTarget;
    -webkit-animation-duration: 7.5s;
    animation-duration: 7.5s;
    -webkit-animation-timing-function: linear;
    animation-timing-function: linear;
    -webkit-animation-iteration-count: infinite;
    animation-iteration-count: infinite;
    -webkit-animation-delay: .36s;
    animation-delay: .36s;
    opacity: 100;
  }

  .card:hover .card__bg {
    -webkit-transform: scale(1.5) rotate(8deg);
    -ms-transform: scale(1.5) rotate(8deg);
    -o-transform: scale(1.5) rotate(8deg);
    transform: scale(1.5) rotate(8deg);
  }

  .card:hover .card__tag-line {
    -webkit-transform: translateY(0);
    -ms-transform: translateY(0);
    -o-transform: translateY(0);
    transform: translateY(0);
  }

  .card:hover .card__overlay {
    opacity: 100;
  }
}

.champion-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  -ms-grid-columns: repeat(2, 1fr);
  grid-gap: 0.146rem;
  margin: 0 0 1.618rem;
  padding: 0 0.382rem;
}

@media all and (min-width:681px) {
  .champion-grid {
    grid-template-columns: repeat(2, 1fr);
    -ms-grid-columns: repeat(2, 1fr);
    grid-gap: 0.382rem;
    margin: 0 0 2.618rem;
    padding: 0 0.618rem;
  }
}

@media all and (min-width:1024px) {
  .champion-grid {
    grid-template-columns: repeat(3, 1fr);
    -ms-grid-columns: repeat(3, 1fr);
    padding: 0 1.618rem;
  }
}

@media all and (min-width:1200px) {
  .champion-grid {
    padding: 0 4.236rem;
  }
}

@media all and (min-width:1440px) {
  .champion-grid {
    padding: 0 6.854rem;
    margin: 0 0 2.618rem;
    grid-template-columns: repeat(4, 1fr);
    -ms-grid-columns: repeat(4, 1fr);
    grid-gap: 0.618rem;
  }
}

@media all and (min-width:1720px) {
  .champion-grid {
    margin: 0 0 4.236rem;
    padding: 0 11.089rem;
    grid-gap: 21px;
  }
}

.footer {
  padding: 0.618rem;
  text-align: center;
  font-size: 0.618rem;
  line-height: 140%;
  box-shadow: 0 0 12px 0 #d22730;
  background: #191719;
}

@media all and (min-width:681px) {
  .footer {
    padding: 21px 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .footer {
    padding: 21px 6.854rem;
  }
}

@media all and (min-width:1100px) {
  .footer {
    padding: 21px 11rem;
  }
}

@media all and (min-width:1200px) {
  .footer {
    padding: 21px 15rem;
  }
}

@media all and (min-width:1440px) {
  .footer {
    padding: 21px 25rem;
  }
}

.form__title {
  color: #d22730;
  margin: 0 0 21px;
  font-weight: 600;
  font-size: 1.3753rem;
}

.form__input-el {
  background: rgba(0, 0, 0, 0.7);
  overflow: hidden;
  border: 1px solid #d22730;
  min-width: 100%;
  color: #e6dbdc;
  text-transform: uppercase;
  font-size: 17.849999999999998px;
  font-family: 'Rajdhani';
  min-height: 4rem;
  margin: 0 0 0.618rem;
}

.form__input-el:focus {
  outline: none;
  box-shadow: 0 0 6px 0 #d22730;
}

@media all and (min-width:1200px) {
  .form__title {
    font-size: 1.618rem;
  }

  .form__input-el {
    font-size: 21px;
  }
}

.header {
  display: table;
  text-align: center;
  width: 100%;
  padding: 2.618rem 0 1.618rem 0;
}

.header__logo-text {
  font-size: 1.618rem;
  vertical-align: middle;
  display: table-cell;
  font-weight: 500;
  line-height: 0;
}

.header__logo-emphasis {
  color: #d22730;
  font-weight: 700;
}

@media all and (min-width:681px) {
  .header {
    margin: 1.618rem 0 21px 0;
  }

  .header__logo-text {
    font-size: 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .header {
    margin: 2.618rem 0 1.618rem 0;
  }

  .header__logo-text {
    font-size: 4.236rem;
  }
}

@media all and (min-width:1200px) {
  .header {
    margin: 4.236rem 0 2.618rem 0;
  }

  .header__logo-text {
    font-size: 4.236rem;
  }
}

.login {
  position: absolute;
  z-index: 100;
  left: 50%;
  background-color: red;
}

.list {
  border: 1px solid #ffffff;
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

.tips {
  text-transform: uppercase;
  padding: 0 0.618rem;
  font-weight: 400;
}

.tips__title {
  color: #d22730;
  margin: 0 0 21px;
  font-weight: 600;
  font-size: 1.3753rem;
}

.tips__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 0;
  margin: 0;
}

.tips__tip {
  padding: 0.618rem 0.382rem;
  background: rgba(0, 0, 0, 0.7);
  margin-bottom: 0.382rem;
  border-bottom: solid 1px #d22730;
}

.tips__tip:last-child {
  margin: 0 0 21px;
}

.tips__tip-name {
  font-size: 17.849999999999998px;
}

.tips__tip-name_big-white-quote {
  font-size: 21px;
  font-weight: 700;
  margin: 0 0 0 3px;
}

.tips__tip-name_big-red-quote {
  font-size: 21px;
  color: #d22730;
  font-weight: 700;
  margin: 0 3px 0 0;
}

.tips__show-more-btn {
  border: 2px solid #d22730;
  font-size: 0.618rem;
  padding: 0.618rem 0.618rem;
  -webkit-transition: all .4s ease-out;
  -o-transition: all .4s ease-out;
  transition: all .4s ease-out;
  font-family: 'Rajdhani';
  text-transform: uppercase;
  color: #d22730;
  font-weight: 600;
  margin: 0 0 1.618rem;
  background: #191719;
  background-image: -webkit-linear-gradient(#d22730, #d22730);
  background-image: linear-gradient(#d22730, #d22730);
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: 0% 100%;
  line-height: 0;
  width: 100%;
  margin: 0 0 2.618rem;
  cursor: pointer;
}

.tips__show-more-btn:hover {
  background-size: 100% 100%;
  color: #e6dbdc;
  box-shadow: 0 0 6px 0 #d22730;
}

.tips__show-more-btn:active {
  -webkit-transform: translateY(2px);
  -ms-transform: translateY(2px);
  -o-transform: translateY(2px);
  transform: translateY(2px);
}

.tips__show-more-btn:focus {
  outline: none;
}

/*
 * Media Queries
 */

@media all and (min-width:681px) {
  .tips {
    padding: 0 4.236rem;
  }
}

@media all and (min-width:1024px) {
  .tips {
    padding: 0 8.9102rem;
  }
}

@media all and (min-width:1100px) {
  .tips {
    padding: 0 12.337200000000001rem;
  }
}

@media all and (min-width:1200px) {
  .tips {
    padding: 0 15.764199999999999rem;
  }

  .tips__tip-name {
    font-size: 21px;
  }

  .tips__title {
    font-size: 1.618rem;
  }

  .tips__show-more-btn {
    font-size: 21px;
  }
}

@media all and (min-width:1440px) {
  .tips {
    padding: 0 20.562rem;
  }
}

@media all and (min-width:1720px) {
  .tips {
    padding: 0 25.3598rem;
  }
}

.vote-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.vote {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-weight: 600;
}

.vote__item-up {
  margin: 0 1rem 0 0;
}

.vote__up-arrow {
  width: .8rem;
  height: .8rem;
  margin: 0 7px 0 0;
}

.vote__down-arrow {
  width: .8rem;
  height: .8rem;
  margin: 0 7px 0 0;
}

/*# sourceMappingURL=data:application/json;base64, */