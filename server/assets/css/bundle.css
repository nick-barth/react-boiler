html {
  font-family: 'Rajdhani', sans-serif;
  background-color: #191719;
  color: #e6dbdc;
  font-size: 21px;
  line-height: 140%;
  font-weight: 400;
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/Rajdhani-Light.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/Rajdhani-Regular.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 500;
  src: url("/fonts/Rajdhani-Medium.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/Rajdhani-SemiBold.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/Rajdhani-Bold.ttf");
}

body {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.layout {
  background-color: #191719;
  max-width: 100%;
  margin: auto;
  overflow-x: hidden;
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Modular Scale - 1.618 (Golden Ratio)
	 */
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.card__css-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  -ms-grid-columns: 1fr 1fr;
  grid-column-gap: 0.146rem;
  grid-row-gap: 0.146rem;
  margin: 0 0.146rem 1.618rem;
}

.card {
  position: relative;
  border: 1px solid #dddddd;
  cursor: pointer;
  overflow: hidden;
  line-height: 0;
}

.card:hover>.card__bg {
  -webkit-transform: scale(1.4);
  -ms-transform: scale(1.4);
  -o-transform: scale(1.4);
  transform: scale(1.4);
}

.card__name {
  position: absolute;
  font-weight: 600;
  font-size: 0.618rem;
  text-transform: uppercase;
  bottom: 0.382rem;
  right: 0.146rem;
  z-index: 4;
  line-height: 0;
}

.card__bg {
  max-width: 100%;
  -webkit-transition: all .4s;
  -o-transition: all .4s;
  transition: all .4s;
}

@media all and (min-width:681px) {
  .card__css-grid {
    grid-column-gap: 0.382rem;
    grid-row-gap: 0.382rem;
    margin: 0 0.618rem 2.618rem;
  }

  .card__name {
    font-size: 1.618rem;
    bottom: 21px;
    right: 0.146rem;
  }
}

@media all and (min-width:1024px) {
  .card__css-grid {
    grid-template-columns: 1fr 1fr 1fr;
    -ms-grid-columns: 1fr 1fr 1fr;
    grid-column-gap: 0.382rem;
    grid-row-gap: 0.382rem;
    margin: 0 21px 2.618rem;
  }

  .card__name {
    font-size: 1.618rem;
    bottom: 21px;
    right: 0.146rem;
  }
}

.footer {
  padding: 0.618rem;
  text-align: center;
  font-size: 0.618rem;
  line-height: 140%;
  border-top: 1px solid #d22730;
}

@media all and (min-width:681px) {
  .footer {
    padding: 21px 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .footer {
    padding: 21px 6.854rem;
  }
}

.header {
  display: table;
  text-align: center;
  width: 100%;
  padding: 2.618rem 0 1.618rem 0;
}

.header__logo-text {
  font-size: 1.618rem;
  vertical-align: middle;
  display: table-cell;
  font-weight: 500;
  line-height: 0;
}

.header__logo-emphasis {
  color: #d22730;
  font-weight: 700;
}

@media all and (min-width:681px) {
  .header {
    margin: 2.618rem 0 1.618rem 0;
  }

  .header__logo-text {
    font-size: 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .header__logo-text {
    font-size: 4.236rem;
  }
}

.login {
  position: absolute;
  z-index: 100;
  left: 50%;
  background-color: red;
}

.list {
  border: 1px solid #ffffff;
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

.list {
  border: 1px solid #ffffff;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9QZWRybyBHYXJjZXovRGVza3RvcC9wcm9qZWN0cy9yZWFjdC1ib2lsZXIvZnJvbnQvc3JjL2NvbXBvbmVudHMvYnVuZGxlLmNzcyIsInNvdXJjZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7OztBQUdEO0VBQ0M7RUFDQTs7O0FBR0Q7RUFDQztFQUNBO0VBQ0E7RUFDQTs7O0FBR0Q7Ozs7O0FBS0E7QUFDQzs7O0FBV0E7OztBQU1BOzs7QUFVQTs7O0FBTUE7OztBQU1BOzs7OztBQVNEOzs7OztBQWFBO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRDtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFBQTtFQUFBO0VBQUE7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Q7RUFDQztFQUNBO0VBQUE7RUFBQTs7O0FBR0Q7QUFDQztJQUNDO0lBQ0E7SUFDQTs7O0FBRUQ7SUFDQztJQUNBO0lBQ0E7Ozs7QUFJRjtBQUNDO0lBQ0M7SUFDQTtJQUNBO0lBQ0E7SUFDQTs7O0FBRUQ7SUFDQztJQUNBO0lBQ0E7Ozs7QUFHRjtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0FBQ0M7SUFDQzs7OztBQUlGO0FBQ0M7SUFDQzs7OztBQUlGO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7OztBQUdEO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7O0FBR0Q7RUFDQztFQUNBOzs7QUFHRDtBQUNDO0lBQ0M7OztBQUVEO0lBQ0M7Ozs7QUFJRjtBQUNDO0lBQ0M7Ozs7QUFHRjtFQUNDO0VBQ0E7RUFFQTtFQUNBOzs7QUFHRDtFQUNBOzs7QUFHQTs7Ozs7QUFLQztFQUNDO0VBQ0E7RUFDRDs7O0FBR0E7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDRDs7O0FBR0Q7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBOzs7QUFHRDtFQUNBOzs7QUN6QkEiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sIHtcclxuXHRmb250LWZhbWlseTogJ1JhamRoYW5pJywgc2Fucy1zZXJpZjtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kKTtcclxuXHRjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtcclxuXHRmb250LXNpemU6IHZhcigtLW1vZHVsYXItYmFzZSk7XHJcblx0bGluZS1oZWlnaHQ6IDE0MCU7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6XCJSYWpkaGFuaVwiO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogMzAwO1xyXG5cdHNyYzp1cmwoXCIvZm9udHMvUmFqZGhhbmktTGlnaHQudHRmXCIpO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTpcIlJhamRoYW5pXCI7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0c3JjOnVybChcIi9mb250cy9SYWpkaGFuaS1SZWd1bGFyLnR0ZlwiKTtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6XCJSYWpkaGFuaVwiO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNTAwO1xyXG5cdHNyYzp1cmwoXCIvZm9udHMvUmFqZGhhbmktTWVkaXVtLnR0ZlwiKTtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6XCJSYWpkaGFuaVwiO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNjAwO1xyXG5cdHNyYzp1cmwoXCIvZm9udHMvUmFqZGhhbmktU2VtaUJvbGQudHRmXCIpO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTpcIlJhamRoYW5pXCI7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0c3JjOnVybChcIi9mb250cy9SYWpkaGFuaS1Cb2xkLnR0ZlwiKTtcclxufVxyXG5cclxuYm9keSB7XHJcblx0bWFyZ2luOiAwO1xyXG59XHJcblxyXG5hIHtcclxuXHRjb2xvcjogaW5oZXJpdDtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi5sYXlvdXQge1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2tncm91bmQpO1xyXG5cdG1heC13aWR0aDogMTAwJTtcclxuXHRtYXJnaW46IGF1dG87XHJcblx0b3ZlcmZsb3cteDogaGlkZGVuO1xyXG59XHJcblxuLyoqKlxyXG4gKiBWYXJpYWJsZXNcclxuICogLVxyXG4gKi9cclxuXHJcbjpyb290IHtcclxuXHQvKlxyXG5cdCAqIE1vZHVsYXIgU2NhbGUgLSAxLjYxOCAoR29sZGVuIFJhdGlvKVxyXG5cdCAqL1xyXG5cdC0tbW9kdWxhci14eHM6IDAuMTQ2cmVtO1xyXG5cdC0tbW9kdWxhci14czogMC4zODJyZW07XHJcblx0LS1tb2R1bGFyLXM6IDAuNjE4cmVtO1xyXG5cdC0tbW9kdWxhci1iYXNlOiAyMXB4O1xyXG5cdC0tbW9kdWxhci1sOiAxLjYxOHJlbTtcclxuXHQtLW1vZHVsYXIteGw6IDIuNjE4cmVtO1xyXG5cdC0tbW9kdWxhci14eGw6IDQuMjM2cmVtO1xyXG5cdC0tbW9kdWxhci14eHhsOiA2Ljg1NHJlbTtcclxuXHQvKlxyXG5cdCAqIFRoZW1lXHJcblx0ICovXHJcblx0LS1iYWNrZ3JvdW5kOiAjMTkxNzE5O1xyXG5cdC0tbWFpbi1jb2xvcjogI2QyMjczMDtcclxuXHQtLXNlY29uZGFyeS1jb2xvcjogI2U2ZGJkYztcclxuXHQvKlxyXG5cdCAqIENvbG9yc1xyXG5cdCAqL1xyXG5cdC0tY29sb3Itd2hpdGU6ICNmZmZmZmY7XHJcblx0LS1jb2xvci1ncmF5LWxpZ2h0ZXN0OiAjZmNmY2ZjO1xyXG5cdC0tY29sb3ItZ3JheS1saWdodGVyOiAjZjNmM2YzO1xyXG5cdC0tY29sb3ItZ3JheS1saWdodDogI0UyRTJFMjtcclxuXHQtLWNvbG9yLWdyYXktbWVkaXVtLWxpZ2h0OiAjZGRkZGRkO1xyXG5cdC0tY29sb3ItZ3JheS1tZWRpdW06ICNlYWVhZWE7XHJcblx0LS1jb2xvci1ncmF5LWRhcms6ICM1NTU1NTU7XHJcblx0LypcclxuXHQgKiBUZXh0c1xyXG5cdCAqL1xyXG5cdC0tY29sb3ItdGV4dC1ncmFwaDogIzNlM2UzZTtcclxuXHQtLWNvbG9yLXRleHQtbGlnaHQ6ICM4Njg2ODY7XHJcblx0LS1jb2xvci10ZXh0LWRhcms6ICM0MTQxNDE7XHJcblx0LypcclxuXHQgKiBBbGVydC9TdGF0dXMgY29sb3JzXHJcblx0ICovXHJcblx0LS1jb2xvci1lcnJvcjogI0RCNDczNjtcclxuXHQtLWNvbG9yLXN1Y2Nlc3M6ICM1RkEwNTI7XHJcblx0LS1jb2xvci13YXJuaW5nOiAjREQ3RjMzO1xyXG5cdC8qXHJcblx0ICogRWFzaW5nc1xyXG5cdCAqL1xyXG5cdC0tZWFzaW5nLWlvczogY3ViaWMtYmV6aWVyKDAuMjMsIDEsIDAuMzIsIDEpO1xyXG5cdC0tZWFzaW5nLWV4cGFuZDogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMjAsIDEuMjc1KTtcclxuXHQtLWVhc2luZy1xdWFkOiBjdWJpYy1iZXppZXIoMC43NzAsIDAuMDAwLCAwLjE3NSwgMS4wMDApO1xyXG59XHJcblxyXG5cclxuLyoqKlxyXG4gKiBNZWRpYSBxdWVyaWVzXHJcbiAqIC1cclxuICovXHJcblxyXG5AY3VzdG9tLW1lZGlhIC0tdGFibGV0IGFsbCBhbmQgKG1pbi13aWR0aDo2ODFweCk7XHJcbkBjdXN0b20tbWVkaWEgLS10YWJsZXQtbGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjEwMjRweCk7XHJcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLXNtYWxsIGFsbCBhbmQgKG1pbi13aWR0aDoxMTAwcHgpO1xyXG5AY3VzdG9tLW1lZGlhIC0tZGVza3RvcC1tZWRpdW0gYWxsIGFuZCAobWluLXdpZHRoOjEyMDBweCk7XHJcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLWxhcmdlIGFsbCBhbmQgKG1pbi13aWR0aDoxNDQwcHgpO1xyXG5AY3VzdG9tLW1lZGlhIC0tZGVza3RvcC14bGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjE3MjBweCk7XHJcbkBjdXN0b20tbWVkaWEgLS1kZXNrdG9wLXh4bGFyZ2UgYWxsIGFuZCAobWluLXdpZHRoOjE5MjBweCk7XHJcblxuLmNhcmRfX2Nzcy1ncmlkIHtcclxuXHRkaXNwbGF5OiBncmlkO1xyXG5cdGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuXHQtbXMtZ3JpZC1jb2x1bW5zOiAxZnIgMWZyO1xyXG5cdGdyaWQtY29sdW1uLWdhcDogdmFyKC0tbW9kdWxhci14eHMpO1xyXG5cdGdyaWQtcm93LWdhcDogdmFyKC0tbW9kdWxhci14eHMpO1xyXG5cdG1hcmdpbjogMCB2YXIoLS1tb2R1bGFyLXh4cykgdmFyKC0tbW9kdWxhci1sKTtcclxufVxyXG5cclxuLmNhcmQge1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1jb2xvci1ncmF5LW1lZGl1bS1saWdodCk7XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcblx0bGluZS1oZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi5jYXJkOmhvdmVyPi5jYXJkX19iZyB7XHJcblx0dHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xyXG59XHJcblxyXG4uY2FyZF9fbmFtZSB7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdGZvbnQtd2VpZ2h0OiA2MDA7XHJcblx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLXMpO1xyXG5cdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0Ym90dG9tOiB2YXIoLS1tb2R1bGFyLXhzKTtcclxuXHRyaWdodDogdmFyKC0tbW9kdWxhci14eHMpO1xyXG5cdHotaW5kZXg6IDQ7XHJcblx0bGluZS1oZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi5jYXJkX19iZyB7XHJcblx0bWF4LXdpZHRoOiAxMDAlO1xyXG5cdHRyYW5zaXRpb246IGFsbCAuNHM7XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQpIHtcclxuXHQuY2FyZF9fY3NzLWdyaWQge1xyXG5cdFx0Z3JpZC1jb2x1bW4tZ2FwOiB2YXIoLS1tb2R1bGFyLXhzKTtcclxuXHRcdGdyaWQtcm93LWdhcDogdmFyKC0tbW9kdWxhci14cyk7XHJcblx0XHRtYXJnaW46IDAgdmFyKC0tbW9kdWxhci1zKSB2YXIoLS1tb2R1bGFyLXhsKTtcclxuXHR9XHJcblx0LmNhcmRfX25hbWUge1xyXG5cdFx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLWwpO1xyXG5cdFx0Ym90dG9tOiB2YXIoLS1tb2R1bGFyLWJhc2UpO1xyXG5cdFx0cmlnaHQ6IHZhcigtLW1vZHVsYXIteHhzKTtcclxuXHR9XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQtbGFyZ2UpIHtcclxuXHQuY2FyZF9fY3NzLWdyaWQge1xyXG5cdFx0Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcclxuXHRcdC1tcy1ncmlkLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG5cdFx0Z3JpZC1jb2x1bW4tZ2FwOiB2YXIoLS1tb2R1bGFyLXhzKTtcclxuXHRcdGdyaWQtcm93LWdhcDogdmFyKC0tbW9kdWxhci14cyk7XHJcblx0XHRtYXJnaW46IDAgdmFyKC0tbW9kdWxhci1iYXNlKSB2YXIoLS1tb2R1bGFyLXhsKTtcclxuXHR9XHJcblx0LmNhcmRfX25hbWUge1xyXG5cdFx0Zm9udC1zaXplOiB2YXIoLS1tb2R1bGFyLWwpO1xyXG5cdFx0Ym90dG9tOiB2YXIoLS1tb2R1bGFyLWJhc2UpO1xyXG5cdFx0cmlnaHQ6IHZhcigtLW1vZHVsYXIteHhzKTtcclxuXHR9XHJcbn1cbi5mb290ZXIge1xyXG5cdHBhZGRpbmc6IHZhcigtLW1vZHVsYXItcyk7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci1zKTtcclxuXHRsaW5lLWhlaWdodDogMTQwJTtcclxuXHRib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tbWFpbi1jb2xvcik7XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQpIHtcclxuXHQuZm9vdGVyIHtcclxuXHRcdHBhZGRpbmc6IHZhcigtLW1vZHVsYXItYmFzZSkgdmFyKC0tbW9kdWxhci14bCk7XHJcblx0fVxyXG59XHJcblxyXG5AbWVkaWEgKC0tdGFibGV0LWxhcmdlKSB7XHJcblx0LmZvb3RlciB7XHJcblx0XHRwYWRkaW5nOiB2YXIoLS1tb2R1bGFyLWJhc2UpIHZhcigtLW1vZHVsYXIteHh4bCk7XHJcblx0fVxyXG59XHJcblxuLmhlYWRlciB7XHJcblx0ZGlzcGxheTogdGFibGU7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdHBhZGRpbmc6IHZhcigtLW1vZHVsYXIteGwpIDAgdmFyKC0tbW9kdWxhci1sKSAwO1xyXG59XHJcblxyXG4uaGVhZGVyX19sb2dvLXRleHQge1xyXG5cdGZvbnQtc2l6ZTogdmFyKC0tbW9kdWxhci1sKTtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG5cdGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcblx0Zm9udC13ZWlnaHQ6IDUwMDtcclxuXHRsaW5lLWhlaWdodDogMDtcclxufVxyXG5cclxuLmhlYWRlcl9fbG9nby1lbXBoYXNpcyB7XHJcblx0Y29sb3I6IHZhcigtLW1haW4tY29sb3IpO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn1cclxuXHJcbkBtZWRpYSAoLS10YWJsZXQpIHtcclxuXHQuaGVhZGVyIHtcclxuXHRcdG1hcmdpbjogdmFyKC0tbW9kdWxhci14bCkgMCB2YXIoLS1tb2R1bGFyLWwpIDA7XHJcblx0fVxyXG5cdC5oZWFkZXJfX2xvZ28tdGV4dCB7XHJcblx0XHRmb250LXNpemU6IHZhcigtLW1vZHVsYXIteGwpO1xyXG5cdH1cclxufVxyXG5cclxuQG1lZGlhICgtLXRhYmxldC1sYXJnZSkge1xyXG5cdC5oZWFkZXJfX2xvZ28tdGV4dCB7XHJcblx0XHRmb250LXNpemU6IHZhcigtLW1vZHVsYXIteHhsKTtcclxuXHR9XHJcbn1cbi5sb2dpbiB7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHotaW5kZXg6IDEwMDtcclxuXHJcblx0bGVmdDogNTAlO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG5cbi5saXN0IHtcclxuYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3Itd2hpdGUpO1xyXG59XHJcblxuLypcclxuICogU2VhcmNoYmFyXHJcbiAqID09PT09PT09PVxyXG4gKi9cclxuXHJcbiAuc2VhcmNoYmFyIHtcclxuIFx0aGVpZ2h0OjFyZW07XHJcbiBcdHRleHQtYWxpZ246Y2VudGVyO1xyXG5cdHBhZGRpbmctYm90dG9tOjVyZW07XHJcbiB9XHJcblxyXG4gaW5wdXQge1xyXG4gXHRvdXRsaW5lOiBub25lO1xyXG4gXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuIFx0Ym9yZGVyOiBub25lO1xyXG4gXHRjb2xvcjojRjhGOEZGO1xyXG4gXHR0ZXh0LXNoYWRvdzogMHB4IDBweCAwcHggI0Y4RjhGRjtcclxuIFx0LXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6IHRyYW5zcGFyZW50O1xyXG5cdG9wYWNpdHk6Ljc7XHJcbiB9XHJcblxyXG4uc2VhcmNoYmFyX19iYXIge1xyXG5cdG1hcmdpbjphdXRvO1xyXG5cdHdpZHRoOjIwcmVtO1xyXG5cdGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNGOEY4RkY7XHJcblx0cGFkZGluZzouNXJlbTtcclxuXHRmb250LXNpemU6MS4zcmVtO1xyXG59XHJcblxuLmxpc3Qge1xyXG5ib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1jb2xvci13aGl0ZSk7XHJcbn1cclxuIiwiaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiAnUmFqZGhhbmknLCBzYW5zLXNlcmlmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTkxNzE5O1xuICBjb2xvcjogI2U2ZGJkYztcbiAgZm9udC1zaXplOiAyMXB4O1xuICBsaW5lLWhlaWdodDogMTQwJTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJhamRoYW5pXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgc3JjOiB1cmwoXCIvZm9udHMvUmFqZGhhbmktTGlnaHQudHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUmFqZGhhbmlcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBzcmM6IHVybChcIi9mb250cy9SYWpkaGFuaS1SZWd1bGFyLnR0ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJhamRoYW5pXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgc3JjOiB1cmwoXCIvZm9udHMvUmFqZGhhbmktTWVkaXVtLnR0ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJhamRoYW5pXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgc3JjOiB1cmwoXCIvZm9udHMvUmFqZGhhbmktU2VtaUJvbGQudHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUmFqZGhhbmlcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBzcmM6IHVybChcIi9mb250cy9SYWpkaGFuaS1Cb2xkLnR0ZlwiKTtcbn1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5sYXlvdXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTkxNzE5O1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogYXV0bztcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG4vKioqXHJcbiAqIFZhcmlhYmxlc1xyXG4gKiAtXHJcbiAqL1xuXG46cm9vdCB7XG4gIC8qXHJcblx0ICogTW9kdWxhciBTY2FsZSAtIDEuNjE4IChHb2xkZW4gUmF0aW8pXHJcblx0ICovXG4gIC8qXHJcblx0ICogVGhlbWVcclxuXHQgKi9cbiAgLypcclxuXHQgKiBDb2xvcnNcclxuXHQgKi9cbiAgLypcclxuXHQgKiBUZXh0c1xyXG5cdCAqL1xuICAvKlxyXG5cdCAqIEFsZXJ0L1N0YXR1cyBjb2xvcnNcclxuXHQgKi9cbiAgLypcclxuXHQgKiBFYXNpbmdzXHJcblx0ICovXG59XG5cbi8qKipcclxuICogTWVkaWEgcXVlcmllc1xyXG4gKiAtXHJcbiAqL1xuXG4uY2FyZF9fY3NzLWdyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIC1tcy1ncmlkLWNvbHVtbnM6IDFmciAxZnI7XG4gIGdyaWQtY29sdW1uLWdhcDogMC4xNDZyZW07XG4gIGdyaWQtcm93LWdhcDogMC4xNDZyZW07XG4gIG1hcmdpbjogMCAwLjE0NnJlbSAxLjYxOHJlbTtcbn1cblxuLmNhcmQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbGluZS1oZWlnaHQ6IDA7XG59XG5cbi5jYXJkOmhvdmVyPi5jYXJkX19iZyB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xuICAgICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMS40KTtcbiAgICAgICAtby10cmFuc2Zvcm06IHNjYWxlKDEuNCk7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjQpO1xufVxuXG4uY2FyZF9fbmFtZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAwLjYxOHJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYm90dG9tOiAwLjM4MnJlbTtcbiAgcmlnaHQ6IDAuMTQ2cmVtO1xuICB6LWluZGV4OiA0O1xuICBsaW5lLWhlaWdodDogMDtcbn1cblxuLmNhcmRfX2JnIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuNHM7XG4gICAgICAgLW8tdHJhbnNpdGlvbjogYWxsIC40cztcbiAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjRzO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOjY4MXB4KSB7XG4gIC5jYXJkX19jc3MtZ3JpZCB7XG4gICAgZ3JpZC1jb2x1bW4tZ2FwOiAwLjM4MnJlbTtcbiAgICBncmlkLXJvdy1nYXA6IDAuMzgycmVtO1xuICAgIG1hcmdpbjogMCAwLjYxOHJlbSAyLjYxOHJlbTtcbiAgfVxuXG4gIC5jYXJkX19uYW1lIHtcbiAgICBmb250LXNpemU6IDEuNjE4cmVtO1xuICAgIGJvdHRvbTogMjFweDtcbiAgICByaWdodDogMC4xNDZyZW07XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDoxMDI0cHgpIHtcbiAgLmNhcmRfX2Nzcy1ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgIGdyaWQtY29sdW1uLWdhcDogMC4zODJyZW07XG4gICAgZ3JpZC1yb3ctZ2FwOiAwLjM4MnJlbTtcbiAgICBtYXJnaW46IDAgMjFweCAyLjYxOHJlbTtcbiAgfVxuXG4gIC5jYXJkX19uYW1lIHtcbiAgICBmb250LXNpemU6IDEuNjE4cmVtO1xuICAgIGJvdHRvbTogMjFweDtcbiAgICByaWdodDogMC4xNDZyZW07XG4gIH1cbn1cblxuLmZvb3RlciB7XG4gIHBhZGRpbmc6IDAuNjE4cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMC42MThyZW07XG4gIGxpbmUtaGVpZ2h0OiAxNDAlO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2QyMjczMDtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDo2ODFweCkge1xuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAyMXB4IDIuNjE4cmVtO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6MTAyNHB4KSB7XG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmc6IDIxcHggNi44NTRyZW07XG4gIH1cbn1cblxuLmhlYWRlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAyLjYxOHJlbSAwIDEuNjE4cmVtIDA7XG59XG5cbi5oZWFkZXJfX2xvZ28tdGV4dCB7XG4gIGZvbnQtc2l6ZTogMS42MThyZW07XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAwO1xufVxuXG4uaGVhZGVyX19sb2dvLWVtcGhhc2lzIHtcbiAgY29sb3I6ICNkMjI3MzA7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6NjgxcHgpIHtcbiAgLmhlYWRlciB7XG4gICAgbWFyZ2luOiAyLjYxOHJlbSAwIDEuNjE4cmVtIDA7XG4gIH1cblxuICAuaGVhZGVyX19sb2dvLXRleHQge1xuICAgIGZvbnQtc2l6ZTogMi42MThyZW07XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDoxMDI0cHgpIHtcbiAgLmhlYWRlcl9fbG9nby10ZXh0IHtcbiAgICBmb250LXNpemU6IDQuMjM2cmVtO1xuICB9XG59XG5cbi5sb2dpbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTAwO1xuICBsZWZ0OiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbn1cblxuLmxpc3Qge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmO1xufVxuXG4vKlxyXG4gKiBTZWFyY2hiYXJcclxuICogPT09PT09PT09XHJcbiAqL1xuXG4uc2VhcmNoYmFyIHtcbiAgaGVpZ2h0OiAxcmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmctYm90dG9tOiA1cmVtO1xufVxuXG5pbnB1dCB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiAjRjhGOEZGO1xuICB0ZXh0LXNoYWRvdzogMHB4IDBweCAwcHggI0Y4RjhGRjtcbiAgLXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6IHRyYW5zcGFyZW50O1xuICBvcGFjaXR5OiAuNztcbn1cblxuLnNlYXJjaGJhcl9fYmFyIHtcbiAgbWFyZ2luOiBhdXRvO1xuICB3aWR0aDogMjByZW07XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRjhGOEZGO1xuICBwYWRkaW5nOiAuNXJlbTtcbiAgZm9udC1zaXplOiAxLjNyZW07XG59XG5cbi5saXN0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZjtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTlWYzJWeWN5OVFaV1J5YnlCSFlYSmpaWG92UkdWemEzUnZjQzl3Y205cVpXTjBjeTl5WldGamRDMWliMmxzWlhJdlpuSnZiblF2YzNKakwyTnZiWEJ2Ym1WdWRITXZZblZ1Wkd4bExtTnpjeUlzSW1KMWJtUnNaUzVqYzNNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdSVUZEUXl4dlEwRkJRVHRGUVVOQkxEQkNRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4cFFrRkJRVHREUTBOQk96dEJSRVZFTzBWQlEwTXNkMEpCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2MwTkJRVUU3UTBORFFUczdRVVJGUkR0RlFVTkRMSGRDUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxIZERRVUZCTzBORFEwRTdPMEZFUlVRN1JVRkRReXgzUWtGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeDFRMEZCUVR0RFEwTkJPenRCUkVWRU8wVkJRME1zZDBKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNlVU5CUVVFN1EwTkRRVHM3UVVSRlJEdEZRVU5ETEhkQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMSEZEUVVGQk8wTkRRMEU3TzBGRVJVUTdSVUZEUXl4VlFVRkJPME5EUTBFN08wRkVSVVE3UlVGRFF5eGxRVUZCTzBWQlEwRXNjMEpCUVVFN1EwTkRRVHM3UVVSRlJEdEZRVU5ETERCQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeGhRVUZCTzBWQlEwRXNiVUpCUVVFN1EwTkRRVHM3UVVSRlJEczdPMGREUjBjN08wRkVSVWc3UlVGRFF6czdTVU5GUnp0RlJGTklPenRKUTA1SE8wVkVXVWc3TzBsRFZFYzdSVVJ0UWtnN08wbERhRUpITzBWRWMwSklPenRKUTI1Q1J6dEZSSGxDU0RzN1NVTjBRa2M3UTBGRFNEczdRVVE0UWtRN096dEhRM3BDUnpzN1FVUnpRMGc3UlVGRFF5eGpRVUZCTzBWQlEwRXNLMEpCUVVFN1JVRkRRU3d3UWtGQlFUdEZRVU5CTERCQ1FVRkJPMFZCUTBFc2RVSkJRVUU3UlVGRFFTdzBRa0ZCUVR0RFEyNURRVHM3UVVSelEwUTdSVUZEUXl4dFFrRkJRVHRGUVVOQkxEQkNRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEdWQlFVRTdRME51UTBFN08wRkVjME5FTzBWQlEwTXNPRUpCUVVFN1RVRkJRU3d3UWtGQlFUdFBRVUZCTEhsQ1FVRkJPMVZCUVVFc2MwSkJRVUU3UTBOdVEwRTdPMEZFYzBORU8wVkJRME1zYlVKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNNRUpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc1YwRkJRVHRGUVVOQkxHVkJRVUU3UTBOdVEwRTdPMEZFYzBORU8wVkJRME1zWjBKQlFVRTdSVUZEUVN3MFFrRkJRVHRQUVVGQkxIVkNRVUZCTzFWQlFVRXNiMEpCUVVFN1EwTnVRMEU3TzBGRWMwTkVPMFZCUTBNN1NVRkRReXd3UWtGQlFUdEpRVU5CTEhWQ1FVRkJPMGxCUTBFc05FSkJRVUU3UjBOdVEwTTdPMFZFY1VOR08wbEJRME1zYjBKQlFVRTdTVUZEUVN4aFFVRkJPMGxCUTBFc1owSkJRVUU3UjBOc1EwTTdRMEZEUmpzN1FVUnhRMFE3UlVGRFF6dEpRVU5ETEcxRFFVRkJPMGxCUTBFc09FSkJRVUU3U1VGRFFTd3dRa0ZCUVR0SlFVTkJMSFZDUVVGQk8wbEJRMEVzZDBKQlFVRTdSME5zUTBNN08wVkViME5HTzBsQlEwTXNiMEpCUVVFN1NVRkRRU3hoUVVGQk8wbEJRMEVzWjBKQlFVRTdSME5xUTBNN1EwRkRSanM3UVVSdFEwUTdSVUZEUXl4clFrRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTERoQ1FVRkJPME5EYUVOQk96dEJSRzFEUkR0RlFVTkRPMGxCUTBNc2RVSkJRVUU3UjBOb1EwTTdRMEZEUmpzN1FVUnRRMFE3UlVGRFF6dEpRVU5ETEhWQ1FVRkJPMGREYUVORE8wTkJRMFk3TzBGRWJVTkVPMFZCUTBNc1pVRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNXVUZCUVR0RlFVTkJMQ3RDUVVGQk8wTkRhRU5CT3p0QlJHMURSRHRGUVVORExHOUNRVUZCTzBWQlEwRXNkVUpCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc1pVRkJRVHREUTJoRFFUczdRVVJ0UTBRN1JVRkRReXhsUVVGQk8wVkJRMEVzYVVKQlFVRTdRME5vUTBFN08wRkViVU5FTzBWQlEwTTdTVUZEUXl3NFFrRkJRVHRIUTJoRFF6czdSVVJyUTBZN1NVRkRReXh2UWtGQlFUdEhReTlDUXp0RFFVTkdPenRCUkd0RFJEdEZRVU5ETzBsQlEwTXNiMEpCUVVFN1IwTXZRa003UTBGRFJqczdRVVJwUTBRN1JVRkRReXh0UWtGQlFUdEZRVU5CTEdGQlFVRTdSVUZGUVN4VlFVRkJPMFZCUTBFc2MwSkJRVUU3UTBNdlFrRTdPMEZFYTBORU8wVkJRMEVzTUVKQlFVRTdRME12UWtNN08wRkVhME5FT3pzN1IwTTNRa2M3TzBGRWEwTkdPMFZCUTBNc1lVRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwUXNjVUpCUVVFN1EwTXZRa0U3TzBGRWEwTkJPMFZCUTBNc1kwRkJRVHRGUVVOQkxEaENRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hwUTBGQlFUdEZRVU5CTEhGRFFVRkJPMFZCUTBRc1dVRkJRVHREUXk5Q1FUczdRVVJyUTBRN1JVRkRReXhoUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEdsRFFVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxHdENRVUZCTzBOREwwSkJPenRCUkd0RFJEdEZRVU5CTERCQ1FVRkJPME5ETDBKRElpd2labWxzWlNJNkltSjFibVJzWlM1amMzTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpvZEcxc0lIdGNjbHh1WEhSbWIyNTBMV1poYldsc2VUb2dKMUpoYW1Sb1lXNXBKeXdnYzJGdWN5MXpaWEpwWmp0Y2NseHVYSFJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIyWVhJb0xTMWlZV05yWjNKdmRXNWtLVHRjY2x4dVhIUmpiMnh2Y2pvZ2RtRnlLQzB0YzJWamIyNWtZWEo1TFdOdmJHOXlLVHRjY2x4dVhIUm1iMjUwTFhOcGVtVTZJSFpoY2lndExXMXZaSFZzWVhJdFltRnpaU2s3WEhKY2JseDBiR2x1WlMxb1pXbG5hSFE2SURFME1DVTdYSEpjYmx4MFptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2NseHVmVnh5WEc1Y2NseHVRR1p2Ym5RdFptRmpaU0I3WEhKY2JseDBabTl1ZEMxbVlXMXBiSGs2WENKU1lXcGthR0Z1YVZ3aU8xeHlYRzVjZEdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2NseHVYSFJtYjI1MExYZGxhV2RvZERvZ016QXdPMXh5WEc1Y2RITnlZenAxY213b1hDSXZabTl1ZEhNdlVtRnFaR2hoYm1rdFRHbG5hSFF1ZEhSbVhDSXBPMXh5WEc1OVhISmNibHh5WEc1QVptOXVkQzFtWVdObElIdGNjbHh1WEhSbWIyNTBMV1poYldsc2VUcGNJbEpoYW1Sb1lXNXBYQ0k3WEhKY2JseDBabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh5WEc1Y2RHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hISmNibHgwYzNKak9uVnliQ2hjSWk5bWIyNTBjeTlTWVdwa2FHRnVhUzFTWldkMWJHRnlMblIwWmx3aUtUdGNjbHh1ZlZ4eVhHNWNjbHh1UUdadmJuUXRabUZqWlNCN1hISmNibHgwWm05dWRDMW1ZVzFwYkhrNlhDSlNZV3BrYUdGdWFWd2lPMXh5WEc1Y2RHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNjbHh1WEhSbWIyNTBMWGRsYVdkb2REb2dOVEF3TzF4eVhHNWNkSE55WXpwMWNtd29YQ0l2Wm05dWRITXZVbUZxWkdoaGJta3RUV1ZrYVhWdExuUjBabHdpS1R0Y2NseHVmVnh5WEc1Y2NseHVRR1p2Ym5RdFptRmpaU0I3WEhKY2JseDBabTl1ZEMxbVlXMXBiSGs2WENKU1lXcGthR0Z1YVZ3aU8xeHlYRzVjZEdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2NseHVYSFJtYjI1MExYZGxhV2RvZERvZ05qQXdPMXh5WEc1Y2RITnlZenAxY213b1hDSXZabTl1ZEhNdlVtRnFaR2hoYm1rdFUyVnRhVUp2YkdRdWRIUm1YQ0lwTzF4eVhHNTlYSEpjYmx4eVhHNUFabTl1ZEMxbVlXTmxJSHRjY2x4dVhIUm1iMjUwTFdaaGJXbHNlVHBjSWxKaGFtUm9ZVzVwWENJN1hISmNibHgwWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4eVhHNWNkR1p2Ym5RdGQyVnBaMmgwT2lBM01EQTdYSEpjYmx4MGMzSmpPblZ5YkNoY0lpOW1iMjUwY3k5U1lXcGthR0Z1YVMxQ2IyeGtMblIwWmx3aUtUdGNjbHh1ZlZ4eVhHNWNjbHh1WW05a2VTQjdYSEpjYmx4MGJXRnlaMmx1T2lBd08xeHlYRzU5WEhKY2JseHlYRzVoSUh0Y2NseHVYSFJqYjJ4dmNqb2dhVzVvWlhKcGREdGNjbHh1WEhSMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYSEpjYm4xY2NseHVYSEpjYmk1c1lYbHZkWFFnZTF4eVhHNWNkR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFpoY2lndExXSmhZMnRuY205MWJtUXBPMXh5WEc1Y2RHMWhlQzEzYVdSMGFEb2dNVEF3SlR0Y2NseHVYSFJ0WVhKbmFXNDZJR0YxZEc4N1hISmNibHgwYjNabGNtWnNiM2N0ZURvZ2FHbGtaR1Z1TzF4eVhHNTlYSEpjYmx4dUx5b3FLbHh5WEc0Z0tpQldZWEpwWVdKc1pYTmNjbHh1SUNvZ0xWeHlYRzRnS2k5Y2NseHVYSEpjYmpweWIyOTBJSHRjY2x4dVhIUXZLbHh5WEc1Y2RDQXFJRTF2WkhWc1lYSWdVMk5oYkdVZ0xTQXhMall4T0NBb1IyOXNaR1Z1SUZKaGRHbHZLVnh5WEc1Y2RDQXFMMXh5WEc1Y2RDMHRiVzlrZFd4aGNpMTRlSE02SURBdU1UUTJjbVZ0TzF4eVhHNWNkQzB0Ylc5a2RXeGhjaTE0Y3pvZ01DNHpPREp5WlcwN1hISmNibHgwTFMxdGIyUjFiR0Z5TFhNNklEQXVOakU0Y21WdE8xeHlYRzVjZEMwdGJXOWtkV3hoY2kxaVlYTmxPaUF5TVhCNE8xeHlYRzVjZEMwdGJXOWtkV3hoY2kxc09pQXhMall4T0hKbGJUdGNjbHh1WEhRdExXMXZaSFZzWVhJdGVHdzZJREl1TmpFNGNtVnRPMXh5WEc1Y2RDMHRiVzlrZFd4aGNpMTRlR3c2SURRdU1qTTJjbVZ0TzF4eVhHNWNkQzB0Ylc5a2RXeGhjaTE0ZUhoc09pQTJMamcxTkhKbGJUdGNjbHh1WEhRdktseHlYRzVjZENBcUlGUm9aVzFsWEhKY2JseDBJQ292WEhKY2JseDBMUzFpWVdOclozSnZkVzVrT2lBak1Ua3hOekU1TzF4eVhHNWNkQzB0YldGcGJpMWpiMnh2Y2pvZ0kyUXlNamN6TUR0Y2NseHVYSFF0TFhObFkyOXVaR0Z5ZVMxamIyeHZjam9nSTJVMlpHSmtZenRjY2x4dVhIUXZLbHh5WEc1Y2RDQXFJRU52Ykc5eWMxeHlYRzVjZENBcUwxeHlYRzVjZEMwdFkyOXNiM0l0ZDJocGRHVTZJQ05tWm1abVptWTdYSEpjYmx4MExTMWpiMnh2Y2kxbmNtRjVMV3hwWjJoMFpYTjBPaUFqWm1ObVkyWmpPMXh5WEc1Y2RDMHRZMjlzYjNJdFozSmhlUzFzYVdkb2RHVnlPaUFqWmpObU0yWXpPMXh5WEc1Y2RDMHRZMjlzYjNJdFozSmhlUzFzYVdkb2REb2dJMFV5UlRKRk1qdGNjbHh1WEhRdExXTnZiRzl5TFdkeVlYa3RiV1ZrYVhWdExXeHBaMmgwT2lBalpHUmtaR1JrTzF4eVhHNWNkQzB0WTI5c2IzSXRaM0poZVMxdFpXUnBkVzA2SUNObFlXVmhaV0U3WEhKY2JseDBMUzFqYjJ4dmNpMW5jbUY1TFdSaGNtczZJQ00xTlRVMU5UVTdYSEpjYmx4MEx5cGNjbHh1WEhRZ0tpQlVaWGgwYzF4eVhHNWNkQ0FxTDF4eVhHNWNkQzB0WTI5c2IzSXRkR1Y0ZEMxbmNtRndhRG9nSXpObE0yVXpaVHRjY2x4dVhIUXRMV052Ykc5eUxYUmxlSFF0YkdsbmFIUTZJQ000TmpnMk9EWTdYSEpjYmx4MExTMWpiMnh2Y2kxMFpYaDBMV1JoY21zNklDTTBNVFF4TkRFN1hISmNibHgwTHlwY2NseHVYSFFnS2lCQmJHVnlkQzlUZEdGMGRYTWdZMjlzYjNKelhISmNibHgwSUNvdlhISmNibHgwTFMxamIyeHZjaTFsY25KdmNqb2dJMFJDTkRjek5qdGNjbHh1WEhRdExXTnZiRzl5TFhOMVkyTmxjM002SUNNMVJrRXdOVEk3WEhKY2JseDBMUzFqYjJ4dmNpMTNZWEp1YVc1bk9pQWpSRVEzUmpNek8xeHlYRzVjZEM4cVhISmNibHgwSUNvZ1JXRnphVzVuYzF4eVhHNWNkQ0FxTDF4eVhHNWNkQzB0WldGemFXNW5MV2x2Y3pvZ1kzVmlhV010WW1WNmFXVnlLREF1TWpNc0lERXNJREF1TXpJc0lERXBPMXh5WEc1Y2RDMHRaV0Z6YVc1bkxXVjRjR0Z1WkRvZ1kzVmlhV010WW1WNmFXVnlLREF1TVRjMUxDQXdMamc0TlN3Z01DNHpNakFzSURFdU1qYzFLVHRjY2x4dVhIUXRMV1ZoYzJsdVp5MXhkV0ZrT2lCamRXSnBZeTFpWlhwcFpYSW9NQzQzTnpBc0lEQXVNREF3TENBd0xqRTNOU3dnTVM0d01EQXBPMXh5WEc1OVhISmNibHh5WEc1Y2NseHVMeW9xS2x4eVhHNGdLaUJOWldScFlTQnhkV1Z5YVdWelhISmNiaUFxSUMxY2NseHVJQ292WEhKY2JseHlYRzVBWTNWemRHOXRMVzFsWkdsaElDMHRkR0ZpYkdWMElHRnNiQ0JoYm1RZ0tHMXBiaTEzYVdSMGFEbzJPREZ3ZUNrN1hISmNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMTBZV0pzWlhRdGJHRnlaMlVnWVd4c0lHRnVaQ0FvYldsdUxYZHBaSFJvT2pFd01qUndlQ2s3WEhKY2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxa1pYTnJkRzl3TFhOdFlXeHNJR0ZzYkNCaGJtUWdLRzFwYmkxM2FXUjBhRG94TVRBd2NIZ3BPMXh5WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0WkdWemEzUnZjQzF0WldScGRXMGdZV3hzSUdGdVpDQW9iV2x1TFhkcFpIUm9PakV5TURCd2VDazdYSEpjYmtCamRYTjBiMjB0YldWa2FXRWdMUzFrWlhOcmRHOXdMV3hoY21kbElHRnNiQ0JoYm1RZ0tHMXBiaTEzYVdSMGFEb3hORFF3Y0hncE8xeHlYRzVBWTNWemRHOXRMVzFsWkdsaElDMHRaR1Z6YTNSdmNDMTRiR0Z5WjJVZ1lXeHNJR0Z1WkNBb2JXbHVMWGRwWkhSb09qRTNNakJ3ZUNrN1hISmNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMWtaWE5yZEc5d0xYaDRiR0Z5WjJVZ1lXeHNJR0Z1WkNBb2JXbHVMWGRwWkhSb09qRTVNakJ3ZUNrN1hISmNibHh1TG1OaGNtUmZYMk56Y3kxbmNtbGtJSHRjY2x4dVhIUmthWE53YkdGNU9pQm5jbWxrTzF4eVhHNWNkR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ01XWnlJREZtY2p0Y2NseHVYSFF0YlhNdFozSnBaQzFqYjJ4MWJXNXpPaUF4Wm5JZ01XWnlPMXh5WEc1Y2RHZHlhV1F0WTI5c2RXMXVMV2RoY0RvZ2RtRnlLQzB0Ylc5a2RXeGhjaTE0ZUhNcE8xeHlYRzVjZEdkeWFXUXRjbTkzTFdkaGNEb2dkbUZ5S0MwdGJXOWtkV3hoY2kxNGVITXBPMXh5WEc1Y2RHMWhjbWRwYmpvZ01DQjJZWElvTFMxdGIyUjFiR0Z5TFhoNGN5a2dkbUZ5S0MwdGJXOWtkV3hoY2kxc0tUdGNjbHh1ZlZ4eVhHNWNjbHh1TG1OaGNtUWdlMXh5WEc1Y2RIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNjbHh1WEhSaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNCMllYSW9MUzFqYjJ4dmNpMW5jbUY1TFcxbFpHbDFiUzFzYVdkb2RDazdYSEpjYmx4MFkzVnljMjl5T2lCd2IybHVkR1Z5TzF4eVhHNWNkRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYSEpjYmx4MGJHbHVaUzFvWldsbmFIUTZJREE3WEhKY2JuMWNjbHh1WEhKY2JpNWpZWEprT21odmRtVnlQaTVqWVhKa1gxOWlaeUI3WEhKY2JseDBkSEpoYm5ObWIzSnRPaUJ6WTJGc1pTZ3hMalFwTzF4eVhHNTlYSEpjYmx4eVhHNHVZMkZ5WkY5ZmJtRnRaU0I3WEhKY2JseDBjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh5WEc1Y2RHWnZiblF0ZDJWcFoyaDBPaUEyTURBN1hISmNibHgwWm05dWRDMXphWHBsT2lCMllYSW9MUzF0YjJSMWJHRnlMWE1wTzF4eVhHNWNkSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYSEpjYmx4MFltOTBkRzl0T2lCMllYSW9MUzF0YjJSMWJHRnlMWGh6S1R0Y2NseHVYSFJ5YVdkb2REb2dkbUZ5S0MwdGJXOWtkV3hoY2kxNGVITXBPMXh5WEc1Y2RIb3RhVzVrWlhnNklEUTdYSEpjYmx4MGJHbHVaUzFvWldsbmFIUTZJREE3WEhKY2JuMWNjbHh1WEhKY2JpNWpZWEprWDE5aVp5QjdYSEpjYmx4MGJXRjRMWGRwWkhSb09pQXhNREFsTzF4eVhHNWNkSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXVOSE03WEhKY2JuMWNjbHh1WEhKY2JrQnRaV1JwWVNBb0xTMTBZV0pzWlhRcElIdGNjbHh1WEhRdVkyRnlaRjlmWTNOekxXZHlhV1FnZTF4eVhHNWNkRngwWjNKcFpDMWpiMngxYlc0dFoyRndPaUIyWVhJb0xTMXRiMlIxYkdGeUxYaHpLVHRjY2x4dVhIUmNkR2R5YVdRdGNtOTNMV2RoY0RvZ2RtRnlLQzB0Ylc5a2RXeGhjaTE0Y3lrN1hISmNibHgwWEhSdFlYSm5hVzQ2SURBZ2RtRnlLQzB0Ylc5a2RXeGhjaTF6S1NCMllYSW9MUzF0YjJSMWJHRnlMWGhzS1R0Y2NseHVYSFI5WEhKY2JseDBMbU5oY21SZlgyNWhiV1VnZTF4eVhHNWNkRngwWm05dWRDMXphWHBsT2lCMllYSW9MUzF0YjJSMWJHRnlMV3dwTzF4eVhHNWNkRngwWW05MGRHOXRPaUIyWVhJb0xTMXRiMlIxYkdGeUxXSmhjMlVwTzF4eVhHNWNkRngwY21sbmFIUTZJSFpoY2lndExXMXZaSFZzWVhJdGVIaHpLVHRjY2x4dVhIUjlYSEpjYm4xY2NseHVYSEpjYmtCdFpXUnBZU0FvTFMxMFlXSnNaWFF0YkdGeVoyVXBJSHRjY2x4dVhIUXVZMkZ5WkY5ZlkzTnpMV2R5YVdRZ2UxeHlYRzVjZEZ4MFozSnBaQzEwWlcxd2JHRjBaUzFqYjJ4MWJXNXpPaUF4Wm5JZ01XWnlJREZtY2p0Y2NseHVYSFJjZEMxdGN5MW5jbWxrTFdOdmJIVnRibk02SURGbWNpQXhabklnTVdaeU8xeHlYRzVjZEZ4MFozSnBaQzFqYjJ4MWJXNHRaMkZ3T2lCMllYSW9MUzF0YjJSMWJHRnlMWGh6S1R0Y2NseHVYSFJjZEdkeWFXUXRjbTkzTFdkaGNEb2dkbUZ5S0MwdGJXOWtkV3hoY2kxNGN5azdYSEpjYmx4MFhIUnRZWEpuYVc0NklEQWdkbUZ5S0MwdGJXOWtkV3hoY2kxaVlYTmxLU0IyWVhJb0xTMXRiMlIxYkdGeUxYaHNLVHRjY2x4dVhIUjlYSEpjYmx4MExtTmhjbVJmWDI1aGJXVWdlMXh5WEc1Y2RGeDBabTl1ZEMxemFYcGxPaUIyWVhJb0xTMXRiMlIxYkdGeUxXd3BPMXh5WEc1Y2RGeDBZbTkwZEc5dE9pQjJZWElvTFMxdGIyUjFiR0Z5TFdKaGMyVXBPMXh5WEc1Y2RGeDBjbWxuYUhRNklIWmhjaWd0TFcxdlpIVnNZWEl0ZUhoektUdGNjbHh1WEhSOVhISmNibjFjYmk1bWIyOTBaWElnZTF4eVhHNWNkSEJoWkdScGJtYzZJSFpoY2lndExXMXZaSFZzWVhJdGN5azdYSEpjYmx4MGRHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHlYRzVjZEdadmJuUXRjMmw2WlRvZ2RtRnlLQzB0Ylc5a2RXeGhjaTF6S1R0Y2NseHVYSFJzYVc1bExXaGxhV2RvZERvZ01UUXdKVHRjY2x4dVhIUmliM0prWlhJdGRHOXdPaUF4Y0hnZ2MyOXNhV1FnZG1GeUtDMHRiV0ZwYmkxamIyeHZjaWs3WEhKY2JuMWNjbHh1WEhKY2JrQnRaV1JwWVNBb0xTMTBZV0pzWlhRcElIdGNjbHh1WEhRdVptOXZkR1Z5SUh0Y2NseHVYSFJjZEhCaFpHUnBibWM2SUhaaGNpZ3RMVzF2WkhWc1lYSXRZbUZ6WlNrZ2RtRnlLQzB0Ylc5a2RXeGhjaTE0YkNrN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV1ZrYVdFZ0tDMHRkR0ZpYkdWMExXeGhjbWRsS1NCN1hISmNibHgwTG1admIzUmxjaUI3WEhKY2JseDBYSFJ3WVdSa2FXNW5PaUIyWVhJb0xTMXRiMlIxYkdGeUxXSmhjMlVwSUhaaGNpZ3RMVzF2WkhWc1lYSXRlSGg0YkNrN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4dUxtaGxZV1JsY2lCN1hISmNibHgwWkdsemNHeGhlVG9nZEdGaWJHVTdYSEpjYmx4MGRHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHlYRzVjZEhkcFpIUm9PaUF4TURBbE8xeHlYRzVjZEhCaFpHUnBibWM2SUhaaGNpZ3RMVzF2WkhWc1lYSXRlR3dwSURBZ2RtRnlLQzB0Ylc5a2RXeGhjaTFzS1NBd08xeHlYRzU5WEhKY2JseHlYRzR1YUdWaFpHVnlYMTlzYjJkdkxYUmxlSFFnZTF4eVhHNWNkR1p2Ym5RdGMybDZaVG9nZG1GeUtDMHRiVzlrZFd4aGNpMXNLVHRjY2x4dVhIUjJaWEowYVdOaGJDMWhiR2xuYmpvZ2JXbGtaR3hsTzF4eVhHNWNkR1JwYzNCc1lYazZJSFJoWW14bExXTmxiR3c3WEhKY2JseDBabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNjbHh1WEhSc2FXNWxMV2hsYVdkb2REb2dNRHRjY2x4dWZWeHlYRzVjY2x4dUxtaGxZV1JsY2w5ZmJHOW5ieTFsYlhCb1lYTnBjeUI3WEhKY2JseDBZMjlzYjNJNklIWmhjaWd0TFcxaGFXNHRZMjlzYjNJcE8xeHlYRzVjZEdadmJuUXRkMlZwWjJoME9pQTNNREE3WEhKY2JuMWNjbHh1WEhKY2JrQnRaV1JwWVNBb0xTMTBZV0pzWlhRcElIdGNjbHh1WEhRdWFHVmhaR1Z5SUh0Y2NseHVYSFJjZEcxaGNtZHBiam9nZG1GeUtDMHRiVzlrZFd4aGNpMTRiQ2tnTUNCMllYSW9MUzF0YjJSMWJHRnlMV3dwSURBN1hISmNibHgwZlZ4eVhHNWNkQzVvWldGa1pYSmZYMnh2WjI4dGRHVjRkQ0I3WEhKY2JseDBYSFJtYjI1MExYTnBlbVU2SUhaaGNpZ3RMVzF2WkhWc1lYSXRlR3dwTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dVFHMWxaR2xoSUNndExYUmhZbXhsZEMxc1lYSm5aU2tnZTF4eVhHNWNkQzVvWldGa1pYSmZYMnh2WjI4dGRHVjRkQ0I3WEhKY2JseDBYSFJtYjI1MExYTnBlbVU2SUhaaGNpZ3RMVzF2WkhWc1lYSXRlSGhzS1R0Y2NseHVYSFI5WEhKY2JuMWNiaTVzYjJkcGJpQjdYSEpjYmx4MGNHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHlYRzVjZEhvdGFXNWtaWGc2SURFd01EdGNjbHh1WEhKY2JseDBiR1ZtZERvZ05UQWxPMXh5WEc1Y2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNklISmxaRHRjY2x4dWZWeHlYRzVjYmk1c2FYTjBJSHRjY2x4dVltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ2RtRnlLQzB0WTI5c2IzSXRkMmhwZEdVcE8xeHlYRzU5WEhKY2JseHVMeXBjY2x4dUlDb2dVMlZoY21Ob1ltRnlYSEpjYmlBcUlEMDlQVDA5UFQwOVBWeHlYRzRnS2k5Y2NseHVYSEpjYmlBdWMyVmhjbU5vWW1GeUlIdGNjbHh1SUZ4MGFHVnBaMmgwT2pGeVpXMDdYSEpjYmlCY2RIUmxlSFF0WVd4cFoyNDZZMlZ1ZEdWeU8xeHlYRzVjZEhCaFpHUnBibWN0WW05MGRHOXRPalZ5WlcwN1hISmNiaUI5WEhKY2JseHlYRzRnYVc1d2RYUWdlMXh5WEc0Z1hIUnZkWFJzYVc1bE9pQnViMjVsTzF4eVhHNGdYSFJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2NseHVJRngwWW05eVpHVnlPaUJ1YjI1bE8xeHlYRzRnWEhSamIyeHZjam9qUmpoR09FWkdPMXh5WEc0Z1hIUjBaWGgwTFhOb1lXUnZkem9nTUhCNElEQndlQ0F3Y0hnZ0kwWTRSamhHUmp0Y2NseHVJRngwTFhkbFltdHBkQzEwWlhoMExXWnBiR3d0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4eVhHNWNkRzl3WVdOcGRIazZMamM3WEhKY2JpQjlYSEpjYmx4eVhHNHVjMlZoY21Ob1ltRnlYMTlpWVhJZ2UxeHlYRzVjZEcxaGNtZHBianBoZFhSdk8xeHlYRzVjZEhkcFpIUm9Pakl3Y21WdE8xeHlYRzVjZEdKdmNtUmxjaTFpYjNSMGIyMDZNWEI0SUhOdmJHbGtJQ05HT0VZNFJrWTdYSEpjYmx4MGNHRmtaR2x1WnpvdU5YSmxiVHRjY2x4dVhIUm1iMjUwTFhOcGVtVTZNUzR6Y21WdE8xeHlYRzU5WEhKY2JseHVMbXhwYzNRZ2UxeHlYRzVpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0IyWVhJb0xTMWpiMnh2Y2kxM2FHbDBaU2s3WEhKY2JuMWNjbHh1SWl3aWFIUnRiQ0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFuVW1GcVpHaGhibWtuTENCellXNXpMWE5sY21sbU8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTVRreE56RTVPMXh1SUNCamIyeHZjam9nSTJVMlpHSmtZenRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlNWEI0TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVRRd0pUdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYm4xY2JseHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJjSWxKaGFtUm9ZVzVwWENJN1hHNGdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRE13TUR0Y2JpQWdjM0pqT2lCMWNtd29YQ0l2Wm05dWRITXZVbUZxWkdoaGJta3RUR2xuYUhRdWRIUm1YQ0lwTzF4dWZWeHVYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVVtRnFaR2hoYm1sY0lqdGNiaUFnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0J6Y21NNklIVnliQ2hjSWk5bWIyNTBjeTlTWVdwa2FHRnVhUzFTWldkMWJHRnlMblIwWmx3aUtUdGNibjFjYmx4dVFHWnZiblF0Wm1GalpTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJbEpoYW1Sb1lXNXBYQ0k3WEc0Z0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjYmlBZ2MzSmpPaUIxY213b1hDSXZabTl1ZEhNdlVtRnFaR2hoYm1rdFRXVmthWFZ0TG5SMFpsd2lLVHRjYm4xY2JseHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJjSWxKaGFtUm9ZVzVwWENJN1hHNGdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFl3TUR0Y2JpQWdjM0pqT2lCMWNtd29YQ0l2Wm05dWRITXZVbUZxWkdoaGJta3RVMlZ0YVVKdmJHUXVkSFJtWENJcE8xeHVmVnh1WEc1QVptOXVkQzFtWVdObElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lVbUZxWkdoaGJtbGNJanRjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNCemNtTTZJSFZ5YkNoY0lpOW1iMjUwY3k5U1lXcGthR0Z1YVMxQ2IyeGtMblIwWmx3aUtUdGNibjFjYmx4dVltOWtlU0I3WEc0Z0lHMWhjbWRwYmpvZ01EdGNibjFjYmx4dVlTQjdYRzRnSUdOdmJHOXlPaUJwYm1obGNtbDBPMXh1SUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzU5WEc1Y2JpNXNZWGx2ZFhRZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTVRreE56RTVPMXh1SUNCdFlYZ3RkMmxrZEdnNklERXdNQ1U3WEc0Z0lHMWhjbWRwYmpvZ1lYVjBienRjYmlBZ2IzWmxjbVpzYjNjdGVEb2dhR2xrWkdWdU8xeHVmVnh1WEc0dktpb3FYSEpjYmlBcUlGWmhjbWxoWW14bGMxeHlYRzRnS2lBdFhISmNiaUFxTDF4dVhHNDZjbTl2ZENCN1hHNGdJQzhxWEhKY2JseDBJQ29nVFc5a2RXeGhjaUJUWTJGc1pTQXRJREV1TmpFNElDaEhiMnhrWlc0Z1VtRjBhVzhwWEhKY2JseDBJQ292WEc0Z0lDOHFYSEpjYmx4MElDb2dWR2hsYldWY2NseHVYSFFnS2k5Y2JpQWdMeXBjY2x4dVhIUWdLaUJEYjJ4dmNuTmNjbHh1WEhRZ0tpOWNiaUFnTHlwY2NseHVYSFFnS2lCVVpYaDBjMXh5WEc1Y2RDQXFMMXh1SUNBdktseHlYRzVjZENBcUlFRnNaWEowTDFOMFlYUjFjeUJqYjJ4dmNuTmNjbHh1WEhRZ0tpOWNiaUFnTHlwY2NseHVYSFFnS2lCRllYTnBibWR6WEhKY2JseDBJQ292WEc1OVhHNWNiaThxS2lwY2NseHVJQ29nVFdWa2FXRWdjWFZsY21sbGMxeHlYRzRnS2lBdFhISmNiaUFxTDF4dVhHNHVZMkZ5WkY5ZlkzTnpMV2R5YVdRZ2UxeHVJQ0JrYVhOd2JHRjVPaUJuY21sa08xeHVJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklERm1jaUF4Wm5JN1hHNGdJQzF0Y3kxbmNtbGtMV052YkhWdGJuTTZJREZtY2lBeFpuSTdYRzRnSUdkeWFXUXRZMjlzZFcxdUxXZGhjRG9nTUM0eE5EWnlaVzA3WEc0Z0lHZHlhV1F0Y205M0xXZGhjRG9nTUM0eE5EWnlaVzA3WEc0Z0lHMWhjbWRwYmpvZ01DQXdMakUwTm5KbGJTQXhMall4T0hKbGJUdGNibjFjYmx4dUxtTmhjbVFnZTF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNOa1pHUmtaR1E3WEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklEQTdYRzU5WEc1Y2JpNWpZWEprT21odmRtVnlQaTVqWVhKa1gxOWlaeUI3WEc0Z0lIUnlZVzV6Wm05eWJUb2djMk5oYkdVb01TNDBLVHRjYm4xY2JseHVMbU5oY21SZlgyNWhiV1VnZTF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTJNREE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNQzQyTVRoeVpXMDdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc0Z0lHSnZkSFJ2YlRvZ01DNHpPREp5WlcwN1hHNGdJSEpwWjJoME9pQXdMakUwTm5KbGJUdGNiaUFnZWkxcGJtUmxlRG9nTkR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURBN1hHNTlYRzVjYmk1allYSmtYMTlpWnlCN1hHNGdJRzFoZUMxM2FXUjBhRG9nTVRBd0pUdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJQzQwY3p0Y2JuMWNibHh1UUcxbFpHbGhJR0ZzYkNCaGJtUWdLRzFwYmkxM2FXUjBhRG8yT0RGd2VDa2dlMXh1SUNBdVkyRnlaRjlmWTNOekxXZHlhV1FnZTF4dUlDQWdJR2R5YVdRdFkyOXNkVzF1TFdkaGNEb2dNQzR6T0RKeVpXMDdYRzRnSUNBZ1ozSnBaQzF5YjNjdFoyRndPaUF3TGpNNE1uSmxiVHRjYmlBZ0lDQnRZWEpuYVc0NklEQWdNQzQyTVRoeVpXMGdNaTQyTVRoeVpXMDdYRzRnSUgxY2JseHVJQ0F1WTJGeVpGOWZibUZ0WlNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeExqWXhPSEpsYlR0Y2JpQWdJQ0JpYjNSMGIyMDZJREl4Y0hnN1hHNGdJQ0FnY21sbmFIUTZJREF1TVRRMmNtVnRPMXh1SUNCOVhHNTlYRzVjYmtCdFpXUnBZU0JoYkd3Z1lXNWtJQ2h0YVc0dGQybGtkR2c2TVRBeU5IQjRLU0I3WEc0Z0lDNWpZWEprWDE5amMzTXRaM0pwWkNCN1hHNGdJQ0FnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQXhabklnTVdaeUlERm1janRjYmlBZ0lDQXRiWE10WjNKcFpDMWpiMngxYlc1ek9pQXhabklnTVdaeUlERm1janRjYmlBZ0lDQm5jbWxrTFdOdmJIVnRiaTFuWVhBNklEQXVNemd5Y21WdE8xeHVJQ0FnSUdkeWFXUXRjbTkzTFdkaGNEb2dNQzR6T0RKeVpXMDdYRzRnSUNBZ2JXRnlaMmx1T2lBd0lESXhjSGdnTWk0Mk1UaHlaVzA3WEc0Z0lIMWNibHh1SUNBdVkyRnlaRjlmYm1GdFpTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhMall4T0hKbGJUdGNiaUFnSUNCaWIzUjBiMjA2SURJeGNIZzdYRzRnSUNBZ2NtbG5hSFE2SURBdU1UUTJjbVZ0TzF4dUlDQjlYRzU5WEc1Y2JpNW1iMjkwWlhJZ2UxeHVJQ0J3WVdSa2FXNW5PaUF3TGpZeE9ISmxiVHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0JtYjI1MExYTnBlbVU2SURBdU5qRTRjbVZ0TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVRRd0pUdGNiaUFnWW05eVpHVnlMWFJ2Y0RvZ01YQjRJSE52Ykdsa0lDTmtNakkzTXpBN1hHNTlYRzVjYmtCdFpXUnBZU0JoYkd3Z1lXNWtJQ2h0YVc0dGQybGtkR2c2TmpneGNIZ3BJSHRjYmlBZ0xtWnZiM1JsY2lCN1hHNGdJQ0FnY0dGa1pHbHVaem9nTWpGd2VDQXlMall4T0hKbGJUdGNiaUFnZlZ4dWZWeHVYRzVBYldWa2FXRWdZV3hzSUdGdVpDQW9iV2x1TFhkcFpIUm9PakV3TWpSd2VDa2dlMXh1SUNBdVptOXZkR1Z5SUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF5TVhCNElEWXVPRFUwY21WdE8xeHVJQ0I5WEc1OVhHNWNiaTVvWldGa1pYSWdlMXh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdjR0ZrWkdsdVp6b2dNaTQyTVRoeVpXMGdNQ0F4TGpZeE9ISmxiU0F3TzF4dWZWeHVYRzR1YUdWaFpHVnlYMTlzYjJkdkxYUmxlSFFnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREV1TmpFNGNtVnRPMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPMXh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaUzFqWld4c08xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNRHRjYm4xY2JseHVMbWhsWVdSbGNsOWZiRzluYnkxbGJYQm9ZWE5wY3lCN1hHNGdJR052Ykc5eU9pQWpaREl5TnpNd08xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ1lXeHNJR0Z1WkNBb2JXbHVMWGRwWkhSb09qWTRNWEI0S1NCN1hHNGdJQzVvWldGa1pYSWdlMXh1SUNBZ0lHMWhjbWRwYmpvZ01pNDJNVGh5WlcwZ01DQXhMall4T0hKbGJTQXdPMXh1SUNCOVhHNWNiaUFnTG1obFlXUmxjbDlmYkc5bmJ5MTBaWGgwSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJdU5qRTRjbVZ0TzF4dUlDQjlYRzU5WEc1Y2JrQnRaV1JwWVNCaGJHd2dZVzVrSUNodGFXNHRkMmxrZEdnNk1UQXlOSEI0S1NCN1hHNGdJQzVvWldGa1pYSmZYMnh2WjI4dGRHVjRkQ0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUEwTGpJek5uSmxiVHRjYmlBZ2ZWeHVmVnh1WEc0dWJHOW5hVzRnZTF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhvdGFXNWtaWGc2SURFd01EdGNiaUFnYkdWbWREb2dOVEFsTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaV1E3WEc1OVhHNWNiaTVzYVhOMElIdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTJabVptWm1aanRjYm4xY2JseHVMeXBjY2x4dUlDb2dVMlZoY21Ob1ltRnlYSEpjYmlBcUlEMDlQVDA5UFQwOVBWeHlYRzRnS2k5Y2JseHVMbk5sWVhKamFHSmhjaUI3WEc0Z0lHaGxhV2RvZERvZ01YSmxiVHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOWEpsYlR0Y2JuMWNibHh1YVc1d2RYUWdlMXh1SUNCdmRYUnNhVzVsT2lCdWIyNWxPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNiaUFnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0JqYjJ4dmNqb2dJMFk0UmpoR1JqdGNiaUFnZEdWNGRDMXphR0ZrYjNjNklEQndlQ0F3Y0hnZ01IQjRJQ05HT0VZNFJrWTdYRzRnSUMxM1pXSnJhWFF0ZEdWNGRDMW1hV3hzTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JpQWdiM0JoWTJsMGVUb2dMamM3WEc1OVhHNWNiaTV6WldGeVkyaGlZWEpmWDJKaGNpQjdYRzRnSUcxaGNtZHBiam9nWVhWMGJ6dGNiaUFnZDJsa2RHZzZJREl3Y21WdE8xeHVJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXhjSGdnYzI5c2FXUWdJMFk0UmpoR1JqdGNiaUFnY0dGa1pHbHVaem9nTGpWeVpXMDdYRzRnSUdadmJuUXRjMmw2WlRvZ01TNHpjbVZ0TzF4dWZWeHVYRzR1YkdsemRDQjdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNObVptWm1abVk3WEc1OVhHNHZLaU1nYzI5MWNtTmxUV0Z3Y0dsdVoxVlNURDFrWVhSaE9tRndjR3hwWTJGMGFXOXVMMnB6YjI0N1ltRnpaVFkwTEdWNVNqSmFXRXA2WVZjNWRVbHFiM3BNUTBwNllqTldlVmt5Vm5wSmFuQmlTV2s1Vm1NeVZubGplVGxSV2xkU2VXSjVRa2haV0VwcVdsaHZkbEpIVm5waE0xSjJZME01ZDJOdE9YRmFWMDR3WTNrNWVWcFhSbXBrUXpGcFlqSnNjMXBZU1haYWJrcDJZbTVSZG1NelNtcE1NazUyWWxoQ2RtSnRWblZrU0UxMldXNVdkVnBIZUd4TWJVNTZZM2xLWkV4RFNuVlpWekZzWTNsSk5sY3hNSE5KYlRGb1kwaENjR0p0WkhwSmFtOXBVVlZHUWxGVWRFWlJWVTVFVHpCV1FsRXdSVGRTVlVaRVVWUjBSbEZWVGtKUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsSXdVVGRTVlVaRVVYcDBSbEZWVGtKUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsSXdVVGRTVlVaRVVYcDBSbEZWVGtKUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsSXdVVGRTVlVaRVVYcDBSbEZWVGtKUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsSXdVVGRTVlVaRVVYcDBSbEZWVGtKUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsSXdVVGRTVlVaRVVYcDBSbEZWVGtKUE1GWkNVVEJGTjFKVlJrUlJWSE0zVHpCR1FsSXdVVGRTVlVaRVVYcHpOMDh3UmtKU01GRTNVbFZHUkZGNmRFWlJWVTVDVDNwek4xRlZSa2hTUkhSR1VWVk9SRTh3VmtKUk1FVTNVbFZHUkZGVWRFWlJWVTVDVDNwek4xRlZSa2hTUkhNM1QzcHpOMUZWUmt4UlZIUkNVVlZPUkU5NmN6ZFJWVVpZVVZSek4wOHdSa0pVVlVVM1QzcDBRbEZXVmtKUGVuTTNVVlZHVGxGVWN6ZFBNRVpDVkZWRk4wOTZjemRQTUVaQ1ZUQlJOMDk2Y3pkUE1FWkNXVlZGTjFKVlJrUlJlblJHVVZWT1FrOHdWa0pSTUVVM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFBlblJDVVZWa1JVOHdWa0pSTUUwM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZSek4wOHdSa0pTTUZFM1VsVkdSRkY2Y3pkUE1FWkNVakJSTjFKVlJrUlJlblJHVVZWT1FrOHdWa0pSTUVVM1VsVkdSRkZVZEVaUlZVNUNUekJXUWxFd1JUZFNWVVpFVVZSMFJsRlZUa0pQZW5NM1VWVkdTRkpFZEVaUlZVNUVUekJXUWxFd1JUZFBlblJDVVZWa1JVOHdSa0pSTUUwM1UxVkdSRkY2ZEVwUlZVNUNUekJzUWxFd1JUZFBlblJDVVZWV1JVOHdiRUpSTUUwM1UxVkdSRkZVZEVwUlZVNUNUM3B6TjA4d1JrSlRWVmszVVZWR1JGRjZkRXBSVlU1RVR6QnNRbEV3UlRkVFZVWkVVVlIwU2xGVlRrSlBNR3hDVVRCRk4wOTZkRUpSVlZaRlR6QnNRbEV3VFRkVFZVWkVVVlIwU2xGVlRrSlBlbk0zVHpCR1FsSXdXVGRTVlVaRVVYcDBSbEZWVGtKUE1GWkNVVEJGTjFKVlJrUlJWSFJHVVZWT1FrOTZjemRSVlVaSVVrUjBRbEZWVGtSUE1HeENVVEJOTjA5NmN6ZFJWVVpLVW1wMFFsRlZUa1JQTUd4Q1VUQk5OMDk2Y3pkUlZVWktVbXAwUmxGVlRrUlBNRlpDVVRCRk4xSlZSa1JSVkhSR1VWVk9Razk2Y3pkUlZVWklVa1IwUmxGVlRrUlBNRlpDVVRCRk4xSlZSa1JSVkhSR1VWVk9Razh3VmtKUk1FVTNUM3AwUWxGVlpFVlBNRlpDVVRCTk4xSlZSa1JSVkhNM1R6QkdRbEl3VVRkUlZVWkVVWHAwU2xGVlRrUlBlbk0zVVZWR1JsSkVkRXBSVlU1RVQzcHpOMDh3UmtKVFZWazNVVlZHUkZGNmRFcFJWVTVFVDNwek4wOHdSa0pTTUZrM1VsVkdSRkY2ZEVaUlZVNUNUekJXUWxKVlJUZFNWVVpFVVZSek4wOHdSa0pTTUZFM1VsVkdSRkZVY3pkUE1FWkNVakJGTjA5NmN6ZFBNRVpDVXpCTk4xSlZSa1JSZW5SR1VWVk9Razh3VmtKUk1GRTNUM3AwUWxGVlpFSlBNRlpDVVRCTk4xSlZSa1JSVkhSR1VWVk9Razh3VmtKUk1FVTNVbFZHUkZGVWRFWlJWVTVDVHpCV1FsRXdVVGRQZW5SQ1VWVmtSVTh3VmtKUk1FMDNVbFZHUkZGVWRFWlJWVTVDVHpCV1FsRXdSVGRTVlVaRVVWUnpOMDh3UmtKU01GRTNVbFZHUkZGVFNYTkpiazUyWkZoS2FscFlUa1JpTWpVd1dsYzFNRWxxY0dKSmJXZ3dZbGQzWjJVeGVIbFlSelZqWkVkYWRtSnVVWFJhYlVaMFlWZDROVTlwUVc1VmJVWnhXa2RvYUdKdGEyNU1RMEo2V1ZjMWVreFlUbXhqYld4dFR6RjRlVmhITldOa1IwcG9XVEowYm1OdE9URmliVkYwV1RJNWMySXpTVFpKU0Zwb1kybG5kRXhYU21oWk1uUnVZMjA1TVdKdFVYQlBNWGg1V0VjMVkyUkhUblppUnpsNVQybENNbGxZU1c5TVV6RjZXbGRPZG1KdFVtaGpibXQwV1RJNWMySXpTWEJQTVhoNVdFYzFZMlJIV25aaWJsRjBZekpzTmxwVWIyZGtiVVo1UzBNd2RHSlhPV3RrVjNob1kya3hhVmxZVG14TFZIUmpZMng0ZFZoSVVuTmhWelZzVEZkb2JHRlhaRzlrUkc5blRWUlJkMHBVZEdOamJIaDFXRWhTYldJeU5UQk1XR1JzWVZka2IyUkViMmRPUkVGM1R6RjRlVmhITlRsWVNFcGpZbXg0ZVZoSE5VRmFiVGwxWkVNeGJWbFhUbXhKU0hSalkyeDRkVmhJVW0xaU1qVXdURmRhYUdKWGJITmxWSEJqU1d4S2FHRnRVbTlaVnpWd1dFTkpOMWhJU21OaWJIZ3dXbTA1ZFdSRE1YcGtTR3h6V2xSdloySnRPWGxpVjBaelR6RjRlVmhITldOa1IxcDJZbTVSZEdReVZuQmFNbWd3VDJsQmVrMUVRVGRZU0VwallteDRNR016U21wUGJsWjVZa05vWTBscE9XMWlNalV3WTNrNVUxbFhjR3RoUjBaMVlWTXhUV0ZYWkc5a1F6VXdaRWRhWTBscGF6ZFlTRXBqWW00eFkyTnNlSFZZU0VwalltdENiV0l5TlRCTVYxcG9XVEpWWjJVeGVIbFlSelZqWkVkYWRtSnVVWFJhYlVaMFlWZDROVTlzZDJsVmJVWnhXa2RvYUdKdGJHTkphblJqWTJ4NGRWaElVbTFpTWpVd1RGaE9NR1ZYZUd4UGFVSjFZak5LZEZsWGR6ZFlTRXBqWW14NE1GcHRPWFZrUXpFeldsZHNibUZJVVRaSlJGRjNUVVIwWTJOc2VIVllTRko2WTIxTk5tUllTbk5MUm5kcFRESmFkbUp1VW5wTU1VcG9ZVzFTYjFsWE5YQk1Wa3BzV2pOV2MxbFlTWFZrU0ZKdFdFTkpjRTh4ZUhsWVJ6VTVXRWhLWTJKc2VIbFlSelZCV20wNWRXUkRNVzFaVjA1c1NVaDBZMk5zZUhWWVNGSnRZakkxTUV4WFdtaGlWMnh6WlZSd1kwbHNTbWhoYlZKdldWYzFjRmhEU1RkWVNFcGpZbXg0TUZwdE9YVmtRekY2WkVoc2MxcFViMmRpYlRsNVlsZEdjMDh4ZUhsWVJ6VmpaRWRhZG1KdVVYUmtNbFp3V2pKb01FOXBRVEZOUkVFM1dFaEtZMkpzZURCak0wcHFUMjVXZVdKRGFHTkphVGx0WWpJMU1HTjVPVk5aVjNCcllVZEdkV0ZUTVU1YVYxSndaRmN3ZFdSSVVtMVlRMGx3VHpGNGVWaEhOVGxZU0VwallteDRlVmhITlVGYWJUbDFaRU14YlZsWFRteEpTSFJqWTJ4NGRWaElVbTFpTWpVd1RGZGFhR0pYYkhObFZIQmpTV3hLYUdGdFVtOVpWelZ3V0VOSk4xaElTbU5pYkhnd1dtMDVkV1JETVhwa1NHeHpXbFJ2WjJKdE9YbGlWMFp6VHpGNGVWaEhOV05rUjFwMlltNVJkR1F5Vm5CYU1tZ3dUMmxCTWsxRVFUZFlTRXBqWW14NE1HTXpTbXBQYmxaNVlrTm9ZMGxwT1cxaU1qVXdZM2s1VTFsWGNHdGhSMFoxWVZNeFZGcFhNWEJSYlRseldrTTFNR1JIV21OSmFXczNXRWhLWTJKdU1XTmpiSGgxV0VoS1kySnJRbTFpTWpVd1RGZGFhRmt5VldkbE1YaDVXRWMxWTJSSFduWmlibEYwV20xR2RHRlhlRFZQYkhkcFZXMUdjVnBIYUdoaWJXeGpTV3AwWTJOc2VIVllTRkp0WWpJMU1FeFlUakJsVjNoc1QybENkV0l6U25SWlYzYzNXRWhLWTJKc2VEQmFiVGwxWkVNeE0xcFhiRzVoU0ZFMlNVUmpkMDFFZEdOamJIaDFXRWhTZW1OdFRUWmtXRXB6UzBaM2FVd3lXblppYmxKNlRERkthR0Z0VW05WlZ6VndURlZLZG1KSFVYVmtTRkp0V0VOSmNFOHhlSGxZUnpVNVdFaEtZMkpzZUhsWVJ6VnBZakpTTlVsSWRHTmpiSGgxV0VoU2RGbFlTbTVoVnpRMlNVUkJOMWhJU21OaWJqRmpZMng0ZFZoSVNtTmliVVZuWlRGNGVWaEhOV05rUjA1MllrYzVlVTlwUW5CaWJXaHNZMjFzTUU4eGVIbFlSelZqWkVoU2JHVklVWFJhUjFacVlqTkthR1JIYkhaaWFtOW5ZbTA1ZFZwVWRHTmpiSGgxWmxaNGVWaEhOV05qYkhoMVRHMTRhR1ZYT1RGa1EwSTNXRWhLWTJKc2VEQlpiVVpxWVRKa2VXSXpWblZhUXpGcVlqSjRkbU5xYjJka2JVWjVTME13ZEZsdFJtcGhNbVI1WWpOV2RWcERhemRZU0VwallteDRNR0pYUmpSTVdHUndXa2hTYjA5cFFYaE5SRUZzVHpGNGVWaEhOV05rUnpGb1kyMWtjR0pxYjJkWldGWXdZbnAwWTJOc2VIVllTRkoyWkcxV2VWcHRlSFprZVRFMFQybENiMkZYVW10YVZ6UTNXRWhLWTJKdU1XTmpiSGgxV0VjMGRrdHBiM0ZZU0VwalltbEJjVWxHV21oamJXeG9XVzE0YkdNeGVIbFlSelJuUzJsQmRGaElTbU5pYVVGeFRERjRlVmhITldOamJIaDFUMjVLZG1JelVXZGxNWGg1V0VjMVkyUkRPSEZZU0VwallteDRNRWxEYjJkVVZ6bHJaRmQ0YUdOcFFsUlpNa1p6V2xOQmRFbEVSWFZPYWtVMFNVTm9TR0l5ZUd0YVZ6Um5WVzFHTUdGWE9IQllTRXBqWW14NE1FbERiM1pZU0VwallteDRNRXhUTVhSaU1sSXhZa2RHZVV4WWFEUmplbTluVFVNMGVFNUVXbmxhVnpBM1dFaEtZMkpzZURCTVV6RjBZakpTTVdKSFJubE1XR2g2VDJsQmQweHFUVFJOYmtwc1lsUjBZMk5zZUhWWVNGRjBURmN4ZGxwSVZuTlpXRWwwWTNwdlowMUROREpOVkdoNVdsY3dOMWhJU21OaWJIZ3dURk14ZEdJeVVqRmlSMFo1VEZkS2FHTXlWVFpKUkVsNFkwaG5OMWhJU21OaWJIZ3dURk14ZEdJeVVqRmlSMFo1VEZkM05rbEVSWFZPYWtVMFkyMVdkRTh4ZUhsWVJ6VmpaRU13ZEdKWE9XdGtWM2hvWTJreE5HSkViMmROYVRReVRWUm9lVnBYTURkWVNFcGpZbXg0TUV4VE1YUmlNbEl4WWtkR2VVeFlhRFJpUkc5blRrTTBlVTE2V25sYVZ6QTNXRWhLWTJKc2VEQk1VekYwWWpKU01XSkhSbmxNV0dnMFpVZDNOa2xFV1hWUFJGVXdZMjFXZEU4eGVIbFlSelZqWkVNNGNWaElTbU5pYkhnd1NVTnZaMVpIYUd4aVYxWmpZMng0ZFZoSVVXZExhVGxqWTJ4NGRWaElVWFJNVjBwb1dUSjBibU50T1RGaWJWRTJTVU5OZUU5VVJUTk5WR3MzV0VoS1kySnNlREJNVXpGMFdWZHNkVXhYVG5aaVJ6bDVUMmxCYWxwRVNYbE9lazEzVHpGNGVWaEhOV05rUXpCMFl6SldhbUl5Tld0WldFbzFURmRPZG1KSE9YbFBhVUZxV2xSYWExbHRVbXBQTVhoNVdFYzFZMlJET0hGWVNFcGpZbXg0TUVsRGIyZFJNamx6WWpOS2VsaElTbU5pYkhnd1NVTnZkbGhJU21OaWJIZ3dURk14YW1JeWVIWmphVEV6WVVkc01GcFViMmRKTWxwdFdtMWFiVnBxZEdOamJIaDFXRWhSZEV4WFRuWmlSemw1VEZka2VWbFlhM1JpUjJ4dVlVaFNiR016VVRaSlEwNXRXVEphYWxwdFRUZFlTRXBqWW14NE1FeFRNV3BpTW5oMlkya3hibU50UmpWTVYzaHdXakpvTUZwWVNUWkpRMDV0VFRKWmVscHFUVGRZU0VwallteDRNRXhUTVdwaU1uaDJZMmt4Ym1OdFJqVk1WM2h3V2pKb01FOXBRV3BTVkVwR1RXdFZlVTh4ZUhsWVJ6VmpaRU13ZEZreU9YTmlNMGwwV2pOS2FHVlRNWFJhVjFKd1pGY3dkR0pIYkc1aFNGRTJTVU5PYTFwSFVtdGFSMUUzV0VoS1kySnNlREJNVXpGcVlqSjRkbU5wTVc1amJVWTFURmN4YkZwSGJERmlWRzluU1RKV2FGcFhSbXhaVkhSalkyeDRkVmhJVVhSTVYwNTJZa2M1ZVV4WFpIbFpXR3QwV2tkR2VXRjZiMmRKZWxVeFRsUlZNVTVVZEdOamJIaDFXRWhSZGt0c2VIbFlSelZqWkVOQmNVbEdVbXhsU0ZKNldFaEtZMkpzZURCSlEyOTJXRWhLWTJKc2VEQk1VekZxWWpKNGRtTnBNVEJhV0dnd1RGZGtlVmxZUW05UGFVRnFUVEpWZWxwVVRteFBNWGg1V0VjMVkyUkRNSFJaTWpsellqTkpkR1JIVmpSa1F6RnpZVmRrYjJSRWIyZEplbWN5VDBSWk5FNXFkR05qYkhoMVdFaFJkRXhYVG5aaVJ6bDVURmhTYkdWSVVYUmFSMFo1WVhwdlowbDZVWGhPUkVVd1RWUjBZMk5zZUhWWVNGRjJTMng0ZVZoSE5XTmtRMEZ4U1VWR2MxcFlTakJNTVU0d1dWaFNNV041UW1waU1uaDJZMjVPWTJOc2VIVllTRkZuUzJrNVkyTnNlSFZZU0ZGMFRGZE9kbUpIT1hsTVYxWjVZMjA1ZVU5cFFXcFNSVWt3VG5wTk1rOHhlSGxZUnpWalpFTXdkRmt5T1hOaU0wbDBZek5XYWxreVZucGplbTluU1hwV1IxRlVRVEZOYW5SalkyeDRkVmhJVVhSTVYwNTJZa2M1ZVV4WVpHaGpiVFZ3WW0xak5rbERUa1ZTUkdSSFRYcE5OMWhJU21OaWJIZ3dUSGx3WTJOc2VIVllTRkZuUzJsQ1JsbFlUbkJpYldSNldFaEtZMkpzZURCSlEyOTJXRWhLWTJKc2VEQk1VekZzV1ZoT2NHSnRZM1JoVnpsNlQybENhbVJYU25CWmVURnBXbGh3Y0ZwWVNXOU5RelI1VFhsM1owMVRkMmROUXpSNlRXbDNaMDFUYXpkWVNFcGpZbXg0TUV4VE1XeFpXRTV3WW0xamRGcFlhSGRaVnpWclQybENhbVJYU25CWmVURnBXbGh3Y0ZwWVNXOU5RelI0VG5wVmMwbEVRWFZQUkdjeFRFTkJkMHhxVFhsTlEzZG5UVk0wZVU1NlZYQlBNWGg1V0VjMVkyUkRNSFJhVjBaNllWYzFia3hZUmpGWlYxRTJTVWRPTVZsdGJHcE1WMHBzWlcxc2JHTnBaM2RNYW1NelRVTjNaMDFETkhkTlJFRnpTVVJCZFUxVVl6Rk1RMEY0VEdwQmQwMURhemRZU0VwalltNHhZMk5zZUhWWVNFcGpZbXg0ZVZoSE5IWkxhVzl4V0VoS1kySnBRWEZKUlRGc1drZHNhRWxJUmpGYVdFcHdXbGhPWTJOc2VIVkpRMjluVEZaNGVWaEhOR2RMYVRsalkyeDRkVmhJU21OaWEwSnFaRmhPTUdJeU1IUmlWMVpyWVZkRloweFRNVEJaVjBweldsaFJaMWxYZUhOSlIwWjFXa05CYjJKWGJIVk1XR1J3V2toU2IwOXFXVFJOV0VJMFMxUjBZMk5zZUhWUlIwNHhZek5TZG1KVE1YUmFWMUp3V1ZOQmRFeFlVbWhaYlhoc1pFTXhjMWxZU201YVUwSm9Za2QzWjFsWE5XdEpRMmgwWVZjMGRHUXliR3RrUjJjMlRWUkJlVTVJUWpSTFZIUmpZMng0ZFZGSFRqRmpNMUoyWWxNeGRGcFhVbkJaVTBGMFRGZFNiR015ZERCaU0wRjBZekl4YUdKSGQyZFpWM2h6U1VkR2RWcERRVzlpVjJ4MVRGaGtjRnBJVW05UGFrVjRUVVJDZDJWRGF6ZFlTRXBqWW10Q2FtUllUakJpTWpCMFlsZFdhMkZYUldkTVV6RnJXbGhPY21SSE9YZE1WekZzV2tkc01XSlRRbWhpUjNkbldWYzFhMGxEYUhSaFZ6UjBaREpzYTJSSFp6Wk5WRWwzVFVoQ05FdFVkR05qYkhoMVVVZE9NV016VW5aaVV6RjBXbGRTY0ZsVFFYUk1WMUpzWXpKME1HSXpRWFJpUjBaNVdqSlZaMWxYZUhOSlIwWjFXa05CYjJKWGJIVk1XR1J3V2toU2IwOXFSVEJPUkVKM1pVTnJOMWhJU21OaWEwSnFaRmhPTUdJeU1IUmlWMVpyWVZkRloweFRNV3RhV0U1eVpFYzVkMHhZYUhOWldFcHVXbE5DYUdKSGQyZFpWelZyU1VOb2RHRlhOSFJrTW14clpFZG5OazFVWTNsTlNFSTBTMVIwWTJOc2VIVlJSMDR4WXpOU2RtSlRNWFJhVjFKd1dWTkJkRXhYVW14ak1uUXdZak5CZEdWSWFITlpXRXB1V2xOQ2FHSkhkMmRaVnpWclNVTm9kR0ZYTkhSa01teHJaRWRuTmsxVWEzbE5TRUkwUzFSMFkyTnNlSFZZUnpSMVdUSkdlVnBHT1daWk0wNTZURmRrZVdGWFVXZGxNWGg1V0VjMVkyUkhVbkJqTTBKeldWaHJOa2xIWkhsaFYxRTNXRWhLWTJKc2VEQmFNMHB3V2tNeE1GcFhNWGRpUjBZd1dsTXhhbUl5ZURGaVZ6VjZUMmxCZUZwdVNXZE5WMXA1VHpGNGVWaEhOV05rUXpGMFkza3hibU50Ykd0TVYwNTJZa2hXZEdKdVRUWkpSRVp0WTJsQmVGcHVTVGRZU0VwallteDRNRm96U25CYVF6RnFZako0TVdKWE5IUmFNa1ozVDJsQ01sbFlTVzlNVXpGMFlqSlNNV0pIUm5sTVdHZzBZM2xyTjFoSVNtTmliSGd3V2pOS2NGcERNWGxpTTJOMFdqSkdkMDlwUWpKWldFbHZURk14ZEdJeVVqRmlSMFo1VEZob05HTjVhemRZU0VwallteDRNR0pYUm5sYU1teDFUMmxCZDBsSVdtaGphV2QwVEZjeGRscElWbk5aV0VsMFpVaG9la3RUUWpKWldFbHZURk14ZEdJeVVqRmlSMFo1VEZkM2NFOHhlSGxZUnpVNVdFaEtZMkpzZUhsWVJ6UjFXVEpHZVZwRFFqZFlTRXBqWW14NE1HTkhPWHBoV0ZKd1lqSTBOa2xJU214aVIwWXdZVmhhYkU4eGVIbFlSelZqWkVkS2RtTnRVbXhqYW05blRWaENORWxJVG5aaVIyeHJTVWhhYUdOcFozUk1WMDUyWWtjNWVVeFhaSGxaV0d0MFlsZFdhMkZZVm5STVYzaHdXakpvTUV0VWRHTmpiSGgxV0VoU2FtUllTbnBpTTBrMlNVaENkbUZYTlRCYVdFazNXRWhLWTJKc2VEQmlNMXBzWTIxYWMySXpZelpKUjJod1drZFNiR0pxZEdOamJIaDFXRWhTYzJGWE5XeE1WMmhzWVZka2IyUkViMmROUkhSalkyeDRkV1pXZUhsWVJ6VmpZMng0ZFV4dFRtaGpiVkUyWVVjNU1scFlTU3RNYlU1b1kyMVNabGd5U201SlNIUmpZMng0ZFZoSVVqQmpiVVoxWXpKYWRtTnRNRFpKU0U1cVdWZDRiRXRFUlhWT1EyczNXRWhLWTJKdU1XTmpiSGgxV0VoS1kySnBOV3BaV0VwcldERTVkVmxYTVd4SlNIUmpZMng0ZFZoSVVuZGlNMDV3WkVkc2RtSnFiMmRaVjBwNllqSjRNV1JIVlRkWVNFcGpZbXg0TUZwdE9YVmtRekV6V2xkc2JtRklVVFpKUkZsM1RVUjBZMk5zZUhWWVNGSnRZakkxTUV4WVRuQmxiVlUyU1VoYWFHTnBaM1JNVnpGMldraFdjMWxZU1hSamVXczNXRWhLWTJKc2VEQmtSMVkwWkVNeE1HTnRSblZqTWxwMlkyMHdOa2xJVm5kalIxWjVXVEpHZWxwVWRHTmpiSGgxV0VoU2FXSXpVakJpTWpBMlNVaGFhR05wWjNSTVZ6RjJXa2hXYzFsWVNYUmxTRTF3VHpGNGVWaEhOV05rU0Vwd1dqSm9NRTlwUWpKWldFbHZURk14ZEdJeVVqRmlSMFo1VEZob05HTjVhemRZU0VwallteDRNR1ZwTVhCaWJWSnNaVVJ2WjA1RWRHTmpiSGgxV0VoU2MyRlhOV3hNVjJoc1lWZGtiMlJFYjJkTlJIUmpZMng0ZFdaV2VIbFlSelZqWTJ4NGRVeHRUbWhqYlZKbVdESktia2xJZEdOamJIaDFXRWhTZEZsWVozUmtNbXhyWkVkbk5rbEVSWGROUTFVM1dFaEtZMkpzZURCa1NFcG9ZbTVPY0dSSGJIWmlhbTluV1ZkNGMwbEROREJqZW5SalkyeDRkV1pXZUhsWVJ6VmpZMng0ZFZGSE1XeGFSMnhvU1VObmRFeFlVbWhaYlhoc1pFTnJaMlV4ZUhsWVJ6VmpaRU0xYWxsWVNtdFlNVGxxWXpOTmRGb3pTbkJhUTBJM1dFaEtZMkpzZURCWVNGSnVZMjFzYTB4WFRuWmlTRlowWW1reGJsbFlRVFpKU0Zwb1kybG5kRXhYTVhaYVNGWnpXVmhKZEdWSVRYQlBNWGg1V0VjMVkyUkdlREJhTTBwd1drTXhlV0l6WTNSYU1rWjNUMmxDTWxsWVNXOU1VekYwWWpKU01XSkhSbmxNV0doNlMxUjBZMk5zZUhWWVNGSmpaRWN4YUdOdFpIQmlhbTluVFVOQ01sbFlTVzlNVXpGMFlqSlNNV0pIUm5sTVdFMXdTVWhhYUdOcFozUk1WekYyV2toV2MxbFlTWFJsUjNkd1R6RjRlVmhITldOa1NERmpZMng0ZFZoSVVYVlpNa1o1V2tZNVptSnRSblJhVTBJM1dFaEtZMkpzZURCWVNGSnRZakkxTUV4WVRuQmxiVlUyU1VoYWFHTnBaM1JNVnpGMldraFdjMWxZU1hSaVEyczNXRWhLWTJKc2VEQllTRkpwWWpOU01HSXlNRFpKU0Zwb1kybG5kRXhYTVhaYVNGWnpXVmhKZEZsdFJucGFVMnMzV0VoS1kySnNlREJZU0ZKNVlWZGtiMlJFYjJka2JVWjVTME13ZEdKWE9XdGtWM2hvWTJreE5HVklUWEJQTVhoNVdFYzFZMlJJTVdOamJIaDFabFo0ZVZoSE5XTmpiSGgxVVVjeGJGcEhiR2hKUTJkMFRGaFNhRmx0ZUd4a1F6RnpXVmhLYmxwVGEyZGxNWGg1V0VjMVkyUkROV3BaV0VwcldERTVhbU16VFhSYU0wcHdXa05DTjFoSVNtTmliSGd3V0VoU2JtTnRiR3RNV0ZKc1lsaENjMWxZVW14TVYwNTJZa2hXZEdKdVRUWkpSRVp0WTJsQmVGcHVTV2ROVjFwNVR6RjRlVmhITldOa1JuZ3dURmN4ZWt4WFpIbGhWMUYwV1RJNWMyUlhNWFZqZW05blRWZGFlVWxFUm0xamFVRjRXbTVKTjFoSVNtTmliSGd3V0VoU2JtTnRiR3RNVjA1MllraFdkR0pwTVc1WldFRTJTVWhhYUdOcFozUk1WekYyV2toV2MxbFlTWFJsU0Uxd1R6RjRlVmhITldOa1JuZ3dXak5LY0ZwRE1YbGlNMk4wV2pKR2QwOXBRakpaV0VsdlRGTXhkR0l5VWpGaVIwWjVURmhvZWt0VWRHTmpiSGgxV0VoU1kyUkhNV2hqYldSd1ltcHZaMDFEUWpKWldFbHZURk14ZEdJeVVqRmlSMFo1VEZkS2FHTXlWWEJKU0Zwb1kybG5kRXhYTVhaYVNGWnpXVmhKZEdWSGQzQlBNWGg1V0VjMVkyUklNV05qYkhoMVdFaFJkVmt5Um5sYVJqbG1ZbTFHZEZwVFFqZFlTRXBqWW14NE1GaElVbTFpTWpVd1RGaE9jR1Z0VlRaSlNGcG9ZMmxuZEV4WE1YWmFTRlp6V1ZoSmRHSkRhemRZU0VwallteDRNRmhJVW1saU0xSXdZakl3TmtsSVdtaGphV2QwVEZjeGRscElWbk5aV0VsMFdXMUdlbHBUYXpkWVNFcGpZbXg0TUZoSVVubGhWMlJ2WkVSdloyUnRSbmxMUXpCMFlsYzVhMlJYZUdoamFURTBaVWhOY0U4eGVIbFlSelZqWkVneFkyTnNlSFZtVm5oMVRHMWFkbUl6VW14amFVSTNXRWhLWTJKc2VEQmpSMFpyV2tkc2RWcDZiMmRrYlVaNVMwTXdkR0pYT1d0a1YzaG9ZMmt4ZWt0VWRHTmpiSGgxV0VoU01GcFlhREJNVjBaellWZGtkVTlwUW1wYVZ6VXdXbGhKTjFoSVNtTmliSGd3V20wNWRXUkRNWHBoV0hCc1QybENNbGxZU1c5TVV6RjBZakpTTVdKSFJubE1XRTF3VHpGNGVWaEhOV05rUjNod1ltMVZkR0ZIVm5CYU1tZ3dUMmxCZUU1RVFXeFBNWGg1V0VjMVkyUkhTblpqYlZKc1kya3hNR0l6UVRaSlJFWjNaVU5DZW1JeWVIQmFRMEl5V1ZoSmIweFRNWFJaVjJ4MVRGZE9kbUpIT1hsTFZIUmpZMng0ZFdaV2VIbFlSelZqWTJ4NGRWRkhNV3hhUjJ4b1NVTm5kRXhZVW1oWmJYaHNaRU5yWjJVeGVIbFlSelZqWkVNMWJXSXlPVEJhV0VsblpURjRlVmhITldOa1JuZ3dZMGRHYTFwSGJIVmFlbTluWkcxR2VVdERNSFJpVnpsclpGZDRhR05wTVdsWldFNXNTMU5DTWxsWVNXOU1VekYwWWpKU01XSkhSbmxNV0doelMxUjBZMk5zZUhWWVNGSTVXRWhLWTJKdU1XTmpiSGgxV0VoS1kySnJRblJhVjFKd1dWTkJiMHhUTVRCWlYwcHpXbGhSZEdKSFJubGFNbFZ3U1VoMFkyTnNlSFZZU0ZGMVdtMDVkbVJIVm5sSlNIUmpZMng0ZFZoSVVtTmtTRUpvV2tkU2NHSnRZelpKU0Zwb1kybG5kRXhYTVhaYVNGWnpXVmhKZEZsdFJucGFVMnRuWkcxR2VVdERNSFJpVnpsclpGZDRhR05wTVRSbFNHaHpTMVIwWTJOc2VIVllTRkk1V0VoS1kySnVNV05qYkhoMVdFYzBkV0ZIVm1oYVIxWjVTVWgwWTJOc2VIVllTRkpyWVZoT2QySkhSalZQYVVJd1dWZEtjMXBVZEdOamJIaDFXRWhTTUZwWWFEQk1WMFp6WVZka2RVOXBRbXBhVnpVd1dsaEpOMWhJU21OaWJIZ3daREpzYTJSSFp6WkpSRVYzVFVOVk4xaElTbU5pYkhnd1kwZEdhMXBIYkhWYWVtOW5aRzFHZVV0RE1IUmlWemxyWkZkNGFHTnBNVFJpUTJ0blRVTkNNbGxZU1c5TVV6RjBZakpTTVdKSFJubE1WM2R3U1VSQk4xaElTbU5pYmpGalkyeDRkVmhJU21OaWFUVnZXbGRHYTFwWVNtWllNbmgyV2pJNGRHUkhWalJrUTBJM1dFaEtZMkpzZURCYWJUbDFaRU14ZW1GWWNHeFBhVUl5V1ZoSmIweFRNWFJpTWxJeFlrZEdlVXhYZDNCUE1YaDVXRWMxWTJSSVdteGpibEp3V1RKR2MweFhSbk5oVjJSMVQybENkR0ZYVW10aVIxVTNXRWhLWTJKc2VEQmFSMng2WTBkNGFHVlViMmRrUjBacFlrZFZkRmt5Vm5OaVJIUmpZMng0ZFZoSVVtMWlNalV3VEZoa2JHRlhaRzlrUkc5blRsUkJkMDh4ZUhsWVJ6VmpaRWQ0Y0dKdFZYUmhSMVp3V2pKb01FOXBRWGRQTVhoNVdFYzFPVmhJU21OaWJIaDVXRWMwZFdGSFZtaGFSMVo1V0RFNWMySXlaSFpNVjFaMFkwZG9hR015YkhwSlNIUmpZMng0ZFZoSVVtcGlNbmgyWTJwdloyUnRSbmxMUXpCMFlsZEdjR0pwTVdwaU1uaDJZMmxyTjFoSVNtTmliSGd3V20wNWRXUkRNVE5hVjJ4dVlVaFJOa2xFWTNkTlJIUmpZMng0ZFdaV2VIbFlSelZqWTJ4NGRWRkhNV3hhUjJ4b1NVTm5kRXhZVW1oWmJYaHNaRU5yWjJVeGVIbFlSelZqWkVNMWIxcFhSbXRhV0VsblpURjRlVmhITldOa1JuZ3dZbGRHZVZveWJIVlBhVUl5V1ZoSmIweFRNWFJpTWxJeFlrZEdlVXhZYUhOTFUwRjNTVWhhYUdOcFozUk1WekYyV2toV2MxbFlTWFJpUTJ0blRVUjBZMk5zZUhWWVNGSTVXRWhLWTJKc2VEQk1iV2hzV1ZkU2JHTnNPV1ppUnpsdVlua3hNRnBZYURCSlNIUmpZMng0ZFZoSVVtTmtSMXAyWW01UmRHTXliRFphVkc5blpHMUdlVXRETUhSaVZ6bHJaRmQ0YUdOcE1UUmlRMnMzV0VoS1kySnNlREJtVm5oNVdFYzFPVmhJU21OaWJIaDVXRWMxUVdKWFZtdGhWMFZuUzBNd2RHUkhSbWxpUjFZd1RGZDRhR050Wkd4TFUwSTNXRWhLWTJKc2VEQk1iV2hzV1ZkU2JHTnNPV1ppUnpsdVlua3hNRnBZYURCSlNIUmpZMng0ZFZoSVVtTmtSMXAyWW01UmRHTXliRFphVkc5blpHMUdlVXRETUhSaVZ6bHJaRmQ0YUdOcE1UUmxSM2R3VHpGNGVWaEhOV05rU0RGalkyeDRkV1pXZUhWTWJYaDJXakpzZFVsSWRHTmpiSGgxV0VoU2QySXpUbkJrUjJ4MlltcHZaMWxYU25waU1uZ3haRWRWTjFoSVNtTmliSGd3WldreGNHSnRVbXhsUkc5blRWUkJkMDh4ZUhsWVJ6VmpZMng0ZFZoSVVuTmFWMW93VDJsQk1VMURWVGRZU0VwallteDRNRmx0Um1waE1tUjVZak5XZFZwRE1XcGlNbmgyWTJwdloyTnRWbXRQTVhoNVdFYzFPVmhJU21OaWJIaDFURzE0Y0dNelVXZGxNWGg1V0VjMWFXSXpTbXRhV0VrMlNVUkdkMlZEUW5waU1uaHdXa05DTWxsWVNXOU1VekZxWWpKNGRtTnBNVE5oUjJ3d1dsTnJOMWhJU21OaWJqRmpZMng0ZFZoSE5IWkxiSGg1V0VjMFowdHBRbFJhVjBaNVdUSm9hVmxZU21OamJIaDFTVU52WjFCVU1EbFFWREE1VUZRd09WaElTbU5pYVVGeFRERjRlVmhITldOamJIaDFTVU0xZWxwWFJubFpNbWhwV1ZoSloyVXhlSGxZUnpSbldFaFNiMXBYYkc1aFNGRTJUVmhLYkdKVWRHTmpiSGgxU1VaNE1HUkhWalJrUXpGb1lrZHNibUpxY0dwYVZ6VXdXbGhKTjFoSVNtTmliSGd3WTBkR2ExcEhiSFZhZVRGcFlqTlNNR0l5TURaT1dFcHNZbFIwWTJOc2VIVkpTREZqWTJ4NGRWaElTbU5pYVVKd1ltNUNNV1JEUWpkWVNFcGpZbWxDWTJSSE9URmtSM2h3WW0xVk5rbEhOWFppYlZVM1dFaEtZMkpwUW1Oa1IwcG9XVEowYm1OdE9URmliVkYwV1RJNWMySXpTVFpKU0ZKNVdWYzFlbU5IUm5sYVZ6VXdUekY0ZVZoSE5HZFlTRkpwWWpOS2ExcFlTVFpKUnpWMlltMVZOMWhJU21OaWFVSmpaRWRPZG1KSE9YbFBhVTVIVDBWWk5GSnJXVGRZU0VwalltbENZMlJJVW14bFNGRjBZekpvYUZwSE9UTlBhVUYzWTBoblowMUlRalJKUkVKM1pVTkJhbEpxYUVkUFJWcEhUekY0ZVZoSE5HZFlTRkYwWkRKV2FXRXliREJNV0ZKc1pVaFJkRnB0YkhOaVF6RnFZako0ZG1OcWIyZGtTRXBvWW01T2QxbFlTbXhpYmxFM1dFaEtZMkpzZURCaU0wSm9XVEpzTUdWVWIzVk9lblJqWTJ4NGRVbElNV05qYkhoMVdFaEtZMkpwTlhwYVYwWjVXVEpvYVZsWVNtWllNa3BvWTJsQ04xaElTbU5pYkhnd1lsZEdlVm95YkhWUGJVWXhaRWM0TjFoSVNtTmliSGd3WkRKc2EyUkhaelpOYWtKNVdsY3dOMWhJU21OaWJIZ3dXVzA1ZVZwSFZubE1WMHAyWkVoU2RtSlViM2hqU0dkbll6STVjMkZYVVdkSk1GazBVbXBvUjFKcWRHTmpiSGgxV0VoU2QxbFhVbXRoVnpWdVQyazBNV050Vm5SUE1YaDVXRWMxWTJSSFduWmlibEYwWXpKc05scFViM2hNYWs1NVdsY3dOMWhJU21OaWJqRmpZMng0ZFZoSE5IVmlSMng2WkVOQ04xaElTbU5pYlVwMlkyMVNiR05xYjJkTldFSTBTVWhPZG1KSGJHdEpTRnBvWTJsbmRFeFhUblppUnpsNVRGaGtiMkZZVW14TFZIUmpZMng0ZFdaV2VIbFlSelJwV0Znd1BTQXFMeUpkZlE9PSAqLyJdfQ== */