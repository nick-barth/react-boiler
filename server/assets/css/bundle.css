html {
  font-family: 'Rajdhani', sans-serif;
  background-color: #191719;
  color: #e6dbdc;
  font-size: 21px;
  line-height: 140%;
  font-weight: 400;
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/Rajdhani-Light.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/Rajdhani-Regular.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 500;
  src: url("/fonts/Rajdhani-Medium.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/Rajdhani-SemiBold.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/Rajdhani-Bold.ttf");
}

body {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.layout {
  max-width: 100%;
  margin: auto;
  overflow-x: hidden;
  background-image: url("/images/textures/background-texture-small.jpg");
  background-repeat: repeat;
}

@media all and (min-width:1024px) {
  .layout {
    background-image: url("/images/textures/background-texture-medium.jpg");
  }
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Modular Scale
	 */
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.card__css-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  -ms-grid-columns: repeat(2, 1fr);
  grid-gap: 0.146rem;
  margin: 0 0 1.618rem;
  padding: 0 0.382rem;
}

.card {
  position: relative;
  background-color: rgba(0, 0, 0, 0.6);
  border: 1px outset #3f3f3f;
  cursor: pointer;
  overflow: hidden;
  line-height: 0;
}

.card:hover .card__tag-line,
.card:hover .card__name {
  opacity: 0;
}

.card:hover .card__bg {
  -webkit-transform: scale(1.6) rotate(5deg);
  -ms-transform: scale(1.6) rotate(5deg);
  -o-transform: scale(1.6) rotate(5deg);
  transform: scale(1.6) rotate(5deg);
}

.card__name {
  position: absolute;
  font-weight: 600;
  font-size: 0.618rem;
  text-transform: uppercase;
  bottom: 2.1rem;
  z-index: 4;
  line-height: 0;
  background-color: rgba(210, 39, 48, 0.8);
  padding: .45rem;
  -webkit-transition: all .2s;
  -o-transition: all .2s;
  transition: all .2s;
}

.card__bg {
  max-width: 100%;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.card__tag-line {
  position: relative;
  text-align: center;
  padding: 0.618rem 0;
  font-size: 0.618rem;
  text-transform: uppercase;
  -webkit-transition: all .2s;
  -o-transition: all .2s;
  transition: all .2s;
}

.card__accent {
  position: absolute;
  width: 100%;
  background-color: #d22730;
  height: 1px;
  top: 0;
  -webkit-transition: all .2s;
  -o-transition: all .2s;
  transition: all .2s;
}

.card__overlay {
  opacity: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  position: absolute;
  z-index: 10;
  -webkit-transition: all .2s;
  -o-transition: all .2s;
  transition: all .2s;
}

.card:hover .card__overlay {
  opacity: 100;
}

.card__hover-target {
  height: 70px;
  width: 70px;
  margin-top: -35px;
  margin-left: -35px;
  left: 50%;
  position: absolute;
  top: 50%;
  z-index: 10;
  -webkit-transition: .35s linear;
  -o-transition: .35s linear;
  transition: .35s linear;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  -o-transform: scale(0);
  transform: scale(0);
  opacity: 0;
  fill: #ffffff;
  pointer-events: none;
}

.card:hover .card__hover-target {
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  -o-transform: scale(1);
  transform: scale(1);
  height: 70px;
  width: 70px;
  margin-top: -35px;
  margin-left: -35px;
  -webkit-animation: rotateTarget;
  animation: rotateTarget;
  -webkit-animation-duration: 7.5s;
  animation-duration: 7.5s;
  -webkit-animation-timing-function: linear;
  animation-timing-function: linear;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
  -webkit-animation-delay: .35s;
  animation-delay: .35s;
  opacity: 100;
}

/*
 * Animations
 */

@-webkit-keyframes rotateTarget {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes rotateTarget {
  from {
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

/*
 * Media Queries
 */

@media all and (min-width:681px) {
  .card__css-grid {
    grid-template-columns: repeat(2, 1fr);
    -ms-grid-columns: repeat(2, 1fr);
    grid-gap: 0.382rem;
    margin: 0 0 2.618rem;
    padding: 0 0.618rem;
  }

  .card__name {
    font-size: 21px;
    bottom: 3.3rem;
    padding: .7rem;
  }

  .card__tag-line {
    font-size: 21px;
    padding: 21px 0;
  }

  .card__accent {
    height: 2px;
  }
}

@media all and (min-width:1024px) {
  .card__css-grid {
    grid-template-columns: repeat(3, 1fr);
    -ms-grid-columns: repeat(3, 1fr);
    padding: 0 1.618rem;
  }

  .card__name {
    bottom: 3rem;
  }
}

@media all and (min-width:1200px) {
  .card__css-grid {
    grid-template-columns: repeat(4, 1fr);
    -ms-grid-columns: repeat(4, 1fr);
    grid-gap: 21px;
  }
}

@media all and (min-width:1440px) {
  .card__css-grid {
    padding: 0 6.854rem;
    margin: 0 0 2.618rem;
  }

  .card__name {
    bottom: 3.3rem;
  }
}

@media all and (min-width:1720px) {
  .card__css-grid {
    margin: 0 0 4.236rem;
    padding: 0 11.089rem;
    grid-gap: 21px;
  }
}

.footer {
  padding: 0.618rem;
  text-align: center;
  font-size: 0.618rem;
  line-height: 140%;
  box-shadow: 0 0 12px 0 #d22730;
  background: #191719;
}

@media all and (min-width:681px) {
  .footer {
    padding: 21px 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .footer {
    padding: 21px 6.854rem;
  }
}

@media all and (min-width:1100px) {
  .footer {
    padding: 21px 11rem;
  }
}

@media all and (min-width:1200px) {
  .footer {
    padding: 21px 25rem;
  }
}

.header {
  display: table;
  text-align: center;
  width: 100%;
  padding: 2.618rem 0 1.618rem 0;
}

.header__logo-text {
  font-size: 1.618rem;
  vertical-align: middle;
  display: table-cell;
  font-weight: 500;
  line-height: 0;
}

.header__logo-emphasis {
  color: #d22730;
  font-weight: 700;
}

@media all and (min-width:681px) {
  .header {
    margin: 1.618rem 0 21px 0;
  }

  .header__logo-text {
    font-size: 2.618rem;
  }
}

@media all and (min-width:1024px) {
  .header {
    margin: 2.618rem 0 1.618rem 0;
  }

  .header__logo-text {
    font-size: 4.236rem;
  }
}

@media all and (min-width:1200px) {
  .header {
    margin: 4.236rem 0 2.618rem 0;
  }

  .header__logo-text {
    font-size: 4.236rem;
  }
}

.login {
  position: absolute;
  z-index: 100;
  left: 50%;
  background-color: red;
}

.list {
  border: 1px solid #ffffff;
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

.list {
  border: 1px solid #ffffff;
}

/*# sourceMappingURL=data:application/json;base64, */