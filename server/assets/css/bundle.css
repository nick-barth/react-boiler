:root {
  font-size: 18px;
}

html {
  font-family: 'Rajdhani', sans-serif;
  background-color: #191719;
  color: #e6dbdc;
  font-size: 1rem;
  line-height: 140%;
  font-weight: 400;
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 300;
  src: url("/fonts/Rajdhani-Light.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/Rajdhani-Regular.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 500;
  src: url("/fonts/Rajdhani-Medium.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/Rajdhani-SemiBold.ttf");
}

@font-face {
  font-family: "Rajdhani";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/Rajdhani-Bold.ttf");
}

body {
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

.grid {
  background-image: url("/images/textures/background-texture-large.jpg");
  background-repeat: repeat;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto;
  grid-template-areas: "header"
	"main"
	"footer";
  margin: 0;
  grid-gap: .64rem;
}

.layout {
  grid-area: main;
}

@media all and (min-width:1024px) {
  .grid {
    grid-template-columns: auto 1fr auto;
    grid-template-areas: "header header header"
		"ad-container-left main ad-container-right"
		"footer footer footer";
  }
}

/***
 * Variables
 * -
 */

:root {
  /*
	 * Modular Scale
	 */
  /*
	 * Theme
	 */
  /*
	 * Colors
	 */
  /*
	 * Texts
	 */
  /*
	 * Alert/Status colors
	 */
  /*
	 * Easings
	 */
}

/***
 * Media queries
 * -
 */

.ad-container-left {
  grid-area: ad-container-left;
  display: none;
}

.ad-container-right {
  grid-area: ad-container-right;
  display: none;
}

.ad-container-horizontal {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0 0 1.563rem;
  border: 2px solid white;
}

@media all and (min-width:1100px) {
  .ad-container-right,
  .ad-container-left {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    height: auto;
    border: 2px solid white;
  }
}

.banner {
  width: 100%;
  display: block;
  position: relative;
  line-height: 0;
  box-shadow: 0 0 3px 0 #d22730;
  border-top: 1px solid #d22730;
  border-bottom: 1px solid #d22730;
  margin: 0 0 1.25rem;
}

.banner__name {
  position: absolute;
  text-transform: uppercase;
  top: 50%;
  font-weight: 700;
  font-size: 1.25rem;
  text-shadow: 1px 1px 8px #d22730;
  padding: 0 .8rem;
}

.banner__img {
  height: 4.5rem;
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  -o-object-position: 100% 0;
  object-position: 100% 0;
}

/*
 * Media Queries
 */

@media all and (min-width:681px) {
  .banner__img {
    height: 8rem;
  }

  .banner__name {
    font-size: 1.32855rem;
    padding: 0 1rem;
  }
}

@media all and (min-width:1100px) {
  .banner__name {
    font-size: 1.563rem;
    padding: 0;
    text-align: center;
    width: 100%;
    letter-spacing: .5rem;
  }

  .banner {
    margin: 0 0 1.563rem;
  }
}

@media all and (min-width:1440px) {
  .banner__img {
    height: 10rem;
  }

  .banner__name {
    font-size: 1.66005rem;
  }
}

@media all and (min-width:1720px) {
  .banner__img {
    height: 11rem;
  }
}

.button__button {
  border: 2px solid #d22730;
  font-size: .8rem;
  padding: .8rem .8rem;
  -webkit-transition: all .25s ease-out;
  -o-transition: all .25s ease-out;
  transition: all .25s ease-out;
  font-family: 'Rajdhani';
  text-transform: uppercase;
  color: #d22730;
  font-weight: 600;
  margin: 0 0 1.563rem;
  background: #191719;
  background-image: -webkit-linear-gradient(#d22730, #d22730);
  background-image: linear-gradient(#d22730, #d22730);
  background-repeat: no-repeat;
  background-position: 50% 0%;
  background-size: 100% 0%;
  line-height: 0;
  cursor: pointer;
  -ms-flex-item-align: start;
  align-self: flex-start;
  width: 100%;
}

.button__button:hover {
  background-size: 100% 100%;
  color: #e6dbdc;
  box-shadow: 0 0 3px 0 #d22730;
}

.button__button:active {
  -webkit-transform: translateY(2px);
  -ms-transform: translateY(2px);
  -o-transform: translateY(2px);
  transform: translateY(2px);
}

.button__button:focus {
  outline: none;
}

@media all and (min-width:681px) {
  .button__button {
    padding: .8rem 1rem;
    width: auto;
    -ms-flex-item-align: center;
    align-self: center;
  }
}

@media all and (min-width:1100px) {
  .button__button {
    font-size: 0.85rem;
    padding: 1rem 1.25rem;
  }
}

.card {
  position: relative;
  border: 1px outset #3f3f3f;
  cursor: pointer;
  overflow: hidden;
  line-height: 0;
}

.card__name {
  position: absolute;
  font-weight: 600;
  font-size: .8rem;
  text-transform: uppercase;
  bottom: 32px;
  z-index: 20;
  line-height: 0;
  background-color: #d22730;
  padding: 0 .64rem;
  line-height: 1rem;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.card__image-container {
  height: 4.5rem;
  background-size: cover;
}

.card__tag-line {
  position: relative;
  text-align: center;
  padding: .512rem 0;
  font-size: .64rem;
  text-transform: uppercase;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
  width: 100%;
  background-color: #191719;
  z-index: 10;
  line-height: .8rem;
}

.card__accent {
  position: absolute;
  width: 100%;
  background-color: #d22730;
  height: 1px;
  top: 0;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.card__hover-target {
  display: none;
}

/*
 * Animations
 */

@-webkit-keyframes rotateTarget {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes rotateTarget {
  from {
    -webkit-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

/*
 * Media Queries
 */

@media all and (min-width:681px) {
  .card__name {
    font-size: 1rem;
    bottom: 1.8rem;
    padding: .5rem .8rem;
  }

  .card__tag-line {
    font-size: 0.85rem;
    padding: .8rem 0;
  }

  .card__accent {
    height: 2px;
  }
}

@media all and (min-width:1024px) {
  .card__name {
    bottom: 0;
  }

  .card__tag-line {
    -webkit-transform: translateY(1.7rem);
    -ms-transform: translateY(1.7rem);
    -o-transform: translateY(1.7rem);
    transform: translateY(1.7rem);
    position: absolute;
    bottom: 0;
  }

  .card:hover .card__name {
    -webkit-transform: translateY(-1.7rem);
    -ms-transform: translateY(-1.7rem);
    -o-transform: translateY(-1.7rem);
    transform: translateY(-1.7rem);
  }

  .card__hover-target {
    display: block;
    height: 60px;
    width: 60px;
    margin-top: -30px;
    margin-left: -30px;
    left: 50%;
    position: absolute;
    top: 35%;
    z-index: 10;
    -webkit-transition: .35s linear;
    -o-transition: .35s linear;
    transition: .35s linear;
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    -o-transform: scale(0);
    transform: scale(0);
    opacity: 0;
    fill: #ffffff;
    pointer-events: none;
  }

  .card:hover .card__hover-target {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1);
    height: 60px;
    width: 60px;
    margin-top: -30px;
    margin-left: -30px;
    -webkit-animation: rotateTarget;
    animation: rotateTarget;
    -webkit-animation-duration: 7.5s;
    animation-duration: 7.5s;
    -webkit-animation-timing-function: linear;
    animation-timing-function: linear;
    -webkit-animation-iteration-count: infinite;
    animation-iteration-count: infinite;
    -webkit-animation-delay: .36s;
    animation-delay: .36s;
    opacity: 100;
  }

  .card:hover .card__bg {
    -webkit-transform: scale(1.5) rotate(8deg);
    -ms-transform: scale(1.5) rotate(8deg);
    -o-transform: scale(1.5) rotate(8deg);
    transform: scale(1.5) rotate(8deg);
  }

  .card:hover .card__tag-line {
    -webkit-transform: translateY(0);
    -ms-transform: translateY(0);
    -o-transform: translateY(0);
    transform: translateY(0);
  }

  .card:hover .card__overlay {
    opacity: 100;
  }

  .card__overlay {
    opacity: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    position: absolute;
    z-index: 10;
    -webkit-transition: all .2s ease-in;
    -o-transition: all .2s ease-in;
    transition: all .2s ease-in;
  }
}

.champion-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  -ms-grid-columns: repeat(2, 1fr);
  grid-gap: .512rem;
  margin: 0 0 1.25rem;
}

@media all and (min-width:681px) {
  .champion-grid {
    grid-template-columns: repeat(2, 1fr);
    -ms-grid-columns: repeat(2, 1fr);
    grid-gap: .64rem;
    margin: 0 0 1.563rem;
  }
}

@media all and (min-width:1024px) {
  .champion-grid {
    grid-template-columns: repeat(3, 1fr);
    -ms-grid-columns: repeat(3, 1fr);
  }
}

@media all and (min-width:1440px) {
  .champion-grid {
    margin: 0 0 1.563rem;
    grid-template-columns: repeat(4, 1fr);
    -ms-grid-columns: repeat(4, 1fr);
    grid-gap: .8rem;
    margin: 0 0 8rem;
  }
}

@media all and (min-width:1720px) {
  .champion-grid {
    margin: 0 0 1.953rem;
    grid-gap: 1rem;
  }
}

.footer {
  padding: .8rem;
  font-size: .8rem;
  line-height: 140%;
  border-top: 1px solid #d22730;
  box-shadow: 0 0 3px 0 #d22730;
  background: #191719;
  grid-area: footer;
}

.footer__text {
  max-width: 30rem;
  text-align: center;
  margin: 0 auto 0;
}

@media all and (min-width:1440px) {
  .footer {
    padding: 1rem 25rem;
  }
}

.form__title {
  color: #d22730;
  margin: 0 0 1rem;
  font-weight: 600;
  font-size: 1.0625rem;
  text-align: center;
}

.form__input-el {
  background: rgba(0, 0, 0, 0.7);
  overflow: hidden;
  border: 1px solid #d22730;
  min-width: 100%;
  color: #e6dbdc;
  text-transform: uppercase;
  font-size: 0.85rem;
  font-family: 'Rajdhani';
  min-height: 4rem;
  margin: 0 0 .8rem;
}

.form__input-el:focus {
  outline: none;
  box-shadow: 0 0 3px 0 #d22730;
}

@media all and (min-width:1100px) {
  .form__title {
    font-size: 1.25rem;
  }
}

.header-container {
  padding: .8rem .64rem;
  background-color: #191719;
  margin: 0 0 1.25rem;
  border-bottom: 1px solid #d22730;
  box-shadow: 0 0 3px 0 #d22730;
  z-index: 10;
  grid-area: header;
}

.header {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.logo__img {
  width: 0.9375rem;
  height: 0.9375rem;
  margin: 0 .512rem;
}

.logo__text {
  font-size: 1rem;
  font-weight: 400;
  line-height: 0;
}

.logo__text_emphasis {
  color: #d22730;
  font-weight: 700;
}

.header__button {
  border: 2px solid #d22730;
  font-size: .8rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0.32rem .64rem;
  -webkit-transition: all .25s ease-out;
  -o-transition: all .25s ease-out;
  transition: all .25s ease-out;
  background: #191719;
  background-image: -webkit-linear-gradient(#d22730, #d22730);
  background-image: linear-gradient(#d22730, #d22730);
  background-repeat: no-repeat;
  background-position: 50% 0%;
  background-size: 100% 0%;
  cursor: pointer;
  color: #d22730;
  font-weight: 500;
}

.header__button__icon {
  margin: 0 6px 0 0;
}

@media all and (min-width:681px) {
  .header-container {
    padding: 1rem .8rem;
    margin: 0 0 1.563rem;
  }

  .logo__img {
    width: 1.25rem;
    height: 1.25rem;
    margin: 0 .512rem;
  }

  .logo__text {
    font-size: 1.25rem;
    font-weight: 400;
    line-height: 0;
  }

  .header__button {
    font-size: 1rem;
    padding: .64rem .64rem;
  }

  .header__icon {
    width: 1rem;
    height: 1rem;
    margin: 0 .64rem 0 0;
  }
}

@media all and (min-width:1024px) {
  .header-container {
    padding: .8rem 1.563rem;
  }
}

@media all and (min-width:1100px) {
  .header__button:hover {
    background-size: 100% 100%;
    color: #e6dbdc;
    box-shadow: 0 0 3px 0 #d22730;
  }

  .header__button:active {
    -webkit-transform: translateY(2px);
    -ms-transform: translateY(2px);
    -o-transform: translateY(2px);
    transform: translateY(2px);
  }
}

@media all and (min-width:1200px) {
  .header-container {
    padding: .8rem 0;
  }

  .header {
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }
}

.line-graph {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  height: 20px;
  background: #f3f3f3;
  position: relative;
}

.line-graph__up-vote-percent {
  height: 100%;
  background: #d22730;
  -webkit-transition: all .25s ease-out;
  -o-transition: all .25s ease-out;
  transition: all .25s ease-out;
}

.line-graph__text {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0 .8rem;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: .8rem;
  color: #e6dbdc;
  width: 100%;
  position: absolute;
}

.login {
  position: absolute;
  z-index: 100;
  left: 50%;
  background-color: red;
}

.matchups-wrapper {
  max-width: 27rem;
  margin: 0 auto 0;
}

.matchups-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.matchups-header {
  font-size: 1.0625rem;
  font-weight: 600;
  color: #d22730;
  text-transform: uppercase;
  text-align: center;
  margin: 0 0 1rem;
}

.matchups {
  text-transform: uppercase;
  padding: 0 0.4rem 0;
}

.matchups__title {
  margin-bottom: .64rem;
}

.matchups__matchup-info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-bottom: 1px solid #d22730;
  border-left: 1px outset #3f3f3f;
  border-right: 1px outset #3f3f3f;
  border-top: 1px outset #3f3f3f;
  background: rgba(0, 0, 0, 0.7);
  margin-bottom: .64rem;
}

.matchups__link {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.matchups__matchup-card:last-child {
  margin: 0 0 1rem;
}

.matchups__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  font-size: 0.9375rem;
}

.matchups__champ-name {
  position: absolute;
  -ms-flex-item-align: end;
  align-self: flex-end;
  font-weight: 600;
  font-size: 1rem;
  z-index: 20;
  background-color: #d22730;
  padding: .64rem .8rem;
  line-height: .8rem;
  -webkit-transition: all .2s ease-in;
  -o-transition: all .2s ease-in;
  transition: all .2s ease-in;
}

.matchups__champ-img-container {
  overflow: hidden;
  width: 6rem;
}

.matchups__champ-img {
  width: 11rem;
  height: 5rem;
  -o-object-fit: cover;
  object-fit: cover;
  -o-object-position: -1.9rem 13px;
  object-position: -1.9rem 13px;
  -webkit-transform: scale(1.4);
  -ms-transform: scale(1.4);
  -o-transform: scale(1.4);
  transform: scale(1.4);
}

.matchups__vote {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-weight: 500;
  z-index: 10;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  padding: 0 .8rem;
}

.matchups__vote-up-flex,
.matchups__vote-down-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
}

.matchups__item-up {
  margin: 0 1rem 0 0;
}

.matchups__up-arrow,
.matchups__down-arrow {
  width: 1rem;
  height: 1rem;
  margin: 0 7px 0 0;
  -ms-flex-item-align: center;
  align-self: center;
}

.matchups__show-more-btn {
  border: 2px solid #d22730;
  font-size: .8rem;
  padding: .8rem .8rem;
  -webkit-transition: all .25s ease-out;
  -o-transition: all .25s ease-out;
  transition: all .25s ease-out;
  font-family: 'Rajdhani';
  text-transform: uppercase;
  color: #d22730;
  font-weight: 600;
  margin: 0 0 1.25rem;
  background: #191719;
  background-image: -webkit-linear-gradient(#d22730, #d22730);
  background-image: linear-gradient(#d22730, #d22730);
  background-position: 50% 0%;
  background-size: 100% 0%;
  background-repeat: no-repeat;
  line-height: 0;
  width: 100%;
  margin: 0 0 1.563rem;
  cursor: pointer;
}

.matchups__show-more-btn:focus {
  outline: none;
}

/*
 * Media Queries
 */

@media all and (min-width:681px) {
  .matchups__champ-img-container {
    overflow: hidden;
    width: 8rem;
  }
}

@media all and (min-width:1024px) {
  .matchups-flex {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }

  .matchups-wrapper {
    max-width: none;
    margin: 0;
  }

  .matchups__item {
    width: 10rem;
  }
}

@media all and (min-width:1100px) {
  .matchups__show-more-btn:hover {
    background-size: 100% 100%;
    color: #e6dbdc;
    box-shadow: 0 0 3px 0 #d22730;
  }

  .matchups__show-more-btn:active {
    -webkit-transform: translateY(2px);
    -ms-transform: translateY(2px);
    -o-transform: translateY(2px);
    transform: translateY(2px);
  }
}

/*
 * Searchbar
 * =========
 */

.searchbar {
  height: 1rem;
  text-align: center;
  padding-bottom: 5rem;
}

input {
  outline: none;
  background-color: transparent;
  border: none;
  color: #F8F8FF;
  text-shadow: 0px 0px 0px #F8F8FF;
  -webkit-text-fill-color: transparent;
  opacity: .7;
}

.searchbar__bar {
  margin: auto;
  width: 20rem;
  border-bottom: 1px solid #F8F8FF;
  padding: .5rem;
  font-size: 1.3rem;
}

.tips {
  text-transform: uppercase;
  padding: 0 .8rem;
  font-weight: 300;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 27rem;
  margin: 0 auto 0;
}

.tips__title {
  color: #d22730;
  margin: 0 0 1rem;
  font-weight: 600;
  font-size: 1.0625rem;
  text-align: center;
}

.tips__list {
  padding: 0;
  margin: 0;
}

.tips__tip {
  padding: .8rem .64rem;
  background: rgba(0, 0, 0, 0.7);
  margin-bottom: .64rem;
  border: 1px outset #3f3f3f;
  border-bottom: solid 1px #d22730;
  list-style: none;
}

.tips__tip:last-child {
  margin: 0 0 1rem;
}

.tips__tip-name {
  font-size: 0.85rem;
}

.tips__tip-name_big-white-quote {
  font-size: 1rem;
  font-weight: 600;
  margin: 0 0 0 3px;
}

.tips__tip-name_big-red-quote {
  font-size: 1rem;
  color: #d22730;
  font-weight: 600;
  margin: 0 3px 0 0;
}

.tips__show-more-btn {
  border: 2px solid #d22730;
  font-size: .8rem;
  padding: .8rem .8rem;
  -webkit-transition: all .25s ease-out;
  -o-transition: all .25s ease-out;
  transition: all .25s ease-out;
  font-family: 'Rajdhani';
  text-transform: uppercase;
  color: #d22730;
  font-weight: 600;
  margin: 0 0 1.25rem;
  background: #191719;
  background-image: -webkit-linear-gradient(#d22730, #d22730);
  background-image: linear-gradient(#d22730, #d22730);
  background-position: 50% 0%;
  background-size: 100% 0%;
  background-repeat: no-repeat;
  line-height: 0;
  width: 100%;
  margin: 0 0 1.563rem;
  cursor: pointer;
}

.tips__show-more-btn:focus {
  outline: none;
}

/*
 * Media Queries
 */

@media all and (min-width:1100px) {
  .tips {
    max-width: 37rem;
  }

  .tips__title {
    font-size: 1.25rem;
  }

  .tips__tip-name {
    font-size: 1rem;
  }

  .tips__show-more-btn {
    font-size: 0.85rem;
    padding: 0.85rem;
  }

  .tips__show-more-btn:hover {
    background-size: 100% 100%;
    color: #e6dbdc;
    box-shadow: 0 0 3px 0 #d22730;
  }

  .tips__show-more-btn:active {
    -webkit-transform: translateY(2px);
    -ms-transform: translateY(2px);
    -o-transform: translateY(2px);
    transform: translateY(2px);
  }

  .tips__tip-name_big-red-quote,
  .tips__tip-name_big-white-quote {
    font-size: 1.0625rem;
  }
}

.vote-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.vote {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-weight: 500;
}

.vote__item-up {
  margin: 0 1rem 0 0;
}

.vote__up-arrow,
.vote__down-arrow {
  width: .8rem;
  height: .8rem;
  margin: 0 7px 0 0;
}

@media all and (min-width:1100px) {
  .vote {
    font-size: 0.9375rem;
  }

  .vote__up-arrow,
  .vote__down-arrow {
    width: .9rem;
    height: .9rem;
    margin: 0 7px 0 0;
  }
}

.ad-vertical-example-1 {
  height: 150px;
  background: white;
  color: black;
}

.ad-vertical-example-2 {
  height: 400px;
  background: black;
  color: white;
}

.ad-horizontal-example {
  height: 70px;
  background: white;
  color: black;
}

/*# sourceMappingURL=data:application/json;base64, */